##
## This file is part of the coreboot project.
##
## Copyright (C) 2012 Alexandru Gagniuc <mr.nuke.me@gmail.com>
## Copyright (C) 2009-2010 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

mainmenu "coreboot configuration"

menu "General setup"

config LOCALVERSION
	string "Local version string"
	help
	  Append an extra string to the end of the coreboot version.

	  This can be useful if, for instance, you want to append the
	  respective board's hostname or some other identifying string to
	  the coreboot version number, so that you can easily distinguish
	  boot logs of different boards from each other.

config CBFS_PREFIX
	string "CBFS prefix to use"
	default "fallback"
	help
	  Select the prefix to all files put into the image. It's "fallback"
	  by default, "normal" is a common alternative.

config COMMON_CBFS_SPI_WRAPPER
	bool
	default n
	depends on SPI_FLASH
	depends on !ARCH_X86
	help
	 Use common wrapper to interface CBFS to SPI bootrom.

config MULTIPLE_CBFS_INSTANCES
	bool "Multiple CBFS instances in the bootrom"
	default n
	help
	  Account for the firmware image containing more than one CBFS
	  instance. Locations of instances are known at build time and are
	  communicated between coreboot stages to make sure the next stage is
	  loaded from the appropriate instance.

choice
	prompt "Compiler to use"
	default COMPILER_GCC
	help
	  This option allows you to select the compiler used for building
	  coreboot.
	  You must build the coreboot crosscompiler for the board that you
	  have selected.

	  To build all the GCC crosscompilers (takes a LONG time), run:
	    make crossgcc

	  For help on individual architectures, run the command:
	    make help_toolchain

config COMPILER_GCC
	bool "GCC"
	help
	  Use the GNU Compiler Collection (GCC) to build coreboot.

	  For details see http://gcc.gnu.org.

config COMPILER_LLVM_CLANG
	bool "LLVM/clang (TESTING ONLY - Not currently working)"
	help
	  Use LLVM/clang to build coreboot.  To use this, you must build the
	  coreboot version of the clang compiler.  Run the command
	    make clang
	  Note that this option is not currently working correctly and should
	  really only be selected if you're trying to work on getting clang
	  operational.

	  For details see http://clang.llvm.org.

endchoice

config ANY_TOOLCHAIN
	bool "Allow building with any toolchain"
	default n
	depends on COMPILER_GCC
	help
	  Many toolchains break when building coreboot since it uses quite
	  unusual linker features. Unless developers explicitely request it,
	  we'll have to assume that they use their distro compiler by mistake.
	  Make sure that using patched compilers is a conscious decision.

config CCACHE
	bool "Use ccache to speed up (re)compilation"
	default n
	help
	  Enables the use of ccache for faster builds.

	  Requires the ccache utility in your system $PATH.

	  For details see https://ccache.samba.org.

config FMD_GENPARSER
	bool "Generate flashmap descriptor parser using flex and bison"
	default n
	help
	  Enable this option if you are working on the flashmap descriptor
	  parser and made changes to fmd_scanner.l or fmd_parser.y.

	  Otherwise, say N to use the provided pregenerated scanner/parser.

config SCONFIG_GENPARSER
	bool "Generate SCONFIG parser using flex and bison"
	default n
	help
	  Enable this option if you are working on the sconfig device tree
	  parser and made changes to sconfig.l or sconfig.y.

	  Otherwise, say N to use the provided pregenerated scanner/parser.

config USE_OPTION_TABLE
	bool "Use CMOS for configuration values"
	default n
	depends on HAVE_OPTION_TABLE
	help
	  Enable this option if coreboot shall read options from the "CMOS"
	  NVRAM instead of using hard-coded values.

config STATIC_OPTION_TABLE
	bool "Load default configuration values into CMOS on each boot"
	default n
	depends on USE_OPTION_TABLE
	help
	  Enable this option to reset "CMOS" NVRAM values to default on
	  every boot.  Use this if you want the NVRAM configuration to
	  never be modified from its default values.

config UNCOMPRESSED_RAMSTAGE
	bool
	default n

config COMPRESS_RAMSTAGE
	bool "Compress ramstage with LZMA"
	default y if !UNCOMPRESSED_RAMSTAGE
	default n
	help
	  Compress ramstage to save memory in the flash image. Note
	  that decompression might slow down booting if the boot flash
	  is connected through a slow link (i.e. SPI).

config COMPRESS_PRERAM_STAGES
	bool "Compress romstage and verstage with LZ4"
	depends on !ARCH_X86
	default y
	help
	  Compress romstage and (if it exists) verstage with LZ4 to save flash
	  space and speed up boot, since the time for reading the image from SPI
	  (and in the vboot case verifying it) is usually much greater than the
	  time spent decompressing. Doesn't work for XIP stages (assume all
	  ARCH_X86 for now) for obvious reasons.

config INCLUDE_CONFIG_FILE
	bool "Include the coreboot .config file into the ROM image"
	default y
	help
	  Include the .config file that was used to compile coreboot
	  in the (CBFS) ROM image. This is useful if you want to know which
	  options were used to build a specific coreboot.rom image.

	  Saying Y here will increase the image size by 2-3KB.

	  You can use the following command to easily list the options:

	    grep -a CONFIG_ coreboot.rom

	  Alternatively, you can also use cbfstool to print the image
	  contents (including the raw 'config' item we're looking for).

	  Example:

	    $ cbfstool coreboot.rom print
	    coreboot.rom: 4096 kB, bootblocksize 1008, romsize 4194304,
	                                               offset 0x0
	    Alignment: 64 bytes

	    Name                           Offset     Type         Size
	    cmos_layout.bin                0x0        cmos layout  1159
	    fallback/romstage              0x4c0      stage        339756
	    fallback/ramstage              0x53440    stage        186664
	    fallback/payload               0x80dc0    payload      51526
	    config                         0x8d740    raw          3324
	    (empty)                        0x8e480    null         3610440

config EARLY_CBMEM_INIT
	def_bool !LATE_CBMEM_INIT

config COLLECT_TIMESTAMPS
	bool "Create a table of timestamps collected during boot"
	default n
	help
	  Make coreboot create a table of timer-ID/timer-value pairs to
	  allow measuring time spent at different phases of the boot process.

config USE_BLOBS
	bool "Allow use of binary-only repository"
	default n
	help
	  This draws in the blobs repository, which contains binary files that
	  might be required for some chipsets or boards.
	  This flag ensures that a "Free" option remains available for users.

config COVERAGE
	bool "Code coverage support"
	depends on COMPILER_GCC
	default n
	help
	  Add code coverage support for coreboot. This will store code
	  coverage information in CBMEM for extraction from user space.
	  If unsure, say N.

config RELOCATABLE_MODULES
	bool
	default n
	help
	 If RELOCATABLE_MODULES is selected then support is enabled for
	 building relocatable modules in the RAM stage. Those modules can be
	 loaded anywhere and all the relocations are handled automatically.

config RELOCATABLE_RAMSTAGE
	depends on EARLY_CBMEM_INIT
	bool "Build the ramstage to be relocatable in 32-bit address space."
	default n
	select RELOCATABLE_MODULES
	help
	 The reloctable ramstage support allows for the ramstage to be built
	 as a relocatable module. The stage loader can identify a place
	 out of the OS way so that copying memory is unnecessary during an S3
	 wake. When selecting this option the romstage is responsible for
	 determing a stack location to use for loading the ramstage.

config CACHE_RELOCATED_RAMSTAGE_OUTSIDE_CBMEM
	depends on RELOCATABLE_RAMSTAGE
	bool "Cache the relocated ramstage outside of cbmem."
	default n
	help
	 The relocated ramstage is saved in an area specified by the
	 by the board and/or chipset.

config FLASHMAP_OFFSET
	hex "Flash Map Offset"
	default 0x00670000 if NORTHBRIDGE_INTEL_SANDYBRIDGE
	default 0x00610000 if NORTHBRIDGE_INTEL_IVYBRIDGE
	default CBFS_SIZE if !ARCH_X86
	default 0
	help
	  Offset of flash map in firmware image

# TODO: This doesn't belong here, move to src/arch/x86/Kconfig
choice
	prompt "Bootblock behaviour"
	default BOOTBLOCK_SIMPLE

config BOOTBLOCK_SIMPLE
	bool "Always load fallback"

config BOOTBLOCK_NORMAL
	bool "Switch to normal if CMOS says so"

endchoice

# To be selected by arch, SoC or mainboard if it does not want use the normal
# src/lib/bootblock.c#main() C entry point.
config BOOTBLOCK_CUSTOM
	bool
	default n

config BOOTBLOCK_SOURCE
	string
	default "bootblock_simple.c" if BOOTBLOCK_SIMPLE
	default "bootblock_normal.c" if BOOTBLOCK_NORMAL

# To be selected by arch or platform if a C environment is available during the
# bootblock. Normally this signifies availability of RW memory (e.g. SRAM).
config C_ENVIRONMENT_BOOTBLOCK
	bool
	default n

config SKIP_MAX_REBOOT_CNT_CLEAR
	bool "Do not clear reboot count after successful boot"
	default n
	depends on BOOTBLOCK_NORMAL
	help
	  Do not clear the reboot count immediately after successful boot.
	  Set to allow the payload to control normal/fallback image recovery.
	  Note that it is the responsibility of the payload to reset the
	  normal boot bit to 1 after each successsful boot.

config UPDATE_IMAGE
	bool "Update existing coreboot.rom image"
	default n
	help
	  If this option is enabled, no new coreboot.rom file
	  is created. Instead it is expected that there already
	  is a suitable file for further processing.
	  The bootblock will not be modified.

	  If unsure, select 'N'

config GENERIC_GPIO_LIB
	bool
	default n
	help
	  If enabled, compile the generic GPIO library. A "generic" GPIO
	  implies configurability usually found on SoCs, particularly the
	  ability to control internal pull resistors.

config BOARD_ID_AUTO
	bool
	default n
	help
	  Mainboards that can read a board ID from the hardware straps
	  (ie. GPIO) select this configuration option.

config BOARD_ID_MANUAL
	bool
	default n
	depends on !BOARD_ID_AUTO
	help
	  If you want to maintain a board ID, but the hardware does not
	  have straps to automatically determine the ID, you can say Y
	  here and add a file named 'board_id' to CBFS. If you don't know
	  what this is about, say N.

config BOARD_ID_STRING
	string "Board ID"
	default "(none)"
	depends on BOARD_ID_MANUAL
	help
	  This string is placed in the 'board_id' CBFS file for indicating
	  board type.

config RAM_CODE_SUPPORT
	bool
	default n
	help
	  If enabled, coreboot discovers RAM configuration (value obtained by
	  reading board straps) and stores it in coreboot table.

config BOOTSPLASH_IMAGE
	bool "Add a bootsplash image"
	help
	  Select this option if you have a bootsplash image that you would
	  like to add to your ROM.

	  This will only add the image to the ROM. To actually run it check
	  options under 'Display' section.

config BOOTSPLASH_FILE
	string "Bootsplash path and filename"
	depends on BOOTSPLASH_IMAGE
	default "bootsplash.jpg"
	help
	  The path and filename of the file to use as graphical bootsplash
	  screen. The file format has to be jpg.

endmenu


config ACPI_SATA_GENERATOR
	bool
	default n
	help
	  Use acpi sata port generator.

menu "Mainboard"

choice
	prompt "Mainboard vendor"
	default VENDOR_EMULATION

config VENDOR_SAMSUNG
	bool "SAMSUNG"
config VENDOR_A_TREND
	bool "A-Trend"
config VENDOR_SUPERMICRO
	bool "Supermicro"
config VENDOR_PACKARDBELL
	bool "Packard Bell"
config VENDOR_KONTRON
	bool "Kontron"
config VENDOR_AMD
	bool "AMD"
config VENDOR_LINUTOP
	bool "Linutop"
config VENDOR_INTEL
	bool "Intel"
config VENDOR_GIGABYTE
	bool "GIGABYTE"
config VENDOR_WINENT
	bool "Win Enterprises"
config VENDOR_IWAVE
	bool "iWave"
config VENDOR_SOYO
	bool "Soyo"
config VENDOR_SIEMENS
	bool "Siemens"
config VENDOR_IEI
	bool "IEI"
config VENDOR_AVALUE
	bool "AVALUE"
config VENDOR_BIOSTAR
	bool "Biostar"
config VENDOR_DIGITALLOGIC
	bool "DIGITAL-LOGIC"
config VENDOR_ASUS
	bool "ASUS"
config VENDOR_GIZMOSPHERE
	bool "GizmoSphere"
config VENDOR_ARTECGROUP
	bool "Artec Group"
config VENDOR_IWILL
	bool "IWILL"
config VENDOR_BACHMANN
	bool "Bachmann electronic"
config VENDOR_WYSE
	bool "Wyse"
config VENDOR_LIPPERT
	bool "LiPPERT"
config VENDOR_TECHNEXION
	bool "Technexion"
config VENDOR_NOKIA
	bool "Nokia"
config VENDOR_DMP
	bool "DMP"
config VENDOR_SUNW
	bool "Sun Microsystems"
config VENDOR_VIA
	bool "VIA"
config VENDOR_BCOM
	bool "BCOM"
config VENDOR_TYAN
	bool "Tyan"
config VENDOR_ABIT
	bool "Abit"
config VENDOR_IBASE
	bool "iBase"
config VENDOR_BIFFEROS
	bool "Bifferos"
config VENDOR_BROADCOM
	bool "Broadcom"
config VENDOR_TI
	bool "TI"
config VENDOR_JETWAY
	bool "Jetway"
config VENDOR_GOOGLE
	bool "Google"
config VENDOR_LANNER
	bool "Lanner"
config VENDOR_APPLE
	bool "Apple"
config VENDOR_EMULATION
	bool "Emulation"
config VENDOR_NVIDIA
	bool "NVIDIA"
config VENDOR_LENOVO
	bool "Lenovo"
config VENDOR_PCENGINES
	bool "PC Engines"
config VENDOR_ASROCK
	bool "ASROCK"
config VENDOR_ADLINK
	bool "ADLINK"
config VENDOR_AOPEN
	bool "AOpen"
config VENDOR_RCA
	bool "RCA"
config VENDOR_ESD
	bool "electronic system design"
config VENDOR_ADVANSUS
	bool "Advansus"
config VENDOR_THOMSON
	bool "Thomson"
config VENDOR_GETAC
	bool "Getac"
config VENDOR_ECS
	bool "ECS"
config VENDOR_COMPAQ
	bool "Compaq"
config VENDOR_MSI
	bool "MSI"
config VENDOR_PURISM
	bool "Purism"
config VENDOR_HP
	bool "HP"
config VENDOR_MITAC
	bool "Mitac"
config VENDOR_TRAVERSE
	bool "Traverse Technologies"
config VENDOR_RODA
	bool "Roda"
config VENDOR_AAEON
	bool "Aaeon"
config VENDOR_CUBIETECH
	bool "Cubietech"
config VENDOR_AZZA
	bool "AZZA"
config VENDOR_NEC
	bool "NEC"
config VENDOR_BAP
	bool "BAP"

endchoice



choice
	prompt "Mainboard model"

config BOARD_EMULATION_QEMU_X86_Q35
	bool "QEMU x86 q35/ich9 (aka qemu -M q35, since v1.4)"
config BOARD_EMULATION_QEMU_ARMV7
	bool "QEMU armv7 (vexpress-a9)"
config BOARD_EMULATION_QEMU_UCB_RISCV
	bool "QEMU ucb riscv"
config BOARD_EMULATION_QEMU_POWER8
	bool "QEMU power8"
config BOARD_EMULATION_SPIKE_UCB_RISCV
	bool "SPIKE ucb riscv"
config BOARD_EMULATION_QEMU_X86_I440FX
	bool "QEMU x86 i440fx/piix4 (aka qemu -M pc)"

endchoice

config BOARD_EMULATION_QEMU_X86
	bool
	default y
	depends on BOARD_EMULATION_QEMU_X86_I440FX || BOARD_EMULATION_QEMU_X86_Q35



config BOARD_SPECIFIC_OPTIONS # dummy
	def_bool y
	select CPU_QEMU_X86
	select SOUTHBRIDGE_INTEL_I82801IX
	select IOAPIC_INTERRUPTS_ON_APIC_SERIAL_BUS
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
#	select HAVE_OPTION_TABLE
#	select HAVE_PIRQ_TABLE
	select HAVE_ACPI_TABLES
	select BOARD_ROMSIZE_KB_256
	select MAINBOARD_HAS_NATIVE_VGA_INIT
	select MAINBOARD_DO_NATIVE_VGA_INIT
	select MAINBOARD_HAS_NATIVE_VGA_INIT_TEXTMODECFG

config MAINBOARD_DIR
	string
	default emulation/qemu-q35

config MAINBOARD_PART_NUMBER
	string
	default "QEMU x86 q35/ich9"

config BOOTBLOCK_MAINBOARD_INIT
	string
	default "mainboard/emulation/qemu-q35/bootblock.c"

config MMCONF_BASE_ADDRESS
	hex
	default 0xb0000000

config DCACHE_RAM_BASE
	hex
	default 0xd0000

config DCACHE_RAM_SIZE
	hex
	default 0x10000


config MAINBOARD_VENDOR
	string
	default "Emulation"



config BOARD_ROMSIZE_KB_64
	bool
config BOARD_ROMSIZE_KB_128
	bool
config BOARD_ROMSIZE_KB_256
	bool
config BOARD_ROMSIZE_KB_512
	bool
config BOARD_ROMSIZE_KB_1024
	bool
config BOARD_ROMSIZE_KB_2048
	bool
config BOARD_ROMSIZE_KB_4096
	bool
config BOARD_ROMSIZE_KB_8192
	bool
config BOARD_ROMSIZE_KB_12288
	bool
config BOARD_ROMSIZE_KB_16384
	bool

# TODO: No help text possible for choice fields?
choice
	prompt "ROM chip size"
	default COREBOOT_ROMSIZE_KB_64 if BOARD_ROMSIZE_KB_64
	default COREBOOT_ROMSIZE_KB_128 if BOARD_ROMSIZE_KB_128
	default COREBOOT_ROMSIZE_KB_256 if BOARD_ROMSIZE_KB_256
	default COREBOOT_ROMSIZE_KB_512 if BOARD_ROMSIZE_KB_512
	default COREBOOT_ROMSIZE_KB_1024 if BOARD_ROMSIZE_KB_1024
	default COREBOOT_ROMSIZE_KB_2048 if BOARD_ROMSIZE_KB_2048
	default COREBOOT_ROMSIZE_KB_4096 if BOARD_ROMSIZE_KB_4096
	default COREBOOT_ROMSIZE_KB_8192 if BOARD_ROMSIZE_KB_8192
	default COREBOOT_ROMSIZE_KB_12288 if BOARD_ROMSIZE_KB_12288
	default COREBOOT_ROMSIZE_KB_16384 if BOARD_ROMSIZE_KB_16384
	help
	  Select the size of the ROM chip you intend to flash coreboot on.

	  The build system will take care of creating a coreboot.rom file
	  of the matching size.

config COREBOOT_ROMSIZE_KB_64
	bool "64 KB"
	help
	  Choose this option if you have a 64 KB ROM chip.

config COREBOOT_ROMSIZE_KB_128
	bool "128 KB"
	help
	  Choose this option if you have a 128 KB ROM chip.

config COREBOOT_ROMSIZE_KB_256
	bool "256 KB"
	help
	  Choose this option if you have a 256 KB ROM chip.

config COREBOOT_ROMSIZE_KB_512
	bool "512 KB"
	help
	  Choose this option if you have a 512 KB ROM chip.

config COREBOOT_ROMSIZE_KB_1024
	bool "1024 KB (1 MB)"
	help
	  Choose this option if you have a 1024 KB (1 MB) ROM chip.

config COREBOOT_ROMSIZE_KB_2048
	bool "2048 KB (2 MB)"
	help
	  Choose this option if you have a 2048 KB (2 MB) ROM chip.

config COREBOOT_ROMSIZE_KB_4096
	bool "4096 KB (4 MB)"
	help
	  Choose this option if you have a 4096 KB (4 MB) ROM chip.

config COREBOOT_ROMSIZE_KB_8192
	bool "8192 KB (8 MB)"
	help
	  Choose this option if you have a 8192 KB (8 MB) ROM chip.

config COREBOOT_ROMSIZE_KB_12288
	bool "12288 KB (12 MB)"
	help
	  Choose this option if you have a 12288 KB (12 MB) ROM chip.

config COREBOOT_ROMSIZE_KB_16384
	bool "16384 KB (16 MB)"
	help
	  Choose this option if you have a 16384 KB (16 MB) ROM chip.

endchoice

# Map the config names to an integer (KB).
config COREBOOT_ROMSIZE_KB
	int
	default 64 if COREBOOT_ROMSIZE_KB_64
	default 128 if COREBOOT_ROMSIZE_KB_128
	default 256 if COREBOOT_ROMSIZE_KB_256
	default 512 if COREBOOT_ROMSIZE_KB_512
	default 1024 if COREBOOT_ROMSIZE_KB_1024
	default 2048 if COREBOOT_ROMSIZE_KB_2048
	default 4096 if COREBOOT_ROMSIZE_KB_4096
	default 8192 if COREBOOT_ROMSIZE_KB_8192
	default 12288 if COREBOOT_ROMSIZE_KB_12288
	default 16384 if COREBOOT_ROMSIZE_KB_16384

# Map the config names to a hex value (bytes).
config ROM_SIZE
	hex
	default 0x10000 if COREBOOT_ROMSIZE_KB_64
	default 0x20000 if COREBOOT_ROMSIZE_KB_128
	default 0x40000 if COREBOOT_ROMSIZE_KB_256
	default 0x80000 if COREBOOT_ROMSIZE_KB_512
	default 0x100000 if COREBOOT_ROMSIZE_KB_1024
	default 0x200000 if COREBOOT_ROMSIZE_KB_2048
	default 0x400000 if COREBOOT_ROMSIZE_KB_4096
	default 0x800000 if COREBOOT_ROMSIZE_KB_8192
	default 0xc00000 if COREBOOT_ROMSIZE_KB_12288
	default 0x1000000 if COREBOOT_ROMSIZE_KB_16384

config ENABLE_POWER_BUTTON
	bool "Enable the power button" if POWER_BUTTON_IS_OPTIONAL
	default y if POWER_BUTTON_DEFAULT_ENABLE
	default n if POWER_BUTTON_DEFAULT_DISABLE
	help
	  The selected mainboard can optionally have the power button tied
	  to ground with a jumper so that the button appears to be
	  constantly depressed. If this option is enabled and the jumper is
	  installed then the board will turn on, but turn off again after a
	  short timeout, usually 4 seconds.

	  Select Y here if you have removed the jumper and want to use an
	  actual power button. Select N if you have the jumper installed.

config ENABLE_POWER_BUTTON
	def_bool y if !POWER_BUTTON_IS_OPTIONAL && POWER_BUTTON_FORCE_ENABLE
	def_bool n if !POWER_BUTTON_IS_OPTIONAL && POWER_BUTTON_FORCE_DISABLE

# defaults for CBFS_SIZE are set at the end of the file.
config CBFS_SIZE
	hex "Size of CBFS filesystem in ROM"
	help
	  This is the part of the ROM actually managed by CBFS, located at the
	  end of the ROM (passed through cbfstool -o) on x86 and at at the start
	  of the ROM (passed through cbfstool -s) everywhere else. It defaults
	  to span the whole ROM on all but Intel systems that use an Intel Firmware
	  Descriptor.  It can be overridden to make coreboot live alongside other
	  components like ChromeOS's vboot/FMAP or Intel's IFD / ME / TXE
	  binaries.

config FMDFILE
	string "fmap description file in fmd format"
	default "src/mainboard/$(CONFIG_MAINBOARD_DIR)/chromeos.fmd" if CHROMEOS
	default ""
	help
	  The build system creates a default FMAP from ROM_SIZE and CBFS_SIZE,
	  but in some cases more complex setups are required.
	  When an fmd is specified, it overrides the default format.

endmenu

# load site-local kconfig to allow user specific defaults and overrides

config SYSTEM_TYPE_LAPTOP
	default n
	bool

config CBFS_AUTOGEN_ATTRIBUTES
	default n
	bool
	help
	  If this option is selected, every file in cbfs which has a constraint
	  regarding position or alignment will get an additional file attribute
	  which describes this constraint.

menu "Chipset"

comment "SoC"
config CPU_SAMSUNG_EXYNOS5420
	select ARCH_BOOTBLOCK_ARMV7
	select ARCH_VERSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	select HAVE_MONOTONIC_TIMER
	select GENERIC_UDELAY
	select HAVE_UART_SPECIAL
	select RELOCATABLE_MODULES
	bool
	default n
config CPU_SAMSUNG_EXYNOS5250
	select ARCH_BOOTBLOCK_ARMV7
	select ARCH_VERSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	select HAVE_MONOTONIC_TIMER
	select GENERIC_UDELAY
	select HAVE_UART_SPECIAL
	select BOOTBLOCK_CONSOLE
	select HAVE_HARD_RESET
	bool
	default n
config SOC_INTEL_APOLLOLAKE
	bool
	help
	  Intel Apollolake support

if SOC_INTEL_APOLLOLAKE

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_RAMSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_VERSTAGE_X86_32
	# CPU specific options
	select CPU_INTEL_FIRMWARE_INTERFACE_TABLE
	select IOAPIC
	select SMP
	select SSE2
	select SUPPORT_CPU_UCODE_IN_CBFS
	# Misc options
	select C_ENVIRONMENT_BOOTBLOCK
	select COLLECT_TIMESTAMPS
	select HAVE_INTEL_FIRMWARE
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select PARALLEL_MP
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select PCIEXP_CLK_PM
	select PCIEXP_L1_SUB_STATE
	select POSTCAR_STAGE
	select REG_SCRIPT
	select RELOCATABLE_RAMSTAGE	# Build fails if this is not selected
	select SOC_INTEL_COMMON
	select SPI_FLASH
	select UDELAY_TSC
	select TSC_CONSTANT_RATE
	select TSC_MONOTONIC_TIMER
	select HAVE_MONOTONIC_TIMER
	select PLATFORM_USES_FSP2_0
	select HAVE_HARD_RESET
	select SOC_INTEL_COMMON

config SOC_INTEL_COMMON_RESET
	bool
	default y

config MMCONF_BASE_ADDRESS
	hex "PCI MMIO Base Address"
	default 0xe0000000

config IOSF_BASE_ADDRESS
	hex "MMIO Base Address of sideband bus"
	default 0xd0000000

config DCACHE_RAM_BASE
	hex "Base address of cache-as-RAM"
	default 0xfef00000

config DCACHE_RAM_SIZE
	hex "Length in bytes of cache-as-RAM"
	default 0x80000
	help
	  The size of the cache-as-ram region required during bootblock
	  and/or romstage.

config DCACHE_BSP_STACK_SIZE
	hex
	default 0x4000
	help
	  The amount of anticipated stack usage in CAR by bootblock and
	  other stages.

config CPU_ADDR_BITS
	int
	default 36

config CONSOLE_UART_BASE_ADDRESS
	depends on CONSOLE_SERIAL
	hex "MMIO base address for UART"
	default 0xde000000

config SOC_UART_DEBUG
	bool "Enable SoC UART debug port selected by UART_FOR_CONSOLE."
	default n
	select CONSOLE_SERIAL
	select BOOTBLOCK_CONSOLE
	select DRIVERS_UART
	select DRIVERS_UART_8250MEM_32
	select NO_UART_ON_SUPERIO

# 32KiB bootblock is all that is mapped in by the CSE at top of 4GiB.
config C_ENV_BOOTBLOCK_SIZE
	hex
	default 0x8000

# This SoC does not map SPI flash like many previous SoC. Therefore we provide
# a custom media driver that facilitates mapping
config X86_TOP4G_BOOTMEDIA_MAP
	bool
	default n

config ROMSTAGE_ADDR
	hex
	default 0xfef2e000
	help
	  The base address (in CAR) where romstage should be linked

config CACHE_MRC_SETTINGS
	bool
	default y

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 The ChromiumOS Authors. All rights reserved.
## Copyright (C) 2013-2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOC_INTEL_FSP_BAYTRAIL
	bool
	help
	  Bay Trail I part support using the Intel FSP.

if SOC_INTEL_FSP_BAYTRAIL

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select HAVE_SMI_HANDLER
	select HAVE_HARD_RESET
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select RELOCATABLE_MODULES
	select PARALLEL_MP
	select REG_SCRIPT
	select SMM_TSEG
	select SMP
	select SPI_FLASH
	select SSE2
	select TSC_CONSTANT_RATE
	select TSC_SYNC_MFENCE
	select UDELAY_TSC
	select SUPPORT_CPU_UCODE_IN_CBFS
	select HAVE_INTEL_FIRMWARE
	select HAVE_SPI_CONSOLE_SUPPORT

	# Microcode header files are delivered in FSP package
	select USES_MICROCODE_HEADER_FILES if HAVE_FSP_BIN

config SOC_INTEL_FSP_BAYTRAIL_MD
	bool
	default n

config BOOTBLOCK_CPU_INIT
	string
	default "soc/intel/fsp_baytrail/bootblock/bootblock.c"

config MMCONF_BASE_ADDRESS
	hex
	default 0xe0000000

config MAX_CPUS
	int
	default 4

config CPU_ADDR_BITS
	int
	default 36

config SMM_TSEG_SIZE
	hex
	default 0x800000
	help
	  This is set by the FSP

config SMM_RESERVED_SIZE
	hex
	default 0x100000

config VGA_BIOS_ID
	string
	default "8086,0f31"
	help
	  This is the default PCI ID for the Bay Trail graphics
	  devices.  This string names the vbios ROM in cbfs.

config ENABLE_BUILTIN_COM1
	bool "Enable built-in legacy Serial Port"
	help
	  The Baytrail SOC has one legacy serial port. Choose this option to
	  configure the pads and enable it. This serial port can be used for
	  the debug console.

config VGA_BIOS_FILE
	string
	default "../intel/cpu/baytrail/vbios/Vga.dat" if VGA_BIOS

config FSP_BAYTRAIL_GFX_INIT
	default n
	bool
	help
	  Enabling this option will activate graphics init code. With this init,
	  the graphic power gate registers will be initialized before
	  VBIOS is executed.

config CPU_MICROCODE_HEADER_FILES
	string
	default "../intel/cpu/baytrail/microcode/M0130673322.h ../intel/cpu/baytrail/microcode/M0130679901.h ../intel/cpu/baytrail/microcode/M0230672228.h"

## Baytrail Specific FSP Kconfig
##
## This file is part of the coreboot project.
##
## Copyright (C) 2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config BAYTRAIL_FSP_SPECIFIC_OPTIONS
	def_bool y
	select PLATFORM_USES_FSP1_0
	select USE_GENERIC_FSP_CAR_INC
	select FSP_USES_UPD

config FSP_FILE
	string
	default "../intel/fsp/baytrail/BAYTRAIL_FSP.fd"
	help
	  The path and filename of the Intel FSP binary for this platform.

config FSP_LOC
	hex
	default 0xfffc0000
	help
	  The location in CBFS that the FSP is located. This must match the
	  value that is set in the FSP binary.  If the FSP needs to be moved,
	  rebase the FSP with Intel's BCT (tool).

	  The Bay Trail FSP is built with a preferred base address of
	  0xFFFC0000.

endif	#SOC_INTEL_FSP_BAYTRAIL
config SOC_INTEL_BAYTRAIL
	bool
	help
	  Bay Trail M/D part support.

if SOC_INTEL_BAYTRAIL

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select BACKUP_DEFAULT_SMM_REGION
	select CACHE_MRC_SETTINGS
	select CPU_INTEL_TURBO_NOT_PACKAGE_SCOPED
	select SUPPORT_CPU_UCODE_IN_CBFS
	select HAVE_SMI_HANDLER
	select HAVE_HARD_RESET
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select RELOCATABLE_MODULES
	select RELOCATABLE_RAMSTAGE
	select PARALLEL_MP
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select REG_SCRIPT
	select SMM_TSEG
	select SMP
	select SPI_FLASH
	select SSE2
	select SUPPORT_CPU_UCODE_IN_CBFS
	select TSC_CONSTANT_RATE
	select TSC_MONOTONIC_TIMER
	select TSC_SYNC_MFENCE
	select UDELAY_TSC
	select SOC_INTEL_COMMON
	select HAVE_INTEL_FIRMWARE
	select HAVE_SPI_CONSOLE_SUPPORT

config BOOTBLOCK_CPU_INIT
	string
	default "soc/intel/baytrail/bootblock/bootblock.c"

config MMCONF_BASE_ADDRESS
	hex
	default 0xe0000000

config MAX_CPUS
	int
	default 4

config CPU_ADDR_BITS
	int
	default 36

config SMM_TSEG_SIZE
	hex
	default 0x800000

config SMM_RESERVED_SIZE
	hex
	default 0x100000

config HAVE_MRC
	bool "Add a Memory Reference Code binary"
	default y
	help
	  Select this option to add a blob containing
	  memory reference code.
	  Note: Without this binary coreboot will not work

if HAVE_MRC

config MRC_FILE
	string "Intel memory refeference code path and filename"
	default "3rdparty/blobs/northbridge/intel/sandybridge/systemagent-r6.bin"
	help
	  The path and filename of the file to use as System Agent
	  binary. Note that this points to the sandybridge binary file
	  which is will not work, but it serves its purpose to do builds.

config MRC_BIN_ADDRESS
	hex
	default 0xfffa0000

config MRC_RMT
	bool "Enable MRC RMT training + debug prints"
	default n

endif # HAVE_MRC

# Cache As RAM region layout:
#
# +-------------+ DCACHE_RAM_BASE + DCACHE_RAM_SIZE + DCACHE_RAM_MRC_VAR_SIZE
# | MRC usage   |
# |             |
# +-------------+ DCACHE_RAM_BASE + DCACHE_RAM_SIZE
# |  Stack      |\
# |    |        | * DCACHE_RAM_ROMSTAGE_STACK_SIZE
# |    v        |/
# +-------------+
# |    ^        |
# |    |        |
# | CAR Globals |
# +-------------+ DCACHE_RAM_BASE
#
# Note that the MRC binary is linked to assume the region marked as "MRC usage"
# starts at DCACHE_RAM_BASE + DCACHE_RAM_SIZE. If those values change then
# a new MRC binary needs to be produced with the updated start and size
# information.

config DCACHE_RAM_BASE
	hex
	default 0xfe000000

config DCACHE_RAM_SIZE
	hex
	default 0x8000
	help
	  The size of the cache-as-ram region required during bootblock
	  and/or romstage. Note DCACHE_RAM_SIZE and DCACHE_RAM_MRC_VAR_SIZE
	  must add up to a power of 2.

config DCACHE_RAM_MRC_VAR_SIZE
	hex
	default 0x8000
	help
	  The amount of cache-as-ram region required by the reference code.

config DCACHE_RAM_ROMSTAGE_STACK_SIZE
	hex
	default 0x800
	help
	  The amount of anticipated stack usage from the data cache
	  during pre-RAM ROM stage execution.

config RESET_ON_INVALID_RAMSTAGE_CACHE
	bool "Reset the system on S3 wake when ramstage cache invalid."
	default n
	depends on RELOCATABLE_RAMSTAGE
	help
	  The baytrail romstage code caches the loaded ramstage program
	  in SMM space. On S3 wake the romstage will copy over a fresh
	  ramstage that was cached in the SMM space. This option determines
	  the action to take when the ramstage cache is invalid. If selected
	  the system will reset otherwise the ramstage will be reloaded from
	  cbfs.

config ENABLE_BUILTIN_COM1
	bool "Enable builtin COM1 Serial Port"
	default n
	help
	  The PMC has a legacy COM1 serial port. Choose this option to
	  configure the pads and enable it. This serial port can be used for
	  the debug console.

config HAVE_REFCODE_BLOB
	depends on ARCH_X86
	bool "An external reference code blob should be put into cbfs."
	default n
	help
	 The reference code blob will be placed into cbfs.

if HAVE_REFCODE_BLOB

config REFCODE_BLOB_FILE
	string "Path and filename to reference code blob."
	default "refcode.elf"
	help
	 The path and filename to the file to be added to cbfs.

endif # HAVE_REFCODE_BLOB

config CHIPSET_BOOTBLOCK_INCLUDE
	string
	default "soc/intel/baytrail/bootblock/timestamp.inc"

endif
config SOC_INTEL_SKYLAKE
	bool
	help
	  Intel Skylake support

if SOC_INTEL_SKYLAKE

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_RAMSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_VERSTAGE_X86_32
	select ACPI_NHLT
	select BACKUP_DEFAULT_SMM_REGION
	select CACHE_MRC_SETTINGS
	select CACHE_RELOCATED_RAMSTAGE_OUTSIDE_CBMEM if RELOCATABLE_RAMSTAGE
	select COLLECT_TIMESTAMPS
	select CPU_INTEL_FIRMWARE_INTERFACE_TABLE
	select GENERIC_GPIO_LIB
	select HAVE_HARD_RESET
	select HAVE_INTEL_FIRMWARE
	select HAVE_MONOTONIC_TIMER
	select HAVE_SMI_HANDLER
	select IOAPIC
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select PARALLEL_MP
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select PCIEXP_CLK_PM
	select PCIEXP_L1_SUB_STATE
	select PLATFORM_USES_FSP1_1
	select REG_SCRIPT
	select RELOCATABLE_MODULES
	select RELOCATABLE_RAMSTAGE
	select SOC_INTEL_COMMON
	select SOC_INTEL_COMMON_ACPI_WAKE_SOURCE
	select SOC_INTEL_COMMON_RESET
	select SMM_TSEG
	select SMP
	select SPI_FLASH
	select SSE2
	select SUPPORT_CPU_UCODE_IN_CBFS
	select TSC_CONSTANT_RATE
	select TSC_SYNC_MFENCE
	select UDELAY_TSC
	select USE_GENERIC_FSP_CAR_INC

config BOOTBLOCK_CPU_INIT
	string
	default "soc/intel/skylake/bootblock/cpu.c"

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "soc/intel/skylake/bootblock/systemagent.c"

config BOOTBLOCK_RESETS
	string
	default "soc/intel/common/reset.c"

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "soc/intel/skylake/bootblock/pch.c"

config CBFS_SIZE
	hex
	default 0x200000

config CPU_ADDR_BITS
	int
	default 36

config DCACHE_RAM_BASE
	hex "Base address of cache-as-RAM"
	default 0xfef00000

config DCACHE_RAM_SIZE
	hex "Length in bytes of cache-as-RAM"
	default 0x10000
	help
	  The size of the cache-as-ram region required during bootblock
	  and/or romstage.

config EXCLUDE_NATIVE_SD_INTERFACE
	bool
	default n
	help
	  If you set this option to n, will not use native SD controller.

config HEAP_SIZE
	hex
	default 0x80000

config IED_REGION_SIZE
	hex
	default 0x400000

config MMCONF_BASE_ADDRESS
	hex "MMIO Base Address"
	default 0xe0000000

config MONOTONIC_TIMER_MSR
	def_bool y
	select HAVE_MONOTONIC_TIMER
	help
	  Provide a monotonic timer using the 24MHz MSR counter.

config PRE_GRAPHICS_DELAY
	int "Graphics initialization delay in ms"
	default 0
	help
	  On some systems, coreboot boots so fast that connected monitors
	  (mostly TVs) won't be able to wake up fast enough to talk to the
	  VBIOS. On those systems we need to wait for a bit before executing
	  the VBIOS.

config SERIAL_CPU_INIT
	bool
	default n

config SERIRQ_CONTINUOUS_MODE
	bool
	default n
	help
	  If you set this option to y, the serial IRQ machine will be
	  operated in continuous mode.

config SMM_RESERVED_SIZE
	hex
	default 0x200000

config SMM_TSEG_SIZE
	hex
	default 0x800000

config VGA_BIOS_ID
	string
	default "8086,0406"

config UART_DEBUG
	bool "Enable UART debug port."
	default n
	select CONSOLE_SERIAL
	select DRIVERS_UART
	select DRIVERS_UART_8250MEM_32

config CHIPSET_BOOTBLOCK_INCLUDE
	string
	default "soc/intel/skylake/bootblock/timestamp.inc"

config NHLT_DMIC_2CH
	bool
	default n
	help
	  Include DSP firmware settings for 2 channel DMIC array.

config NHLT_DMIC_4CH
	bool
	default n
	help
	  Include DSP firmware settings for 4 channel DMIC array.

config NHLT_NAU88L25
	bool
	default n
	help
	  Include DSP firmware settings for nau88l25 headset codec.

config NHLT_MAX98357
	bool
	default n
	help
	  Include DSP firmware settings for max98357 amplifier.

config NHLT_SSM4567
	bool
	default n
	help
	  Include DSP firmware settings for ssm4567 smart amplifier.

config DCACHE_RAM_SIZE_TOTAL
	hex
	default 0x40000

config SKIP_FSP_CAR
	bool "Skip cache as RAM setup in FSP"
	default y
	help
	  Skip Cache as RAM setup in FSP.

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2015-2016 Intel Corp.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOC_INTEL_QUARK
	bool
	help
	  Intel Quark support

if SOC_INTEL_QUARK

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_RAMSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_VERSTAGE_X86_32
	select SOC_INTEL_COMMON
	select SOC_SETS_MTRRS
	select TSC_CONSTANT_RATE
	select UDELAY_TSC
	select UNCOMPRESSED_RAMSTAGE
	select USE_MARCH_586

#####
# Debug serial output
#     The following options configure the debug serial port
#####

config ENABLE_BUILTIN_HSUART1
	bool "Enable built-in HSUART1"
	default y
	select NO_UART_ON_SUPERIO
	select DRIVERS_UART_8250MEM_32
	help
	  The Quark SoC has two HSUART. Choose this option to configure the pads
	  and enable HSUART1, which can be used for the debug console.

config TTYS0_BASE
	hex "HSUART1 Base Address"
	depends on ENABLE_BUILTIN_HSUART1
	default 0xA0019000
	help
	  Memory mapped MMIO of HSUART1.

config TTYS0_LCS
	int
	depends on ENABLE_BUILTIN_HSUART1
	default 3

#####
# Debug support
#     The following options provide debug support for the Quark coreboot
#     code.  The SD LED is used as a binary marker to determine if a
#     specific point in the execution flow has been reached.
#####

config ENABLE_DEBUG_LED
	bool
	default n
	help
	  Enable the use of the SD LED for early debugging before serial output
	  is available.  Setting this LED indicates that control has reached the
	  desired check point.

config ENABLE_DEBUG_LED_ESRAM
	bool "SD LED indicates ESRAM initialized"
	default n
	select ENABLE_DEBUG_LED
	help
	  Indicate that ESRAM has been successfully initialized.

config ENABLE_DEBUG_LED_FINDFSP
	bool "SD LED indicates fsp.bin file was found"
	default n
	select ENABLE_DEBUG_LED
	help
	  Indicate that fsp.bin was found.

config ENABLE_DEBUG_LED_TEMPRAMINIT
	bool "SD LED indicates TempRamInit was successful"
	default n
	select ENABLE_DEBUG_LED
	help
	  Indicate that TempRamInit was successful.

#####
# ESRAM layout
#     Specify the portion of the ESRAM for coreboot to use as its data area.
#####

config DCACHE_RAM_BASE
	hex
	default 0x80070000

config DCACHE_RAM_SIZE
	hex
	default 0x00008000

#####
# Flash layout
#     Specify the size of the coreboot file system in the read-only
#     (recovery) portion of the flash part.
#####

config CBFS_SIZE
	hex
	default 0x200000
	help
	  Specify the size of the coreboot file system in the read-only (recovery)
	  portion of the flash part.  On Quark systems the firmware image stores
	  more than just coreboot, including:
	   - The chipset microcode (RMU) binary file located at 0xFFF00000
	   - Intel Trusted Execution Engine firmware

#####
# FSP binary
#     The following options control the FSP binary file placement in
#     the flash image and ESRAM.  This file is required by the Quark
#     SoC code to boot coreboot and its payload.
#####

config ADD_FSP_RAW_BIN
	bool "Add the Intel FSP binary to the flash image without relocation"
	default n
	depends on PLATFORM_USES_FSP1_1
	help
	  Select this option to add an Intel FSP binary to
	  the resulting coreboot image.

	  Note: Without this binary, coreboot builds relying on the FSP
	  will not boot

config FSP_FILE
	string "Intel FSP binary path and filename"
	default "3rdparty/blobs/soc/intel/quark/fsp.bin"
	depends on PLATFORM_USES_FSP1_1
	depends on ADD_FSP_RAW_BIN
	help
	  The path and filename of the Intel FSP binary for this platform.

config FSP_IMAGE_ID_STRING
	string "8 byte platform string identifying the FSP platform"
	default "QUK-FSP0"
	depends on PLATFORM_USES_FSP1_1
	help
	  8 ASCII character byte signature string that will help match the FSP
	  binary to a supported hardware configuration.

config FSP_LOC
	hex
	default 0xfff80000
	depends on PLATFORM_USES_FSP1_1
	help
	  The location in CBFS that the FSP is located. This must match the
	  value that is set in the FSP binary.  If the FSP needs to be moved,
	  rebase the FSP with Intel's BCT (tool).

config FSP_ESRAM_LOC
	hex
	default 0x80000000
	depends on PLATFORM_USES_FSP1_1
	help
	  The location in ESRAM where a copy of the FSP binary is placed.

config RELOCATE_FSP_INTO_DRAM
	bool "Relocate FSP into DRAM"
	default n
	depends on PLATFORM_USES_FSP1_1
	help
	  Relocate the FSP binary into DRAM before the call to SiliconInit.

#####
# FSP PDAT binary
#     The following options control the FSP platform data binary
#     file placement in the flash image.
#####

config ADD_FSP_PDAT_FILE
	bool "Should the PDAT binary be added to the flash image?"
	default n
	depends on PLATFORM_USES_FSP1_1
	help
	  The PDAT file is required for the FSP 1.1 binary

config FSP_PDAT_FILE
	string
	default "3rdparty/blobs/soc/intel/quark/pdat.bin"
	depends on PLATFORM_USES_FSP1_1
	depends on ADD_FSP_PDAT_FILE
	help
	  The path and filename of the Intel Galileo platform-data-patch (PDAT)
	  binary. This binary file is generated by the platform-data-patch.py
	  script released with the Quark BSP and contains the Ethernet address.

config FSP_PDAT_LOC
	hex
	default 0xfff10000
	depends on PLATFORM_USES_FSP1_1
	depends on ADD_FSP_PDAT_FILE
	help
	  The location in CBFS that the PDAT is located. It must match the
	  PCD PcdPlatformDataBaseAddress of Quark SoC FSP.

#####
# RMU binary
#     The following options control the Quark chipset microcode file
#     placement in the flash image.  This file is required to bring
#     the Quark processor out of reset.
#####

config ADD_RMU_FILE
	bool "Should the RMU binary be added to the flash image?"
	default n
	help
	  The RMU file is required to get the chip out of reset.

config RMU_FILE
	string
	default "3rdparty/blobs/soc/intel/quark/rmu.bin"
	depends on ADD_RMU_FILE
	help
	  The path and filename of the Intel Quark RMU binary.

config RMU_LOC
	hex
	default 0xfff00000
	depends on ADD_RMU_FILE
	help
	  The location in CBFS that the RMU is located. It must match the
	  strap-determined base address.

endif # SOC_INTEL_QUARK
config SOC_INTEL_BRASWELL
	bool
	help
	  Braswell M/D part support.

if SOC_INTEL_BRASWELL

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_RAMSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_VERSTAGE_X86_32
	select BACKUP_DEFAULT_SMM_REGION
	select CACHE_MRC_SETTINGS
	select CACHE_RELOCATED_RAMSTAGE_OUTSIDE_CBMEM if RELOCATABLE_RAMSTAGE
	select COLLECT_TIMESTAMPS
	select SUPPORT_CPU_UCODE_IN_CBFS
	select CPU_INTEL_TURBO_NOT_PACKAGE_SCOPED
	select HAVE_MONOTONIC_TIMER
	select HAVE_SMI_HANDLER
	select HAVE_HARD_RESET
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select RELOCATABLE_MODULES
	select PARALLEL_MP
	select PCIEXP_ASPM
	select PCIEXP_CLK_PM
	select PCIEXP_COMMON_CLOCK
	select PLATFORM_USES_FSP1_1
	select REG_SCRIPT
	select SOC_INTEL_COMMON
	select SOC_INTEL_COMMON_ACPI_WAKE_SOURCE
	select SOC_INTEL_COMMON_RESET
	select SMM_TSEG
	select SMP
	select SPI_FLASH
	select SSE2
	select SUPPORT_CPU_UCODE_IN_CBFS
	select TSC_CONSTANT_RATE
	select TSC_MONOTONIC_TIMER
	select TSC_SYNC_MFENCE
	select UDELAY_TSC
	select USE_GENERIC_FSP_CAR_INC
	select HAVE_INTEL_FIRMWARE
	select HAVE_SPI_CONSOLE_SUPPORT

config BOOTBLOCK_CPU_INIT
	string
	default "soc/intel/braswell/bootblock/bootblock.c"

config MMCONF_BASE_ADDRESS
	hex "PCIe CFG Base Address"
	default 0xe0000000

config MAX_CPUS
	int
	default 4

config CPU_ADDR_BITS
	int
	default 36

config SMM_TSEG_SIZE
	hex
	default 0x800000

config SMM_RESERVED_SIZE
	hex
	default 0x100000

# Cache As RAM region layout:
#
# +-------------+ DCACHE_RAM_BASE + DCACHE_RAM_SIZE
# |  Stack      |\
# |    |        | * DCACHE_RAM_ROMSTAGE_STACK_SIZE
# |    v        |/
# +-------------+
# |    ^        |
# |    |        |
# | CAR Globals |
# +-------------+ DCACHE_RAM_BASE
#

config DCACHE_RAM_BASE
	hex "Temporary RAM Base Address"
	default 0xfef00000

config DCACHE_RAM_SIZE
	hex "Temporary RAM Size"
	default 0x4000
	help
	  The size of the cache-as-ram region required during bootblock
	  and/or romstage. Note DCACHE_RAM_SIZE and DCACHE_RAM_MRC_VAR_SIZE
	  must add up to a power of 2.

config DCACHE_RAM_ROMSTAGE_STACK_SIZE
	hex
	default 0x800
	help
	  The amount of anticipated stack usage from the data cache
	  during pre-ram rom stage execution.

config RESET_ON_INVALID_RAMSTAGE_CACHE
	bool "Reset the system on S3 wake when ramstage cache invalid."
	default n
	depends on RELOCATABLE_RAMSTAGE
	help
	  The haswell romstage code caches the loaded ramstage program
	  in SMM space. On S3 wake the romstage will copy over a fresh
	  ramstage that was cached in the SMM space. This option determines
	  the action to take when the ramstage cache is invalid. If selected
	  the system will reset otherwise the ramstage will be reloaded from
	  cbfs.

config ENABLE_BUILTIN_COM1
	bool "Enable builtin COM1 Serial Port"
	default n
	help
	  The PMC has a legacy COM1 serial port. Choose this option to
	  configure the pads and enable it. This serial port can be used for
	  the debug console.

config HAVE_IFD_BIN
	def_bool n

config BUILD_WITH_FAKE_IFD
	def_bool !HAVE_IFD_BIN

config HAVE_ME_BIN
	def_bool n

config IED_REGION_SIZE
	hex
	default 0x400000

config CHIPSET_BOOTBLOCK_INCLUDE
	string
	default "soc/intel/braswell/bootblock/timestamp.inc"

endif
config SOC_INTEL_COMMON
	bool
	help
	  common code for Intel SOCs

if SOC_INTEL_COMMON

config CACHE_MRC_SETTINGS
	bool "Save cached MRC settings"
	default n

if CACHE_MRC_SETTINGS

config MRC_SETTINGS_CACHE_BASE
	hex
	default 0xfffe0000

config MRC_SETTINGS_CACHE_SIZE
	hex
	default 0x10000

config MRC_SETTINGS_PROTECT
	bool "Enable protection on MRC settings"
	default n

endif # CACHE_MRC_SETTINGS

config DISPLAY_MTRRS
	bool "MTRRs: Display the MTRR settings"
	default n

config DISPLAY_SMM_MEMORY_MAP
	bool "SMM: Display the SMM memory map"
	default n

config SOC_INTEL_COMMON_RESET
	bool
	default n

config SOC_INTEL_COMMON_ACPI_WAKE_SOURCE
	bool
	default n

config SOC_SETS_MTRRS
	bool
	default n
	help
	  The SoC needs uses different access methods for reading and writing
	  the MTRRs.  Use SoC specific routines to handle the MTRR access.

config MMA
	bool "enable MMA (Memory Margin Analysis) support"
	default n
	help
	  Set this option to y to enable MMA (Memory Margin Analysis) support

config MMA_BLOBS_PATH
	string "Path to MMA blobs"
	depends on MMA
	default "3rdparty/blobs/mainboard/$(MAINBOARDDIR)/mma"

endif # SOC_INTEL_COMMON
config SOC_INTEL_FSP_BROADWELL_DE
	bool
	help
	  Broadwell-DE support using the Intel FSP.

if SOC_INTEL_FSP_BROADWELL_DE

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select HAVE_HARD_RESET
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select RELOCATABLE_MODULES
	select PARALLEL_MP
	select SMP
	select IOAPIC
	select SPI_FLASH
	select UDELAY_TSC
	select SUPPORT_CPU_UCODE_IN_CBFS
	# Microcode header files are delivered in FSP package
	select USES_MICROCODE_HEADER_FILES if HAVE_FSP_BIN
	select HAVE_INTEL_FIRMWARE

config CBFS_SIZE
	hex
	default 0x200000

config RAMTOP
	hex
	default 0x400000

config HEAP_SIZE
	hex
	default 0x100000

config BOOTBLOCK_CPU_INIT
	string
	default "soc/intel/fsp_broadwell_de/bootblock/bootblock.c"

config MMCONF_BASE_ADDRESS
	hex
	default 0x80000000

config MAX_CPUS
	int
	default 16

config CPU_ADDR_BITS
	int
	default 36

config VGA_BIOS
	bool
	default n

config INTEGRATED_UART
	bool "Integrated UART ports"
	default y
	select HAVE_UART_SPECIAL
	select CONSOLE_SERIAL
	help
	  Use Broadwell-DE Integrated UART ports @3F8h and 2F8h.

config DRIVERS_UART_8250IO
	bool "Serial port on SuperIO (Broadwell-DE's UART ports unselected)"
	depends on !INTEGRATED_UART
	help
	  Select to choose SuperIO's serial port for console output.
	  CANNOT select if intend to use SoC integrated serial ports.

config CONSOLE_CBMEM
	bool "Send console output to a CBMEM buffer"
	default n

config CPU_MICROCODE_HEADER_FILES
	string
	default "../intel/cpu/broadwell_de/microcode/M1050663_07000001.h ../intel/cpu/broadwell_de/microcode/M1050662_0000000A.h ../intel/cpu/broadwell_de/microcode/MFF50661_F1000008.h"

## Broadwell-DE Specific FSP Kconfig
config BROADWELL_DE_FSP_SPECIFIC_OPTIONS
	def_bool y
	select PLATFORM_USES_FSP1_0
	select USE_GENERIC_FSP_CAR_INC
	select FSP_USES_UPD

config FSP_FILE
	string
	default "../intel/fsp/broadwell_de/BROADWELLDE_FSP.bin"
	help
	  The path and filename of the Intel FSP binary for this platform.

config FSP_LOC
	hex
	default 0xffeb0000
	help
	  The location in CBFS that the FSP is located. This must match the
	  value that is set in the FSP binary.  If the FSP needs to be moved,
	  rebase the FSP with Intel's BCT (tool).

	  The Broadwell-DE FSP is built with a preferred base address of
	  0xffeb0000.

config FSP_MEMORY_DOWN
	bool "Enable Memory Down"
	default n
	help
	  Load SPD data from ROM instead of trying to read from SMBus.

	  If the platform has DIMM sockets, say N. If memory is down, say Y and
	  supply the appropriate SPD data for each Channel/DIMM.

config FSP_MEMORY_DOWN_CH0DIMM0_SPD_PRESENT
	bool "Channel 0, DIMM 0 Present"
	default n
	depends on FSP_MEMORY_DOWN
	help
	  Select Y if Channel 0, DIMM 0 is present.

config FSP_MEMORY_DOWN_CH0DIMM0_SPD_FILE
	string "Channel 0, DIMM 0 SPD File"
	default "spd_ch0_dimm0.bin"
	depends on FSP_MEMORY_DOWN_CH0DIMM0_SPD_PRESENT
	help
	  Path to the file which contains the SPD data for Channel 0, DIMM 0.

config FSP_MEMORY_DOWN_CH0DIMM1_SPD_PRESENT
	bool "Channel 0, DIMM 1 Present"
	default n
	depends on FSP_MEMORY_DOWN
	help
	  Select Y if Channel 0, DIMM 1 is present.

config FSP_MEMORY_DOWN_CH0DIMM1_SPD_FILE
	string "Channel 0, DIMM 1 SPD File"
	default "spd_ch0_dimm1.bin"
	depends on FSP_MEMORY_DOWN_CH0DIMM1_SPD_PRESENT
	help
	  Path to the file which contains the SPD data for Channel 0, DIMM 1.

config FSP_MEMORY_DOWN_CH1DIMM0_SPD_PRESENT
	bool "Channel 1, DIMM 0 Present"
	default n
	depends on FSP_MEMORY_DOWN
	help
	  Select Y if Channel 1, DIMM 0 is present.

config FSP_MEMORY_DOWN_CH1DIMM0_SPD_FILE
	string "Channel 1, DIMM 0 SPD File"
	default "spd_ch1_dimm0.bin"
	depends on FSP_MEMORY_DOWN_CH1DIMM0_SPD_PRESENT
	help
	  Path to the file which contains the SPD data for Channel 1, DIMM 0.

config FSP_MEMORY_DOWN_CH1DIMM1_SPD_PRESENT
	bool "Channel 1, DIMM 1 Present"
	default n
	depends on FSP_MEMORY_DOWN
	help
	  Select Y if Channel 1, DIMM 1 is present.

config FSP_MEMORY_DOWN_CH1DIMM1_SPD_FILE
	string "Channel 1, DIMM 1 SPD File"
	default "spd_ch1_dimm1.bin"
	depends on FSP_MEMORY_DOWN_CH1DIMM1_SPD_PRESENT
	help
	  Path to the file which contains the SPD data for Channel 1, DIMM 1.

config FSP_HYPERTHREADING
	bool "Enable Hyper-Threading"
	default y
	help
	  Enable Intel(r) Hyper-Threading Technology for the Broadwell-DE SoC.

endif	# SOC_INTEL_FSP_BROADWELL_DE
config SOC_INTEL_BROADWELL
	bool
	help
	  Intel Broadwell and Haswell ULT support.

if SOC_INTEL_BROADWELL

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select BACKUP_DEFAULT_SMM_REGION
	select CACHE_MRC_SETTINGS
	select MRC_SETTINGS_PROTECT
	select CACHE_RELOCATED_RAMSTAGE_OUTSIDE_CBMEM if RELOCATABLE_RAMSTAGE
	select CPU_INTEL_FIRMWARE_INTERFACE_TABLE
	select SUPPORT_CPU_UCODE_IN_CBFS
	select HAVE_MONOTONIC_TIMER
	select HAVE_SMI_HANDLER
	select HAVE_HARD_RESET
	select HAVE_USBDEBUG
	select IOAPIC
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select RELOCATABLE_MODULES
	select RELOCATABLE_RAMSTAGE
	select REG_SCRIPT
	select PARALLEL_MP
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select PCIEXP_CLK_PM
	select PCIEXP_L1_SUB_STATE
	select SMM_TSEG
	select SMP
	select SPI_FLASH
	select SSE2
	select SUPPORT_CPU_UCODE_IN_CBFS
	select TSC_CONSTANT_RATE
	select TSC_SYNC_MFENCE
	select UDELAY_TSC
	select SOC_INTEL_COMMON
	select HAVE_INTEL_FIRMWARE
	select SOC_INTEL_COMMON_ACPI_WAKE_SOURCE
	select HAVE_SPI_CONSOLE_SUPPORT

config BOOTBLOCK_CPU_INIT
	string
	default "soc/intel/broadwell/bootblock/cpu.c"

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "soc/intel/broadwell/bootblock/systemagent.c"

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "soc/intel/broadwell/bootblock/pch.c"


config MMCONF_BASE_ADDRESS
	hex
	default 0xf0000000

config SERIAL_CPU_INIT
	bool
	default n

config SMM_TSEG_SIZE
	hex
	default 0x800000

config IED_REGION_SIZE
	hex
	default 0x400000

config SMM_RESERVED_SIZE
	hex
	default 0x100000

config VGA_BIOS_ID
	string
	default "8086,0406"

config CACHE_MRC_SIZE_KB
	int
	default 512

config DCACHE_RAM_BASE
	hex
	default 0xff7c0000

config DCACHE_RAM_SIZE
	hex
	default 0x10000
	help
	  The size of the cache-as-ram region required during bootblock
	  and/or romstage. Note DCACHE_RAM_SIZE and DCACHE_RAM_MRC_VAR_SIZE
	  must add up to a power of 2.

config DCACHE_RAM_MRC_VAR_SIZE
	hex
	default 0x30000
	help
	  The amount of cache-as-ram region required by the reference code.

config DCACHE_RAM_ROMSTAGE_STACK_SIZE
	hex
	default 0x2000
	help
	  The amount of anticipated stack usage from the data cache
	  during pre-ram rom stage execution.

config HAVE_MRC
	bool "Add a Memory Reference Code binary"
	help
	  Select this option to add a Memory Reference Code binary to
	  the resulting coreboot image.

	  Note: Without this binary coreboot will not work

if HAVE_MRC

config MRC_FILE
	string "Intel Memory Reference Code path and filename"
	depends on HAVE_MRC
	default "mrc.bin"
	help
	  The filename of the file to use as Memory Reference Code binary.

config MRC_BIN_ADDRESS
	hex
	default 0xfffa0000

config CACHE_MRC_SETTINGS
	bool "Save cached MRC settings"
	default y

endif # HAVE_MRC

config PRE_GRAPHICS_DELAY
	int "Graphics initialization delay in ms"
	default 0
	help
	  On some systems, coreboot boots so fast that connected monitors
	  (mostly TVs) won't be able to wake up fast enough to talk to the
	  VBIOS. On those systems we need to wait for a bit before executing
	  the VBIOS.

config RESET_ON_INVALID_RAMSTAGE_CACHE
	bool "Reset the system on S3 wake when ramstage cache invalid."
	default n
	depends on RELOCATABLE_RAMSTAGE
	help
	  The romstage code caches the loaded ramstage program in SMM space.
	  On S3 wake the romstage will copy over a fresh ramstage that was
	  cached in the SMM space. This option determines the action to take
	  when the ramstage cache is invalid. If selected the system will
	  reset otherwise the ramstage will be reloaded from cbfs.

config INTEL_PCH_UART_CONSOLE
	bool "Use Serial IO UART for console"
	default n
	select DRIVERS_UART_8250MEM

config INTEL_PCH_UART_CONSOLE_NUMBER
	hex "Serial IO UART number to use for console"
	default "0x0"
	depends on INTEL_PCH_UART_CONSOLE

config TTYS0_BASE
	hex
	default 0xd6000000
	depends on INTEL_PCH_UART_CONSOLE

config EHCI_BAR
	hex
	default 0xd8000000

config EHCI_DEBUG_OFFSET
	hex
	default 0xa0

config SERIRQ_CONTINUOUS_MODE
	bool
	default y
	help
	  If you set this option to y, the serial IRQ machine will be
	  operated in continuous mode.

config HAVE_REFCODE_BLOB
	depends on ARCH_X86
	bool "An external reference code blob should be put into cbfs."
	default n
	help
	 The reference code blob will be placed into cbfs.

if HAVE_REFCODE_BLOB

config REFCODE_BLOB_FILE
	string "Path and filename to reference code blob."
	default "refcode.elf"
	help
	 The path and filename to the file to be added to cbfs.

endif # HAVE_REFCODE_BLOB

config HAVE_ME_BIN
	def_bool y

config BUILD_WITH_FAKE_IFD
	def_bool !HAVE_IFD_BIN

config CHIPSET_BOOTBLOCK_INCLUDE
	string
	default "soc/intel/broadwell/bootblock/timestamp.inc"

endif
##
## This file is part of the coreboot project.
##
## Copyright 2014 Rockchip Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOC_ROCKCHIP_RK3288
	bool
	default n
	select ARCH_BOOTBLOCK_ARMV7
	select ARCH_VERSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	select HAVE_MONOTONIC_TIMER
	select GENERIC_UDELAY
	select HAVE_UART_SPECIAL
	select BOOTBLOCK_CONSOLE
	select UNCOMPRESSED_RAMSTAGE
	select GENERIC_GPIO_LIB
	select RTC

if SOC_ROCKCHIP_RK3288

config CHROMEOS
	select VBOOT_STARTS_IN_BOOTBLOCK
	select SEPARATE_VERSTAGE
	select RETURN_FROM_VERSTAGE

config PMIC_BUS
	int
	default -1

endif
config SOC_ROCKCHIP_RK3399
	bool
	default n
	select ARCH_BOOTBLOCK_ARMV8_64
	select ARCH_RAMSTAGE_ARMV8_64
	select ARCH_ROMSTAGE_ARMV8_64
	select ARCH_VERSTAGE_ARMV8_64
	select ARM64_A53_ERRATUM_843419
	select BOOTBLOCK_CONSOLE
	select GENERIC_UDELAY
	select HAVE_MONOTONIC_TIMER
	select HAVE_UART_SPECIAL
	select UNCOMPRESSED_RAMSTAGE

if SOC_ROCKCHIP_RK3399

config CHROMEOS
	select RETURN_FROM_VERSTAGE
	select SEPARATE_VERSTAGE
	select VBOOT_STARTS_IN_BOOTBLOCK

config PMIC_BUS
	int
	default -1

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2014 Imagination Technologies
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; version 2 of
# the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_IMGTEC_PISTACHIO
	select ARCH_BOOTBLOCK_MIPS
	select ARCH_VERSTAGE_MIPS
	select ARCH_ROMSTAGE_MIPS
	select ARCH_RAMSTAGE_MIPS
	select GENERIC_UDELAY
	select HAVE_MONOTONIC_TIMER
	select HAVE_UART_SPECIAL
	select SPI_ATOMIC_SEQUENCING
	select GENERIC_GPIO_LIB
	select HAVE_HARD_RESET
	bool

if CPU_IMGTEC_PISTACHIO

config BOOTBLOCK_CPU_INIT
	string
	default "soc/imgtec/pistachio/bootblock.c"

endif
config SOC_UCB_RISCV
	select ARCH_RISCV
	select ARCH_BOOTBLOCK_RISCV
	select ARCH_VERSTAGE_RISCV
	select ARCH_ROMSTAGE_RISCV
	select ARCH_RAMSTAGE_RISCV
	bool
	default n

if SOC_UCB_RISCV

endif
config SOC_MEDIATEK_MT8173
	bool
	default n
	select ARM64_A53_ERRATUM_843419
	select ARCH_BOOTBLOCK_ARMV8_64
	select ARCH_RAMSTAGE_ARMV8_64
	select ARCH_ROMSTAGE_ARMV8_64
	select ARCH_VERSTAGE_ARMV8_64
	select ARM64_USE_ARM_TRUSTED_FIRMWARE
	select BOOTBLOCK_CONSOLE
	select HAVE_UART_SPECIAL
	select SPI_ATOMIC_SEQUENCING if SPI_FLASH
	select HAVE_MONOTONIC_TIMER
	select GENERIC_UDELAY
	select GENERIC_GPIO_LIB
	select HAVE_HARD_RESET
	select RTC

if SOC_MEDIATEK_MT8173

config MEMORY_TEST
	bool
	default n

config DEBUG_SOC_DRIVER
	bool "The top level switch for soc driver debug message"
	default n
	select DEBUG_DRAM
	select DEBUG_I2C
	select DEBUG_PMIC
	select DEBUG_PMIC_WRAP

config DEBUG_DRAM
	bool "Output verbose DRAM related debug message"
	default n
	help
	  This option enables additional DRAM related debug messages.

config DEBUG_I2C
	bool "Output verbose I2C related debug message"
	default n
	help
	  This option enables I2C related debug message.

config DEBUG_PMIC
	bool "Output verbose PMIC related debug message"
	default n
	help
	  This option enables PMIC related debug message.

config DEBUG_PMIC_WRAP
	bool "Output verbose PMIC WRAP related debug message"
	default n
	help
	  This option enables PMIC WRAP related debug message.
endif
##
## This file is part of the coreboot project.
##
## Copyright 2014 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOC_BROADCOM_CYGNUS
	bool
	default n
	select ARCH_BOOTBLOCK_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_VERSTAGE_ARMV7
	select BOOTBLOCK_CONSOLE
	select GENERIC_UDELAY
	select HAVE_MONOTONIC_TIMER
	select HAVE_UART_SPECIAL
	select GENERIC_GPIO_LIB

if SOC_BROADCOM_CYGNUS

config CHROMEOS
	select SEPARATE_VERSTAGE
	select RETURN_FROM_VERSTAGE

config CONSOLE_SERIAL_UART_ADDRESS
	hex
	depends on DRIVERS_UART
	default 0x18023000

config CYGNUS_DDR800
	bool "DDR Speed at 800MHz"
	default y

config CYGNUS_DDR_AUTO_SELF_REFRESH_ENABLE
	bool "Enable DDR auto self-refresh"
	default y
	help
	  Warning: M0 expects that auto self-refresh is enabled. Modify
	  with caution.


config CYGNUS_SHMOO_REUSE_DDR_32BIT
	bool "Indicate if DDR width is 32-bit"
	default n

config CYGNUS_SDRAM_TEST_DDR
	bool "Run a write-read test on DDR after initialization"
	default n

config CYGNUS_PRINT_SHMOO_DEBUG
	bool "Print debug info for shmoo"
	default n

config CYGNUS_GPIO_TEST
	bool "Run a test on gpio"
	default n

endif
##
## This file is part of the coreboot project.
##
## Copyright 2014 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOC_MARVELL_BG4CD
	bool
	default n
	select ARCH_BOOTBLOCK_ARMV7_M
	select BOOTBLOCK_CUSTOM if VBOOT_VERIFY_FIRMWARE
	select ARCH_RAMSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_VERSTAGE_ARMV7_M
	select BOOTBLOCK_CONSOLE
	select GENERIC_UDELAY
	select HAVE_MONOTONIC_TIMER
	select GENERIC_GPIO_LIB

if SOC_MARVELL_BG4CD

config CHROMEOS
	select VBOOT_STARTS_IN_BOOTBLOCK

endif
config SOC_MARVELL_ARMADA38X
	bool
	default n
	select ARCH_BOOTBLOCK_ARMV7
	select ARCH_VERSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	select HAVE_UART_SPECIAL
	select BOOTBLOCK_CONSOLE
	select RETURN_FROM_VERSTAGE
	select BOOTBLOCK_CUSTOM
	select GENERIC_UDELAY

if SOC_MARVELL_ARMADA38X

config BOOTBLOCK_CPU_INIT
	string
	default "soc/marvell/armada38x/bootblock.c"
	help
	  CPU/SoC-specific bootblock code. This is useful if the
	  bootblock must load microcode or copy data from ROM before
	  searching for the bootblock.

config CONSOLE_SERIAL_UART_ADDRESS
	hex
	default 0xf1012000
endif
config SOC_NVIDIA_TEGRA210
	bool
	default n
	select ARCH_BOOTBLOCK_ARMV4
	select BOOTBLOCK_CUSTOM
	select ARCH_VERSTAGE_ARMV4
	select ARCH_ROMSTAGE_ARMV4
	select ARCH_RAMSTAGE_ARMV8_64
	select BOOTBLOCK_CONSOLE
	select GIC
	select HAVE_MONOTONIC_TIMER
	select GENERIC_UDELAY
	select HAVE_HARD_RESET
	select HAVE_UART_SPECIAL
	select ARM64_USE_ARM_TRUSTED_FIRMWARE
	select GENERIC_GPIO_LIB

if SOC_NVIDIA_TEGRA210

config CHROMEOS
	select CHROMEOS_RAMOOPS_NON_ACPI

config MAINBOARD_DO_DSI_INIT
	bool "Use dsi graphics interface"
	depends on MAINBOARD_DO_NATIVE_VGA_INIT
	default n
	help
	  Initialize dsi display

config MAINBOARD_DO_SOR_INIT
	bool "Use dp graphics interface"
	depends on MAINBOARD_DO_NATIVE_VGA_INIT
	default n
	help
	  Initialize dp display

choice CONSOLE_SERIAL_TEGRA210_UART_CHOICES
	prompt "Serial Console UART"
	default CONSOLE_SERIAL_TEGRA210_UARTA
	depends on CONSOLE_SERIAL

config CONSOLE_SERIAL_TEGRA210_UARTA
	bool "UARTA"
	help
	  Serial console on UART A.

config CONSOLE_SERIAL_TEGRA210_UARTB
	bool "UARTB"
	help
	  Serial console on UART B.

config CONSOLE_SERIAL_TEGRA210_UARTC
	bool "UARTC"
	help
	  Serial console on UART C.

config CONSOLE_SERIAL_TEGRA210_UARTD
	bool "UARTD"
	help
	  Serial console on UART D.

config CONSOLE_SERIAL_TEGRA210_UARTE
	bool "UARTE"
	help
	  Serial console on UART E.

endchoice

config CONSOLE_SERIAL_TEGRA210_UART_ADDRESS
	hex
	depends on CONSOLE_SERIAL
	default 0x70006000 if CONSOLE_SERIAL_TEGRA210_UARTA
	default 0x70006040 if CONSOLE_SERIAL_TEGRA210_UARTB
	default 0x70006200 if CONSOLE_SERIAL_TEGRA210_UARTC
	default 0x70006300 if CONSOLE_SERIAL_TEGRA210_UARTD
	default 0x70006400 if CONSOLE_SERIAL_TEGRA210_UARTE
	help
	  Map the UART names to the respective MMIO addres.

config BOOTROM_SDRAM_INIT
	bool "SoC BootROM does SDRAM init with full BCT"
	default n
	help
	  Use during Foster LPDDR4 bringup.

config TRUSTZONE_CARVEOUT_SIZE_MB
	hex "Size of Trust Zone region"
	default 0x14
	help
	  Size of Trust Zone area in MiB to reserve in memory map.

config TTB_SIZE_MB
	hex "Size of TTB"
	default 0x4
	help
	  Maximum size of Translation Table Buffer in MiB.

config SEC_COMPONENT_SIZE_MB
	hex "Size of resident EL3 components"
	default 0x10
	help
	  Maximum size of resident EL3 components in MiB including BL31 and
	  Secure OS.

# Default to 700MHz. This value is based on nv bootloader setting.
config PLLX_KHZ
	int
	default 700000

config HAVE_MTC
	bool "Add external Memory controller Training Code binary"
	default n
	depends on USE_BLOBS
	help
	  Select this option to add emc training firmware

if HAVE_MTC

config MTC_FILE
	string "tegra mtc firmware filename"
	default "tegra_mtc.bin"
	help
	  The filename of the mtc firmware

config MTC_DIRECTORY
	string "Directory where MTC firmware file is located"
	default "."
	help
	  Path to directory where MTC firmware file is located.

config MTC_ADDRESS
	hex
	default 0x81000000
	help
	  The DRAM location where MTC firmware to be loaded in. This location
	  needs to be consistent with the location defined in tegra_mtc.ld

endif # HAVE_MTC

endif # SOC_NVIDIA_TEGRA210
config SOC_NVIDIA_TEGRA124
	bool
	default n
	select ARCH_BOOTBLOCK_ARMV4
	select BOOTBLOCK_CUSTOM
	select ARCH_VERSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	select HAVE_UART_SPECIAL
	select HAVE_HARD_RESET
	select HAVE_MONOTONIC_TIMER
	select GENERIC_UDELAY
	select BOOTBLOCK_CONSOLE
	select ARM_LPAE
	select GENERIC_GPIO_LIB

if SOC_NVIDIA_TEGRA124

config TEGRA124_MODEL_TD570D
	bool "TD570D"

config TEGRA124_MODEL_TD580D
	bool "TD580D"

config TEGRA124_MODEL_CD570M
	bool "CD570M"

config TEGRA124_MODEL_CD580M
	bool "CD580M"

# Default to 2GHz, the lowest maximum frequency.
config PLLX_KHZ
	int
	default 2000000 if TEGRA124_MODEL_TD570D
	default 2300000 if TEGRA124_MODEL_TD580D
	default 2100000 if TEGRA124_MODEL_CD570M
	default 2300000 if TEGRA124_MODEL_CD580M
	default 2000000

endif
config SOC_NVIDIA_TEGRA132
	bool
	default n
	select ARCH_BOOTBLOCK_ARMV4
	select BOOTBLOCK_CUSTOM
	select ARCH_VERSTAGE_ARMV4
	select ARCH_ROMSTAGE_ARMV4
	select ARCH_RAMSTAGE_ARMV8_64
	select BOOTBLOCK_CONSOLE
	select GIC
	select HAVE_MONOTONIC_TIMER
	select GENERIC_UDELAY
	select HAVE_HARD_RESET
	select HAVE_UART_SPECIAL
	select GENERIC_GPIO_LIB

if SOC_NVIDIA_TEGRA132

config MAINBOARD_DO_DSI_INIT
	bool "Use dsi graphics interface"
	depends on MAINBOARD_DO_NATIVE_VGA_INIT
	default n
	help
	  Initialize dsi display

config MAINBOARD_DO_SOR_INIT
	bool "Use dp graphics interface"
	depends on MAINBOARD_DO_NATIVE_VGA_INIT
	default n
	help
	  Initialize dp display

config MTS_DIRECTORY
	string "Directory where MTS microcode files are located"
	default "3rdparty/blobs/cpu/nvidia/tegra132/current/prod"
	help
	  Path to directory where MTS microcode files are located.

config TRUSTZONE_CARVEOUT_SIZE_MB
	hex "Size of Trust Zone region"
	default 0x4
	help
	  Size of Trust Zone area in MiB to reserve in memory map.

config BOOTROM_SDRAM_INIT
	bool "SoC BootROM does SDRAM init with full BCT"
	default n
	help
	  Use during Ryu LPDDR3 bringup

# Default to 700MHz. This value is based on nv bootloader setting.
config PLLX_KHZ
	int
	default 700000
endif
config SOC_QC_IPQ806X
	bool
	default n
	select ARCH_BOOTBLOCK_ARMV7
	select ARCH_VERSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	select BOOTBLOCK_CONSOLE
	select HAVE_UART_SPECIAL
	select SPI_ATOMIC_SEQUENCING
	select GENERIC_GPIO_LIB

if SOC_QC_IPQ806X

config CHROMEOS
	select CHROMEOS_VBNV_FLASH
	select SEPARATE_VERSTAGE
	select RETURN_FROM_VERSTAGE

config MBN_ENCAPSULATION
	depends on USE_BLOBS
	bool "bootblock encapsulation for ipq8064"
	default y

config SBL_BLOB
	depends on USE_BLOBS
	string "file name of the Qualcomm SBL blob"
	default "3rdparty/blobs/cpu/qualcomm/ipq806x/uber-sbl.mbn"
	help
	  The path and filename of the binary blob containing
	  ipq806x early initialization code, as supplied by the
	  vendor.

endif
comment "CPU"
# Warning: This file is included whether or not the if is here.
# The if controls how the evaluation occurs.
# (See also src/Kconfig)

config CPU_AMD_SOCKET_754
	bool

if CPU_AMD_SOCKET_754

config SOCKET_SPECIFIC_OPTIONS
	def_bool y
	select CPU_AMD_MODEL_FXX
	select X86_AMD_FIXED_MTRRS

config DCACHE_RAM_BASE
	hex
	default 0xc8000

config DCACHE_RAM_SIZE
	hex
	default 0x08000

config DCACHE_BSP_STACK_SIZE
	hex
	default 0x2000

config DCACHE_BSP_STACK_SLUSH
	hex
	default 0x1000

config DCACHE_AP_STACK_SIZE
	hex
	default 0x400

endif # CPU_AMD_SOCKET_754
config CPU_AMD_SOCKET_939
	bool
	select CPU_AMD_MODEL_FXX
	select X86_AMD_FIXED_MTRRS
config CPU_AMD_SOCKET_940
	bool

if CPU_AMD_SOCKET_940

config SOCKET_SPECIFIC_OPTIONS
	def_bool y
	select K8_HT_FREQ_1G_SUPPORT
	select CPU_AMD_MODEL_FXX
	select X86_AMD_FIXED_MTRRS

config DCACHE_RAM_BASE
	hex
	default 0xc8000

config DCACHE_RAM_SIZE
	hex
	default 0x08000

config DCACHE_BSP_STACK_SIZE
	hex
	default 0x2000

config DCACHE_BSP_STACK_SLUSH
	hex
	default 0x1000

config DCACHE_AP_STACK_SIZE
	hex
	default 0x400

endif # CPU_AMD_SOCKET_940
config CPU_AMD_SOCKET_AM2
	bool
	select K8_REV_F_SUPPORT
	# Opteron K8 1G HT support
	select K8_HT_FREQ_1G_SUPPORT
	select CPU_AMD_MODEL_FXX
	select X86_AMD_FIXED_MTRRS

config CPU_SOCKET_TYPE
	hex
	default 0x11
	depends on CPU_AMD_SOCKET_AM2
config CPU_AMD_SOCKET_AM2R2
	bool
	select CPU_AMD_MODEL_10XXX
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_SOCKET_AM2R2

config CPU_SOCKET_TYPE
	hex
	default 0x11

config EXT_RT_TBL_SUPPORT
	bool
	default n

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

endif
config CPU_AMD_SOCKET_AM3
	bool
	select CPU_AMD_MODEL_10XXX
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_SOCKET_AM3

config CPU_SOCKET_TYPE
	hex
	default 0x11

config EXT_RT_TBL_SUPPORT
	bool
	default n

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

endif
config CPU_AMD_SOCKET_C32_NON_AGESA
	bool
	select CPU_AMD_MODEL_10XXX
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_SOCKET_C32_NON_AGESA

config CPU_SOCKET_TYPE
	hex
	default 0x14

config EXT_RT_TBL_SUPPORT
	bool
	default n

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

endif
config CPU_AMD_SOCKET_FM2_NON_AGESA
	bool
	select CPU_AMD_MODEL_10XXX
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_SOCKET_FM2_NON_AGESA

config CPU_SOCKET_TYPE
	hex
	default 0x16

config EXT_RT_TBL_SUPPORT
	bool
	default n

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

endif
config CPU_AMD_SOCKET_G34_NON_AGESA
	bool
	select CPU_AMD_MODEL_10XXX
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_SOCKET_G34_NON_AGESA

config CPU_SOCKET_TYPE
	hex
	default 0x15

config EXT_RT_TBL_SUPPORT
	bool
	default n

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

endif
config CPU_AMD_SOCKET_ASB2
	bool
	select CPU_AMD_MODEL_10XXX
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_SOCKET_ASB2

config CPU_SOCKET_TYPE
	hex
	default 0x13

config EXT_RT_TBL_SUPPORT
	bool
	default n

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

endif
config CPU_AMD_SOCKET_F
	bool
	select K8_REV_F_SUPPORT
	select K8_HT_FREQ_1G_SUPPORT
	select CPU_AMD_MODEL_FXX
	select X86_AMD_FIXED_MTRRS

config CPU_SOCKET_TYPE
	hex
	default 0x10
	depends on CPU_AMD_SOCKET_F
config CPU_AMD_SOCKET_F_1207
	bool
	select CPU_AMD_MODEL_10XXX
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_SOCKET_F_1207

config CPU_SOCKET_TYPE
	hex
	default 0x10

config EXT_RT_TBL_SUPPORT
	bool
	default n

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

endif
config CPU_AMD_SOCKET_S1G1
	bool

if CPU_AMD_SOCKET_S1G1

config SOCKET_SPECIFIC_OPTIONS
	def_bool y
	select K8_REV_F_SUPPORT
	select K8_HT_FREQ_1G_SUPPORT
	select CPU_AMD_MODEL_FXX
	select X86_AMD_FIXED_MTRRS

config CPU_SOCKET_TYPE
	hex
	default 0x12

#DDR2 and REG, S1G1
config DIMM_SUPPORT
	hex
	default 0x0204

config DCACHE_RAM_BASE
	hex
	default 0xc8000

config DCACHE_RAM_SIZE
	hex
	default 0x08000

config DCACHE_BSP_STACK_SIZE
	hex
	default 0x2000

config DCACHE_BSP_STACK_SLUSH
	hex
	default 0x1000

config DCACHE_AP_STACK_SIZE
	hex
	default 0x400

endif

config CPU_AMD_MODEL_FXX
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select MMX
	select SSE
	select SSE2
	select TSC_SYNC_LFENCE
	select UDELAY_LAPIC
	select SUPPORT_CPU_UCODE_IN_CBFS

if CPU_AMD_MODEL_FXX
config CPU_ADDR_BITS
	int
	default 40

config MAX_PHYSICAL_CPUS
	int
	default 1

config LIFT_BSP_APIC_ID
	bool
	default n

config SET_FIDVID
	bool
	default y if K8_REV_F_SUPPORT
	default n

config HW_SCRUBBER
	bool
	default n

config UDELAY_LAPIC_FIXED_FSB
	int
	default 200

if SET_FIDVID
config SET_FIDVID_DEBUG
	bool
	default n

config SET_FIDVID_CORE0_ONLY
	bool
	default y

config SET_FIDVID_ONE_BY_ONE
	bool
	default y

config SET_FIDVID_STORE_AP_APICID_AT_FIRST
	bool
	default y
endif
endif
config CPU_AMD_MODEL_10XXX
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SSE
	select SSE2
	select MMCONF_SUPPORT_DEFAULT
	select TSC_SYNC_LFENCE
	select UDELAY_LAPIC
	select HAVE_MONOTONIC_TIMER
	select SUPPORT_CPU_UCODE_IN_CBFS
	select CPU_MICROCODE_MULTIPLE_FILES

if CPU_AMD_MODEL_10XXX

config USE_LARGE_DCACHE
	bool
	default y if CPU_AMD_SOCKET_G34_NON_AGESA
	default y if CPU_AMD_SOCKET_FM2_NON_AGESA
	default y if CPU_AMD_SOCKET_C32_NON_AGESA
	default n

config NUM_IPI_STARTS
	int
	default 1

config CPU_ADDR_BITS
	int
	default 48

config DCACHE_RAM_BASE
	hex
	default 0xc4000

config DCACHE_RAM_SIZE
	hex
	default 0x0c000

config DCACHE_BSP_STACK_SIZE
	hex
	default 0x4000

config DCACHE_BSP_STACK_SLUSH
	hex
	default 0x4000 if USE_LARGE_DCACHE
	default 0x1000

config DCACHE_AP_STACK_SIZE
	hex
	default 0x500

config SET_FIDVID
	bool
	default y

config MAX_PHYSICAL_CPUS
	int
	default 1

config LIFT_BSP_APIC_ID
	bool
	default n

if SET_FIDVID
config SET_FIDVID_DEBUG
	bool
	default y

config SET_FIDVID_STORE_AP_APICID_AT_FIRST
	bool
	default y

config SET_FIDVID_CORE0_ONLY
	bool
	default n

# 0: all cores
# 1: core 0 only
# 2: all but core 0
config SET_FIDVID_CORE_RANGE
	int
	default 0

endif	# SET_FIDVID

config UDELAY_LAPIC_FIXED_FSB
	int
	default 200

endif	# CPU_AMD_MODEL_10XXX
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_AMD_GEODE_GX2
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32

if CPU_AMD_GEODE_GX2

config CPU_SPECIFIC_OPTIONS
	def_bool y

config DCACHE_RAM_BASE
	hex
	default 0xc8000

config DCACHE_RAM_SIZE
	hex
	default 0x04000

config DCACHE_BSP_STACK_SIZE
	hex
	default 0x1000

config DCACHE_BSP_STACK_SLUSH
	hex
	default 0x1000

config DCACHE_AP_STACK_SIZE
	hex
	default 0x400

config GEODE_VSA
	bool
	default y

config GEODE_VSA_FILE
	bool "Add a VSA image"
	help
	  Select this option if you have an AMD Geode GX2 vsa that you would
	  like to add to your ROM.

	  You will be able to specify the location and file name of the
	  image later.

config VSA_FILENAME
	string "AMD Geode GX2 VSA path and filename"
	depends on GEODE_VSA_FILE
	default "gpl_vsa_gx_102.bin"
	help
	  The path and filename of the file to use as VSA.

endif # CPU_AMD_GEODE_GX2
config CPU_AMD_GEODE_LX
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32

if CPU_AMD_GEODE_LX

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select TSC_MONOTONIC_TIMER

config DCACHE_RAM_BASE
	hex
	default 0xc8000

config DCACHE_RAM_SIZE
	hex
	default 0x8000

config DCACHE_BSP_STACK_SIZE
	hex
	default 0x2000

config DCACHE_BSP_STACK_SLUSH
	hex
	default 0x1000

config DCACHE_AP_STACK_SIZE
	hex
	default 0x400

config GEODE_VSA
	bool
	default y

config GEODE_VSA_FILE
	bool "Add a VSA image"
	default y
	help
	  Select this option if you have an AMD Geode LX vsa that you would
	  like to add to your ROM.

	  You will be able to specify the location and file name of the
	  image later.

config VSA_FILENAME
	string "AMD Geode LX VSA path and filename"
	depends on GEODE_VSA_FILE
	default "3rdparty/blobs/cpu/amd/geode_lx/gpl_vsa_lx_102.bin"
	help
	  The path and filename of the file to use as VSA.

endif # CPU_AMD_GEODE_LX

#
# This file is part of the coreboot project.
#
# Copyright (C) 2011 - 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_AGESA
	bool
	default y if CPU_AMD_AGESA_FAMILY10
	default y if CPU_AMD_AGESA_FAMILY12
	default y if CPU_AMD_AGESA_FAMILY14
	default y if CPU_AMD_AGESA_FAMILY15
	default y if CPU_AMD_AGESA_FAMILY15_TN
	default y if CPU_AMD_AGESA_FAMILY15_RL
	default y if CPU_AMD_AGESA_FAMILY16_KB
	default n
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select TSC_SYNC_LFENCE
	select UDELAY_LAPIC
	select LAPIC_MONOTONIC_TIMER
	select SPI_FLASH if HAVE_ACPI_RESUME

if CPU_AMD_AGESA

config XIP_ROM_SIZE
	hex
	default 0x100000
	help
	  Overwride the default write through caching size as 1M Bytes.
	  On some AMD platforms, one socket supports 2 or more kinds of
	  processor family, compiling several CPU families agesa code
	  will increase the romstage size.
	  In order to execute romstage in place on the flash ROM,
	  more space is required to be set as write through caching.

config UDELAY_LAPIC_FIXED_FSB
	int
	default 200

# TODO: Sync these with definitions in AGESA vendorcode.
# DCACHE_RAM_BASE must equal BSP_STACK_BASE_ADDR.
# DCACHE_RAM_SIZE must equal BSP_STACK_SIZE.

config DCACHE_RAM_BASE
	hex
	default 0x30000

config DCACHE_RAM_SIZE
	hex
	default 0x10000

config S3_DATA_POS
	hex
	default 0xFFFF0000

config S3_DATA_SIZE
	int
	default 32768

endif # CPU_AMD_AGESA

#
# This file is part of the coreboot project.
#
# Copyright (C) 2011 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_AGESA_FAMILY10
	bool
	select CPU_AMD_MODEL_10XXX
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_AGESA_FAMILY10

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

config REDIRECT_IDS_HDT_CONSOLE_TO_SERIAL
	bool "Redirect AGESA IDS_HDT_CONSOLE to serial console"
	default n
	help
	  This Option allows you to redirect the AMD AGESA IDS_HDT_CONSOLE debug information to the serial console.

	  Warning: Only enable this option when debuging or tracing AMD AGESA code.

endif #CPU_AMD_AGESA_FAMILY10
#
# This file is part of the coreboot project.
#
# Copyright (C) 2011 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_AGESA_FAMILY12
	bool
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_AGESA_FAMILY12

config CPU_ADDR_BITS
	int
	default 48

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2011 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_AGESA_FAMILY14
	bool
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_AGESA_FAMILY14

config CPU_ADDR_BITS
	int
	default 36

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_AGESA_FAMILY15
	bool
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_AGESA_FAMILY15

config CPU_ADDR_BITS
	int
	default 48

config CPU_AMD_SOCKET_G34
	bool
	default n
	help
	  AMD G34 Socket

config CPU_AMD_SOCKET_C32
	bool
	default n
	help
	  AMD C32 Socket

config CPU_AMD_SOCKET_AM3R2
	bool
	default n
	help
	  AMD AM3r2 Socket

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x80000

config REDIRECT_IDS_HDT_CONSOLE_TO_SERIAL
	bool "Redirect AGESA IDS_HDT_CONSOLE to serial console"
	default n
	help
	  This Option allows you to redirect the AMD AGESA IDS_HDT_CONSOLE debug information to the serial console.

	  Warning: Only enable this option when debuging or tracing AMD AGESA code.

endif #CPU_AMD_AGESA_FAMILY15
#
# This file is part of the coreboot project.
#
# Copyright (C) 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_AGESA_FAMILY15_TN
	bool
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_AGESA_FAMILY15_TN

config CPU_ADDR_BITS
	int
	default 48

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x100000

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2012 Advanced Micro Devices, Inc.
# Copyright (C) 2014 Edward O'Callaghan <eocallaghan@alterapraxis.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_AGESA_FAMILY15_RL
	bool
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_AGESA_FAMILY15_RL

config CPU_ADDR_BITS
	int
	default 48

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x100000

endif # CPU_AMD_AGESA_FAMILY15_RL
#
# This file is part of the coreboot project.
#
# Copyright (C) 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_AGESA_FAMILY16_KB
	bool
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_AGESA_FAMILY16_KB

config CPU_ADDR_BITS
	int
	default 40

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x100000

config FORCE_AM1_SOCKET_SUPPORT
	bool
	default n
	help
		Force AGESA to ignore package type mismatch between CPU and northbridge
		in memory code. This enables Socket AM1 support with current AGESA
		version for Kabini platform.
		Enable this option only if you have Socket AM1 board.
		Note that the AGESA release shipped with coreboot does not officially
		support the AM1 socket. Selecting this option might damage your hardware.

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2011 - 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_PI
	bool
	default y if CPU_AMD_PI_00630F01
	default y if CPU_AMD_PI_00730F01
	default y if CPU_AMD_PI_00660F01
	default n
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select TSC_SYNC_LFENCE
	select UDELAY_LAPIC
	select LAPIC_MONOTONIC_TIMER
	select SPI_FLASH if HAVE_ACPI_RESUME

if CPU_AMD_PI

config XIP_ROM_SIZE
	hex
	default 0x100000
	help
	  Overwride the default write through caching size as 1M Bytes.
	  On some AMD platforms, one socket supports 2 or more kinds of
	  processor family, compiling several CPU families agesa code
	  will increase the romstage size.
	  In order to execute romstage in place on the flash ROM,
	  more space is required to be set as write through caching.

config UDELAY_LAPIC_FIXED_FSB
	int
	default 200

# TODO: Sync these with definitions in PI vendorcode.
# DCACHE_RAM_BASE must equal BSP_STACK_BASE_ADDR.
# DCACHE_RAM_SIZE must equal BSP_STACK_SIZE.

config DCACHE_RAM_BASE
	hex
	default 0x30000

config DCACHE_RAM_SIZE
	hex
	default 0x10000

config S3_DATA_POS
	hex
	default 0xFFFF0000

config S3_DATA_SIZE
	int
	default 32768

endif # CPU_AMD_PI

#
# This file is part of the coreboot project.
#
# Copyright (C) 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_PI_00630F01
	bool
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_PI_00630F01

config CPU_ADDR_BITS
	int
	default 48

config EXT_CONF_SUPPORT
	bool
	default n

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x100000

config HIGH_SCRATCH_MEMORY_SIZE
	hex
	# Assume the maximum size of stack as (0xA0000 - 0x30000 + 0x1000)
	default 0x71000

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_PI_00730F01
	bool
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_PI_00730F01

config CPU_ADDR_BITS
	int
	default 40

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x100000

config HIGH_SCRATCH_MEMORY_SIZE
	hex
	# Assume the maximum size of stack as (0xA0000 - 0x30000 + 0x1000)
	default 0xA1000

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2015 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config CPU_AMD_PI_00660F01
	bool
	select PCI_IO_CFG_EXT
	select X86_AMD_FIXED_MTRRS

if CPU_AMD_PI_00660F01

config CPU_ADDR_BITS
	int
	default 48

config EXT_CONF_SUPPORT
	bool
	default n

config CBB
	hex
	default 0x0

config CDB
	hex
	default 0x18

config XIP_ROM_SIZE
	hex
	default 0x100000

config HAVE_INIT_TIMER
	bool
	default y

config HIGH_SCRATCH_MEMORY_SIZE
	hex
	# Assume the maximum size of stack as (0xA0000 - 0x30000 + 0x1000)
	default 0xA1000

endif
# CPU models
config CPU_INTEL_MODEL_6XX
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_65X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_67X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Joseph Smith <joe@settoplinux.org>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_INTEL_MODEL_68X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_69X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_6BX
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_6DX
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_6EX
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SSE2
	select UDELAY_LAPIC
	select AP_IN_SIPI_WAIT
	select TSC_SYNC_MFENCE
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_6FX
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SSE2
	select UDELAY_LAPIC
	select AP_IN_SIPI_WAIT
	select TSC_SYNC_MFENCE
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_1067X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SSE2
	select TSC_SYNC_MFENCE
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_106CX
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SSE2
	select UDELAY_LAPIC
	select SIPI_VECTOR_IN_ROM
	select AP_IN_SIPI_WAIT
	select TSC_SYNC_MFENCE
	select SUPPORT_CPU_UCODE_IN_CBFS
	select SERIALIZED_SMM_INITIALIZATION

if CPU_INTEL_MODEL_106CX

config CPU_ADDR_BITS
	int
	default 32

endif
config CPU_INTEL_MODEL_206AX
	bool

config CPU_INTEL_MODEL_306AX
	bool

if CPU_INTEL_MODEL_206AX || CPU_INTEL_MODEL_306AX

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SSE2
	select UDELAY_LAPIC
	select SMM_TSEG
	select SUPPORT_CPU_UCODE_IN_CBFS
	#select AP_IN_SIPI_WAIT
	select TSC_SYNC_MFENCE
	select LAPIC_MONOTONIC_TIMER

config BOOTBLOCK_CPU_INIT
	string
	default "cpu/intel/model_206ax/bootblock.c"

config SMM_TSEG_SIZE
	hex
	default 0x800000

config ENABLE_VMX
	bool "Enable VMX for virtualization"
	default n

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2013 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##


config CPU_INTEL_FSP_MODEL_206AX
	bool

config CPU_INTEL_FSP_MODEL_306AX
	bool

if CPU_INTEL_FSP_MODEL_206AX || CPU_INTEL_FSP_MODEL_306AX

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select PLATFORM_USES_FSP1_0
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SSE2
	select UDELAY_LAPIC
	select SMM_TSEG
	select SUPPORT_CPU_UCODE_IN_CBFS
	select PARALLEL_CPU_INIT
	select TSC_SYNC_MFENCE
	select LAPIC_MONOTONIC_TIMER

config BOOTBLOCK_CPU_INIT
	string
	default "cpu/intel/fsp_model_206ax/bootblock.c"

config SMM_TSEG_SIZE
	hex
	default 0x800000

config ENABLE_VMX
	bool "Enable VMX for virtualization"
	default n

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2013-2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_INTEL_FSP_MODEL_406DX
	bool

if CPU_INTEL_FSP_MODEL_406DX

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select PLATFORM_USES_FSP1_0
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SSE2
	select UDELAY_LAPIC
	select SUPPORT_CPU_UCODE_IN_CBFS
	select PARALLEL_CPU_INIT
	select TSC_SYNC_MFENCE
	select LAPIC_MONOTONIC_TIMER

	# Microcode header files are delivered in FSP package
	select USES_MICROCODE_HEADER_FILES if HAVE_FSP_BIN

choice
	prompt "Rangeley CPU Stepping"
	default FSP_MODEL_406DX_B0

config FSP_MODEL_406DX_A1
	bool "A1"

config FSP_MODEL_406DX_B0
	bool "B0"

endchoice

config BOOTBLOCK_CPU_INIT
	string
	default "cpu/intel/fsp_model_406dx/bootblock.c"

config ENABLE_VMX
	bool "Enable VMX for virtualization"
	default n

#set up microcode for rangeley POSTGOLD4 release
config CPU_MICROCODE_HEADER_FILES
	string
	default "../intel/cpu/rangeley/microcode/microcode-m01406d000e.h ../intel/cpu/rangeley/microcode/microcode-m01406d8128.h"

endif #CPU_INTEL_FSP_MODEL_406DX
config CPU_INTEL_MODEL_2065X
	bool

if CPU_INTEL_MODEL_2065X

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SSE
	select SSE2
	select UDELAY_TSC
	select TSC_CONSTANT_RATE
	select SMM_TSEG
	select SUPPORT_CPU_UCODE_IN_CBFS
	select PARALLEL_CPU_INIT
	#select AP_IN_SIPI_WAIT
	select TSC_SYNC_MFENCE

config BOOTBLOCK_CPU_INIT
	string
	default "cpu/intel/model_2065x/bootblock.c"

config SMM_TSEG_SIZE
	hex
	default 0x800000

config ENABLE_VMX
	bool "Enable VMX for virtualization"
	default n

config XIP_ROM_SIZE
	hex
	default 0x20000

endif
config CPU_INTEL_MODEL_F0X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_F1X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_F2X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_F3X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_MODEL_F4X
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
	select SUPPORT_CPU_UCODE_IN_CBFS
config CPU_INTEL_EP80579
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SSE
	select SUPPORT_CPU_UCODE_IN_CBFS

if CPU_INTEL_EP80579

# These are just dummy values to keep build happy.
# This CPU does not have tested cache_as_ram.inc.

config DCACHE_RAM_BASE
	hex
	default 0xffaf8000

config DCACHE_RAM_SIZE
	hex
	default 0x8000

endif

config CPU_INTEL_HASWELL
	bool

if CPU_INTEL_HASWELL

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select BACKUP_DEFAULT_SMM_REGION
	select HAVE_MONOTONIC_TIMER
	select SMP
	select MMX
	select SSE
	select SSE2
	select UDELAY_TSC
	select TSC_CONSTANT_RATE
	select SMM_TSEG
	select RELOCATABLE_MODULES
	select RELOCATABLE_RAMSTAGE
	select SUPPORT_CPU_UCODE_IN_CBFS
	#select AP_IN_SIPI_WAIT
	select TSC_SYNC_MFENCE
	select CPU_INTEL_FIRMWARE_INTERFACE_TABLE
	select PARALLEL_CPU_INIT
	select PARALLEL_MP

config BOOTBLOCK_CPU_INIT
	string
	default "cpu/intel/haswell/bootblock.c"

config SMM_TSEG_SIZE
	hex
	default 0x800000

config ENABLE_VMX
	bool "Enable VMX for virtualization"
	default n

config IED_REGION_SIZE
	hex
	default 0x400000

config SMM_RESERVED_SIZE
	hex
	default 0x100000

config RESET_ON_INVALID_RAMSTAGE_CACHE
	bool "Reset the system on S3 wake when ramstage cache invalid."
	default n
	depends on RELOCATABLE_RAMSTAGE
	help
	  The haswell romstage code caches the loaded ramstage program
	  in SMM space. On S3 wake the romstage will copy over a fresh
	  ramstage that was cached in the SMM space. This option determines
	  the action to take when the ramstage cache is invalid. If selected
	  the system will reset otherwise the ramstage will be reloaded from
	  cbfs.

endif
# Sockets/Slots
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_INTEL_SLOT_2
	bool

config DCACHE_RAM_SIZE
	hex
	default 0x01000
	depends on CPU_INTEL_SLOT_2
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Keith Hui <buurin@gmail.com>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_INTEL_SLOT_1
	bool

if CPU_INTEL_SLOT_1

config SLOT_SPECIFIC_OPTIONS # dummy
	def_bool y
	select CPU_INTEL_MODEL_65X
	select CPU_INTEL_MODEL_67X
	select CPU_INTEL_MODEL_68X
	select CPU_INTEL_MODEL_6BX
	select CPU_INTEL_MODEL_6XX

config DCACHE_RAM_BASE
	hex
	default 0xcf000

config DCACHE_RAM_SIZE
	hex
	default 0x01000

endif
config CPU_INTEL_SOCKET_BGA956
	bool
	select CPU_INTEL_MODEL_1067X
	select MMX
	select SSE

if CPU_INTEL_SOCKET_BGA956

config DCACHE_RAM_BASE
	hex
	default 0xffaf8000

config DCACHE_RAM_SIZE
	hex
	default 0x8000

endif
config CPU_INTEL_SOCKET_BGA1284
	bool

if CPU_INTEL_SOCKET_BGA1284

config SOCKET_SPECIFIC_OPTIONS # dummy
	def_bool y
	select MMX
	select SSE

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Joseph Smith <joe@settoplinux.org>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_INTEL_SOCKET_FC_PGA370
	bool
	select CPU_INTEL_MODEL_68X
	select MMX
	select SSE

if CPU_INTEL_SOCKET_FC_PGA370

config DCACHE_RAM_BASE
	hex
	default 0xc8000

config DCACHE_RAM_SIZE
	hex
	default 0x08000

endif
config CPU_INTEL_SOCKET_FCBGA559
	bool

if CPU_INTEL_SOCKET_FCBGA559

config SOCKET_SPECIFIC_OPTIONS
	def_bool y
	select CPU_INTEL_MODEL_106CX
	select MMX
	select SSE

config DCACHE_RAM_BASE
	hex
	default 0xffafc000

config DCACHE_RAM_SIZE
	hex
	default 0x4000

endif
config CPU_INTEL_SOCKET_MFCBGA479
	bool
	select CPU_INTEL_MODEL_6BX
	select MMX
	select SSE

if CPU_INTEL_SOCKET_MFCBGA479

config DCACHE_RAM_BASE
	hex
	default 0xc8000

config DCACHE_RAM_SIZE
	hex
	default 0x08000

endif
config CPU_INTEL_SOCKET_MFCPGA478
	bool

if CPU_INTEL_SOCKET_MFCPGA478

config SOCKET_SPECIFIC_OPTIONS # dummy
	def_bool y
	select CPU_INTEL_MODEL_6EX
	select CPU_INTEL_MODEL_6FX
	select MMX
	select SSE

config DCACHE_RAM_BASE
	hex
	default 0xffaf8000

config DCACHE_RAM_SIZE
	hex
	default 0x8000

endif
config CPU_INTEL_SOCKET_MPGA478
	bool
	select CPU_INTEL_MODEL_69X
	select CPU_INTEL_MODEL_6DX
config CPU_INTEL_SOCKET_MPGA479M
	bool
	select CPU_INTEL_MODEL_69X
	select CPU_INTEL_MODEL_6BX
	select CPU_INTEL_MODEL_6DX
	select CPU_INTEL_MODEL_F2X
	select MMX
	select SSE

if CPU_INTEL_SOCKET_MPGA479M

config DCACHE_RAM_BASE
	hex
	default 0xc8000

config DCACHE_RAM_SIZE
	hex
	default 0x08000

endif
config CPU_INTEL_SOCKET_MPGA603
	bool
	select CPU_INTEL_MODEL_F0X
	select CPU_INTEL_MODEL_F1X
	select CPU_INTEL_MODEL_F2X
config CPU_INTEL_SOCKET_MPGA604
	bool

if CPU_INTEL_SOCKET_MPGA604

config SOCKET_SPECIFIC_OPTIONS # dummy
	def_bool y
	select CPU_INTEL_MODEL_F2X
	select CPU_INTEL_MODEL_F3X
	select CPU_INTEL_MODEL_F4X
	select MMX
	select SSE
	select UDELAY_TSC
	select SIPI_VECTOR_IN_ROM

# mPGA604 are usually Intel Netburst CPUs which should have SSE2
# but the ramtest.c code on the Dell S1850 seems to choke on
# enabling it, so disable it for now.
config SSE2
	bool
	default n

config DCACHE_RAM_BASE
	hex
	default 0x0ffafc000

config DCACHE_RAM_SIZE
	hex
	default 0x4000

endif # CPU_INTEL_SOCKET_MPGA604
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_INTEL_SOCKET_PGA370
	bool
	select CPU_INTEL_MODEL_6XX
	select MMX

if CPU_INTEL_SOCKET_PGA370

# Not all CPUs for Socket 370 can do SSE2
config SSE2
	bool
	default n

config DCACHE_RAM_BASE
	hex
	default 0xcf000

config DCACHE_RAM_SIZE
	hex
	default 0x01000

endif
config CPU_INTEL_SOCKET_441
	bool

if CPU_INTEL_SOCKET_441

config SOCKET_SPECIFIC_OPTIONS # dummy
	def_bool y
	select CPU_INTEL_MODEL_106CX
	select MMX
	select SSE

config DCACHE_RAM_BASE
	hex
	default 0xffaf8000

config DCACHE_RAM_SIZE
	hex
	default 0x8000

endif # CPU_INTEL_SOCKET_441
config CPU_INTEL_SOCKET_LGA1155
	bool

if CPU_INTEL_SOCKET_LGA1155

config SOCKET_SPECIFIC_OPTIONS # dummy
	def_bool y
	select MMX
	select SSE

endif # CPU_INTEL_SOCKET_LGA1155
config CPU_INTEL_SOCKET_LGA771
	bool
	select CPU_INTEL_MODEL_6FX
	select SSE2
	select MMX
	select AP_IN_SIPI_WAIT
config CPU_INTEL_SOCKET_LGA775
	bool

if CPU_INTEL_SOCKET_LGA775

config SOCKET_SPECIFIC_OPTIONS # dummy
	def_bool y
	select CPU_INTEL_MODEL_6EX
	select CPU_INTEL_MODEL_6FX
	select CPU_INTEL_MODEL_F3X
	select CPU_INTEL_MODEL_F4X
#	select CPU_INTEL_MODEL_F6X
#	select CPU_INTEL_MODEL_1066X
	select CPU_INTEL_MODEL_1067X
	select MMX
	select SSE
	select SIPI_VECTOR_IN_ROM

config DCACHE_RAM_SIZE
	hex
	default 0x4000 # 16 kB

config DCACHE_RAM_BASE
	hex
	default 0xfeffc000 # 4GB - 16MB - DCACHE_RAM_SIZE

endif # CPU_INTEL_SOCKET_LGA775
config CPU_INTEL_SOCKET_RPGA988B
	bool

if CPU_INTEL_SOCKET_RPGA988B

config SOCKET_SPECIFIC_OPTIONS # dummy
	def_bool y
	select MMX
	select SSE

endif
config CPU_INTEL_SOCKET_RPGA989
	bool

if CPU_INTEL_SOCKET_RPGA989

config SOCKET_SPECIFIC_OPTIONS # dummy
	def_bool y
	select MMX
	select SSE

endif
# Architecture specific features
config CPU_INTEL_FIRMWARE_INTERFACE_TABLE
	def_bool n
	help
	  This option selects building a Firmware Interface Table (FIT).

config CPU_INTEL_NUM_FIT_ENTRIES
	int
	default 4
	depends on CPU_INTEL_FIRMWARE_INTERFACE_TABLE
	help
	  This option selects the number of empty entries in the FIT table.

config CPU_INTEL_TURBO_NOT_PACKAGE_SCOPED
	def_bool n
	help
	  This option indicates that the turbo mode setting is not package
	  scoped. i.e. enable_turbo() needs to be called on not just the bsp
##
## This file is part of the coreboot project.
##
## Copyright (C) 2013 DMP Electronics Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

##
## This file is part of the coreboot project.
##
## Copyright (C) 2013 DMP Electronics Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_DMP_VORTEX86EX
	bool

if CPU_DMP_VORTEX86EX

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select UDELAY_TSC

# ROM Strap PLL config setting :

choice
	prompt "ROM Strap PLL config"
	default PLL_300_300_33

config PLL_200_200_33
	bool "CPU=200Mhz/DRAM=200Mhz/PCI=33Mhz"

config PLL_300_300_33
	bool "CPU=300Mhz/DRAM=300Mhz/PCI=33Mhz"

config PLL_300_300_100
	bool "CPU=300Mhz/DRAM=300Mhz/PCI=100Mhz"

config PLL_400_200_33
	bool "CPU=400Mhz/DRAM=200Mhz/PCI=33Mhz"

config PLL_400_200_100
	bool "CPU=400Mhz/DRAM=200Mhz/PCI=100Mhz"

config PLL_400_400_33
	bool "CPU=400Mhz/DRAM=400Mhz/PCI=33Mhz"

config PLL_500_250_33
	bool "CPU=500Mhz/DRAM=250Mhz/PCI=33Mhz"

config PLL_500_500_33
	bool "CPU=500Mhz/DRAM=500Mhz/PCI=33Mhz"

config PLL_400_300_33
	bool "CPU=400Mhz/DRAM=300Mhz/PCI=33Mhz"

config PLL_400_300_100
	bool "CPU=400Mhz/DRAM=300Mhz/PCI=100Mhz"

config PLL_444_333_33
	bool "CPU=444Mhz/DRAM=333Mhz/PCI=33Mhz"

config PLL_466_350_33
	bool "CPU=466Mhz/DRAM=350Mhz/PCI=33Mhz"

config PLL_500_375_33
	bool "CPU=500Mhz/DRAM=375Mhz/PCI=33Mhz"

endchoice

endif
config CPU_VIA_C3
	bool

if CPU_VIA_C3

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select UDELAY_TSC
	select MMX
	select IOAPIC_INTERRUPTS_ON_APIC_SERIAL_BUS

endif # CPU_VIA_C3
config CPU_VIA_C7
	bool

if CPU_VIA_C7

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	# Missing tsc_freq_mhz and TSC_CONSTANT_RATE
	#select UDELAY_TSC
	select UDELAY_IO
	select MMX
	select SSE2

config DCACHE_RAM_BASE
	hex
	default 0xffef0000

config DCACHE_RAM_SIZE
	hex
	default 0x8000

endif # CPU_VIA_C7
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011  Alexandru Gagniuc <mr.nuke.me@gmail.com>
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_VIA_NANO
	bool

if CPU_VIA_NANO

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select UDELAY_TSC
	select MMX
	select SSE2
	select SUPPORT_CPU_UCODE_IN_CBFS

config DCACHE_RAM_BASE
	hex
	default 0xffe00000

config DCACHE_RAM_SIZE
	hex
	default 0x8000

endif # CPU_VIA_NANO
##
## This file is part of the coreboot project.
##
## Copyright (C) 2013 Gerd Hoffmann <kraxel@redhat.com>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_QEMU_POWER8
	bool
	select ARCH_BOOTBLOCK_POWER8
	select ARCH_VERSTAGE_POWER8
	select ARCH_ROMSTAGE_POWER8
	select ARCH_RAMSTAGE_POWER8
config CPU_TI_AM335X
	select ARCH_BOOTBLOCK_ARMV7
	select ARCH_VERSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	select HAVE_MONOTONIC_TIMER
	select HAVE_UART_SPECIAL
	select BOOTBLOCK_CONSOLE
	select GENERIC_UDELAY
	bool
	default n
config CPU_ARMLTD_CORTEX_A9
	bool
	select ARCH_BOOTBLOCK_ARMV7
	select ARCH_VERSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	default n

if CPU_ARMLTD_CORTEX_A9

endif
# TODO These two options look too similar
config PARALLEL_CPU_INIT
	bool
	default n

config PARALLEL_MP
	def_bool n
	help
	 This option uses common MP infrastructure for bringing up APs
	 in parallel. It additionally provides a more flexible mechanism
	 for sequencing the steps of bringing up the APs.


config UDELAY_IO
	bool
	default y if !UDELAY_LAPIC && !UDELAY_TSC && !UDELAY_TIMER2
	default n

config UDELAY_LAPIC
	bool
	default n

config LAPIC_MONOTONIC_TIMER
	def_bool n
	depends on UDELAY_LAPIC
	select HAVE_MONOTONIC_TIMER
	help
	  Expose monotonic time using the local apic.

config UDELAY_LAPIC_FIXED_FSB
	int

config UDELAY_TSC
	bool
	default n

config TSC_CONSTANT_RATE
	def_bool n
	depends on UDELAY_TSC
	help
	  This option asserts that the TSC ticks at a known constant rate.
	  Therefore, no TSC calibration is required.

config TSC_MONOTONIC_TIMER
	def_bool n
	depends on UDELAY_TSC
	select HAVE_MONOTONIC_TIMER
	help
	  Expose monotonic time using the TSC.

# This option is used in code but never selected.
config UDELAY_TIMER2
	bool
	default n

config TSC_SYNC_LFENCE
	bool
	default n
	help
	  The CPU driver should select this if the CPU needs
	  to execute an lfence instruction in order to synchronize
	  rdtsc. This is true for all modern AMD CPUs.

config TSC_SYNC_MFENCE
	bool
	default n
	help
	  The CPU driver should select this if the CPU needs
	  to execute an mfence instruction in order to synchronize
	  rdtsc. This is true for all modern Intel CPUs.

config XIP_ROM_SIZE
	hex
	default ROM_SIZE if ROMCC
	default 0x10000

config CPU_ADDR_BITS
	int
	default 36

config LOGICAL_CPUS
	bool
	default y

config SMM_TSEG
	bool
	default n
	select RELOCATABLE_MODULES

config SMM_MODULE_HEAP_SIZE
	hex
	default 0x4000
	depends on SMM_TSEG
	help
	  This option determines the size of the heap within the SMM handler
	  modules.

config SMM_LAPIC_REMAP_MITIGATION
	bool
	default y if NORTHBRIDGE_INTEL_I945
	default y if NORTHBRIDGE_INTEL_GM45
	default y if NORTHBRIDGE_INTEL_NEHALEM
	default n

config SERIALIZED_SMM_INITIALIZATION
	bool
	default n
	help
	  On some CPUs, there is a race condition in SMM.
	  This can occur when both hyperthreads change SMM state
	  variables in parallel without coordination.
	  Setting this option serializes the SMM initialization
	  to avoid an ugly hang in the boot process at the cost
	  of a slightly longer boot time.

config X86_AMD_FIXED_MTRRS
	bool
	default n
	help
	  This option informs the MTRR code to use the RdMem and WrMem fields
	  in the fixed MTRR MSRs.

config PLATFORM_USES_FSP1_0
	bool
	default n
	help
	  Selected for Intel processors/platform combinations that use the
	  Intel Firmware Support Package (FSP) 1.0 for initialization.

config BACKUP_DEFAULT_SMM_REGION
	def_bool n
	help
	 The CPU support will select this option if the default SMM region
	 needs to be backed up for suspend/resume purposes.

config MIRROR_PAYLOAD_TO_RAM_BEFORE_LOADING
	def_bool n
	help
	  On certain platforms a boot speed gain can be realized if mirroring
	  the payload data stored in non-volatile storage. On x86 systems the
	  payload would typically live in a memory-mapped SPI part. Copying
	  the SPI contents to RAM before performing the load can speed up
	  the boot process.

config BOOT_MEDIA_SPI_BUS
	int
	default 0
	depends on SPI_FLASH
	help
	 Most x86 systems which boot from SPI flash boot using bus 0.
##
## This file is part of the coreboot project.
##
## Copyright (C) 2013 Gerd Hoffmann <kraxel@redhat.com>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config CPU_QEMU_X86
	bool
	select ARCH_BOOTBLOCK_X86_32
	select ARCH_VERSTAGE_X86_32
	select ARCH_ROMSTAGE_X86_32
	select ARCH_RAMSTAGE_X86_32
	select SMP
config CPU_ALLWINNER_A10
	bool
	default n

if CPU_ALLWINNER_A10

config CPU_SPECIFIC_OPTIONS
	def_bool y
	select ARCH_BOOTBLOCK_ARMV7
	select ARCH_VERSTAGE_ARMV7
	select ARCH_ROMSTAGE_ARMV7
	select ARCH_RAMSTAGE_ARMV7
	select HAVE_MONOTONIC_TIMER
	select HAVE_UART_SPECIAL
	select BOOTBLOCK_CONSOLE

endif # if CPU_ALLWINNER_A10

if ARCH_X86

config CACHE_AS_RAM
	bool
	default !ROMCC

config DCACHE_RAM_BASE
	hex

config DCACHE_RAM_SIZE
	hex

config DCACHE_BSP_STACK_SIZE
	hex

config DCACHE_BSP_STACK_SLUSH
	hex

config DCACHE_AP_STACK_SIZE
	hex

config SMP
	bool
	default y if MAX_CPUS != 1
	default n
	help
	  This option is used to enable certain functions to make coreboot
	  work correctly on symmetric multi processor (SMP) systems.

config AP_SIPI_VECTOR
	hex
	default 0xfffff000
	help
	  This must equal address of ap_sipi_vector from bootblock build.

config	MMX
	bool
	help
	  Select MMX in your socket or model Kconfig if your CPU has MMX
	  streaming SIMD instructions. ROMCC can build more efficient
	  code if it can spill to MMX registers.

config SSE
	bool
	help
	  Select SSE in your socket or model Kconfig if your CPU has SSE
	  streaming SIMD instructions. ROMCC can build more efficient
	  code if it can spill to SSE (aka XMM) registers.

config SSE2
	bool
	default n
	help
	  Select SSE2 in your socket or model Kconfig if your CPU has SSE2
	  streaming SIMD instructions. Some parts of coreboot can be built
	  with more efficient code if SSE2 instructions are available.

endif # ARCH_X86

config SUPPORT_CPU_UCODE_IN_CBFS
	bool
	default n

config USES_MICROCODE_HEADER_FILES
	def_bool n
	select SUPPORT_CPU_UCODE_IN_CBFS
	help
	  This is selected by a board or chipset to set the default for the
	  microcode source choice to a list of external microcode headers

choice
	prompt "Include CPU microcode in CBFS" if ARCH_X86
	default CPU_MICROCODE_CBFS_EXTERNAL_HEADER if USES_MICROCODE_HEADER_FILES
	default CPU_MICROCODE_CBFS_GENERATE if SUPPORT_CPU_UCODE_IN_CBFS && USE_BLOBS
	default CPU_MICROCODE_CBFS_NONE if !SUPPORT_CPU_UCODE_IN_CBFS

config CPU_MICROCODE_CBFS_GENERATE
	bool "Generate from tree"
	help
	  Select this option if you want microcode updates to be assembled when
	  building coreboot and included in the final image as a separate CBFS
	  file. Microcode will not be hard-coded into ramstage.

	  The microcode file may be removed from the ROM image at a later
	  time with cbfstool, if desired.

	  If unsure, select this option.

config CPU_MICROCODE_CBFS_EXTERNAL_HEADER
	bool "Include external microcode header files"
	help
	  Select this option if you want to include external c header files
	  containing the CPU microcode. This will be included as a separate
	  file in CBFS.

	  A word of caution: only select this option if you are sure the
	  microcode that you have is newer than the microcode shipping with
	  coreboot.

	  The microcode file may be removed from the ROM image at a later
	  time with cbfstool, if desired.

	  If unsure, select "Generate from tree"

config CPU_MICROCODE_CBFS_NONE
	bool "Do not include microcode updates"
	help
	  Select this option if you do not want CPU microcode included in CBFS.
	  Note that for some CPUs, the microcode is hard-coded into the source
	  tree and is not loaded from CBFS. In this case, microcode will still
	  be updated. There is a push to move all microcode to CBFS, but this
	  change is not implemented for all CPUs.

	  This option currently applies to:
	    - Intel SandyBridge/IvyBridge
	    - VIA Nano

	  Microcode may be added to the ROM image at a later time with cbfstool,
	  if desired.

	  If unsure, select "Generate from tree"

	  The GOOD:
	  Microcode updates intend to solve issues that have been discovered
	  after CPU production. The expected effect is that systems work as
	  intended with the updated microcode, but we have also seen cases where
	  issues were solved by not applying microcode updates.

	  The BAD:
	  Note that some operating system include these same microcode patches,
	  so you may need to also disable microcode updates in your operating
	  system for this option to have an effect.

	  The UGLY:
	  A word of CAUTION: some CPUs depend on microcode updates to function
	  correctly. Not updating the microcode may leave the CPU operating at
	  less than optimal performance, or may cause outright hangups.
	  There are CPUs where coreboot cannot properly initialize the CPU
	  without microcode updates
	  For example, if running with the factory microcode, some Intel
	  SandyBridge CPUs may hang when enabling CAR, or some VIA Nano CPUs
	  will hang when changing the frequency.

	  Make sure you have a way of flashing the ROM externally before
	  selecting this option.

endchoice

config CPU_MICROCODE_MULTIPLE_FILES
	bool
	default n
	depends on CPU_MICROCODE_CBFS_GENERATE
	help
	  Select this option to install separate microcode container files into
	  CBFS instead of using the traditional monolithic microcode file format.

config CPU_MICROCODE_HEADER_FILES
	string "List of space separated microcode header files with the path"
	depends on CPU_MICROCODE_CBFS_EXTERNAL_HEADER
	help
	  A list of one or more microcode header files with path from the
	  coreboot directory.  These should be separated by spaces.
comment "Northbridge"
##
## This file is part of the coreboot project.
##
## Copyright (C) 2015 Timothy Pearson <tpearson@raptorengineeringinc.com>, Raptor Engineering
## Copyright (C) 2007-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_AMD_AMDFAM10
	bool
	select HAVE_DEBUG_RAM_SETUP
	select HAVE_DEBUG_SMBUS
	select HAVE_DEBUG_CAR
	select HYPERTRANSPORT_PLUGIN_SUPPORT
	select MMCONF_SUPPORT
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select PCIEXP_CLK_PM
	select PCIEXP_L1_SUB_STATE

if NORTHBRIDGE_AMD_AMDFAM10
config AGP_APERTURE_SIZE
	hex
	default 0x4000000

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xc0000000

config MMCONF_BUS_NUMBER
	int
	default 256

# TODO: Reservation for heap seems excessive
config HEAP_SIZE
	hex
	default 0xc0000

config RAMTOP
	hex
	default 0x400000

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/amd/amdfam10/bootblock.c"

config SB_HT_CHAIN_UNITID_OFFSET_ONLY
	bool
	default n

config HT_CHAIN_DISTRIBUTE
	def_bool n

config DIMM_FBDIMM
	bool
	default n

config DIMM_DDR2
	bool
	default n

config DIMM_DDR3
	bool
	default n

config DIMM_REGISTERED
	bool
	default n

config DIMM_VOLTAGE_SET_SUPPORT
	bool
	default n

if DIMM_FBDIMM
	config DIMM_SUPPORT
		hex
		default 0x0110
endif

config S3_DATA_SIZE
	int
	default 32768
	depends on (HAVE_ACPI_RESUME)

config S3_DATA_POS
	hex
	default 0x0
	depends on (HAVE_ACPI_RESUME)

if DIMM_DDR2
	if DIMM_REGISTERED
	config DIMM_SUPPORT
		hex
		default 0x0104
	endif

	if !DIMM_REGISTERED
	config DIMM_SUPPORT
		hex
		default 0x0004
	endif
endif

if DIMM_DDR3
	if DIMM_REGISTERED
	config DIMM_SUPPORT
		hex
		default 0x0005
	endif
endif

config SVI_HIGH_FREQ
	bool
	default n
	help
	  Select this for boards with a Voltage Regulator able to operate
	  at 3.4 MHz in SVI mode. Ignored unless the AMD CPU is rev C3.

menu "HyperTransport setup"
	#could be implemented for K8 (NORTHBRIDGE_AMD_AMDK8)
	depends on (NORTHBRIDGE_AMD_AMDFAM10)

choice
	prompt "HyperTransport downlink width"
	default LIMIT_HT_DOWN_WIDTH_16
	help
	  This option sets the maximum permissible HyperTransport
	  downlink width.

	  Use of this option will only limit the autodetected HT width.
	  It will not (and cannot) increase the width beyond the autodetected
	  limits.

	  This is primarily used to work around poorly designed or laid out HT
	  traces on certain motherboards.

config LIMIT_HT_DOWN_WIDTH_8
	bool "8 bits"
config LIMIT_HT_DOWN_WIDTH_16
	bool "16 bits"
endchoice

choice
	prompt "HyperTransport uplink width"
	default LIMIT_HT_UP_WIDTH_16
	help
	  This option sets the maximum permissible HyperTransport
	  uplink width.

	  Use of this option will only limit the autodetected HT width.
	  It will not (and cannot) increase the width beyond the autodetected
	  limits.

	  This is primarily used to work around poorly designed or laid out HT
	  traces on certain motherboards.

config LIMIT_HT_UP_WIDTH_8
	bool "8 bits"
config LIMIT_HT_UP_WIDTH_16
	bool "16 bits"
endchoice

endmenu

config MAX_REBOOT_CNT
	int
	default 6

endif # NORTHBRIDGE_AMD_AMDFAM10
config NORTHBRIDGE_AMD_LX
	bool
	select GEODE_VSA
	select LATE_CBMEM_INIT

if NORTHBRIDGE_AMD_LX

config VIDEO_MB
	int
	default 8

config PLL_MANUAL_CONFIG
	bool

if PLL_MANUAL_CONFIG

# "Core/GLIU Frequency"
config CORE_GLIU_500_266
	bool # "500MHz / 266MHz"

config CORE_GLIU_500_333
	bool # "500MHz / 333MHz"

config CORE_GLIU_500_400
	bool # "500MHz / 400MHz"

config PLLMSRhi
	hex
	default 0x39c if CORE_GLIU_500_266
	default 0x49c if CORE_GLIU_500_333
	default 0x59c if CORE_GLIU_500_400

config PLLMSRlo
	hex

endif

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2011 - 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config NORTHBRIDGE_AMD_PI
	bool
	default CPU_AMD_PI
	select LATE_CBMEM_INIT

if NORTHBRIDGE_AMD_PI

config CONSOLE_VGA_MULTI
	bool
	default n

config S3_VGA_ROM_RUN
	bool
	default n

##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_PI_00630F01
	bool
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_PI_00630F01

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xF8000000

config MMCONF_BUS_NUMBER
	int
	default 64

config VGA_BIOS_ID
	string
	default "1002,1304"
	help
	  The default VGA BIOS PCI vendor/device ID should be set to the
	  result of the map_oprom_vendev() function in northbridge.c.

config VGA_BIOS_FILE
	string
	default "3rdparty/blobs/northbridge/amd/00630F01/VBIOS.bin"

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
## Copyright (C) 2014 Sage Electronic Engineering, LLC
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_PI_00730F01
	bool
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_PI_00730F01

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xF8000000

config MMCONF_BUS_NUMBER
	int
	default 64

config VGA_BIOS_ID
	string
	default "1002,9850"
	help
	  The default VGA BIOS PCI vendor/device ID should be set to the
	  result of the map_oprom_vendev() function in northbridge.c.

config VGA_BIOS_FILE
	string
	default "3rdparty/blobs/northbridge/amd/00730F01/VBIOS.bin"

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2015 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_PI_00660F01
	bool
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_PI_00660F01

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xF8000000

config MMCONF_BUS_NUMBER
	int
	default 64

config VGA_BIOS_ID
	string
	default "1002,9870"
	help
	  The default VGA BIOS PCI vendor/device ID should be set to the
	  result of the map_oprom_vendev() function in northbridge.c.

config VGA_BIOS_FILE
	string
	default "3rdparty/blobs/northbridge/amd/00660F01/VBIOS.bin"

endif

config HW_MEM_HOLE_SIZEK
	hex
	default 0x200000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config RAMTOP
	hex
	default 0x1000000

config HEAP_SIZE
	hex
	default 0xc0000

config RAMBASE
	hex
	default 0x200000

endif # NORTHBRIDGE_AMD_PI
#
# This file is part of the coreboot project.
#
# Copyright (C) 2011 - 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config NORTHBRIDGE_AMD_AGESA
	bool
	default CPU_AMD_AGESA
	select LATE_CBMEM_INIT

if NORTHBRIDGE_AMD_AGESA

config CONSOLE_VGA_MULTI
	bool
	default n

config S3_VGA_ROM_RUN
	bool
	default n

##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_AGESA_FAMILY15_TN
	bool
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_AGESA_FAMILY15_TN

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xF8000000

config MMCONF_BUS_NUMBER
	int
	default 64

endif # NORTHBRIDGE_AMD_AGESA_FAMILY15_TN
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
## Copyright (C) 2011 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_AGESA_FAMILY10
	bool
	select HAVE_DEBUG_RAM_SETUP
	select HAVE_DEBUG_SMBUS
	select HYPERTRANSPORT_PLUGIN_SUPPORT
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_AGESA_FAMILY10

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xE0000000

config MMCONF_BUS_NUMBER
	int
	default 256

endif #NORTHBRIDGE_AMD_AGESA_FAMILY10
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
## Copyright (C) 2014 Sage Electronic Engineering, LLC
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_AGESA_FAMILY16_KB
	bool
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_AGESA_FAMILY16_KB

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xF8000000

config MMCONF_BUS_NUMBER
	int
	default 64

config VGA_BIOS_ID
	string
	default "1002,9830"
	help
	  The default VGA BIOS PCI vendor/device ID should be set to the
	  result of the map_oprom_vendev() function in northbridge.c.

endif # NORTHBRIDGE_AMD_AGESA_FAMILY16_KB
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_AGESA_FAMILY12
	bool
	select HAVE_DEBUG_RAM_SETUP
	select HAVE_DEBUG_SMBUS
	select HYPERTRANSPORT_PLUGIN_SUPPORT
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_AGESA_FAMILY12

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xe0000000

config MMCONF_BUS_NUMBER
	int
	default 256

endif # NORTHBRIDGE_AMD_AGESA_FAMILY_12
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_AGESA_FAMILY14
	bool
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_AGESA_FAMILY14

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xF8000000

config MMCONF_BUS_NUMBER
	int
	default 64

endif # NORTHBRIDGE_AMD_AGESA_FAMILY14
##
## This file is part of the coreboot project.
##
## Copyright (C) 2014 Edward O'Callaghan <eocallaghan@alterapraxis.com>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_AGESA_FAMILY15_RL
	bool
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_AGESA_FAMILY15_RL

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xF8000000

config MMCONF_BUS_NUMBER
	int
	default 64

endif # NORTHBRIDGE_AMD_AGESA_FAMILY15_RL
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
## Copyright (C) 2012 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
config NORTHBRIDGE_AMD_AGESA_FAMILY15
	bool
	select HAVE_DEBUG_RAM_SETUP
	select HAVE_DEBUG_SMBUS
	select HYPERTRANSPORT_PLUGIN_SUPPORT
	select MMCONF_SUPPORT

if NORTHBRIDGE_AMD_AGESA_FAMILY15

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config MMCONF_BASE_ADDRESS
	hex
	default 0xF8000000

config MMCONF_BUS_NUMBER
	int
	default 64

endif # NORTHBRIDGE_AMD_AGESA_FAMILY15

# TODO: Reservation for heap seems excessive
config HEAP_SIZE
	hex
	default 0xc0000

config RAMTOP
	hex
	default 0x400000

endif # NORTHBRIDGE_AMD_AGESA
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_AMD_AMDK8
	bool
	select HAVE_DEBUG_RAM_SETUP
	select HAVE_DEBUG_SMBUS
	select HAVE_DEBUG_CAR
	select HYPERTRANSPORT_PLUGIN_SUPPORT
	select LATE_CBMEM_INIT

if NORTHBRIDGE_AMD_AMDK8
config AGP_APERTURE_SIZE
	hex
	default 0x4000000

config K8_HT_FREQ_1G_SUPPORT
	bool
	default n

config RAMINIT_SYSINFO
	bool
	default n

config WAIT_BEFORE_CPUS_INIT
	bool
	default n

# Force 2T DRAM timing (vendor BIOS does it even for single DIMM setups and
# single DIMM is indeed unreliable without it).
config K8_FORCE_2T_DRAM_TIMING
	bool
	default n

config HW_MEM_HOLE_SIZEK
	hex
	default 0x100000

config HW_MEM_HOLE_SIZE_AUTO_INC
	bool
	default n

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/amd/amdk8/bootblock.c"

config SB_HT_CHAIN_UNITID_OFFSET_ONLY
	bool
	default n

config HT_CHAIN_DISTRIBUTE
	def_bool n

config QRANK_DIMM_SUPPORT
	bool
	default n

config K8_ALLOCATE_IO_RANGE
	bool
	default n

config K8_REV_F_SUPPORT
	bool
	select RAMINIT_SYSINFO
	default n

if K8_REV_F_SUPPORT

config DIMM_DDR2
	bool
	default n

config DIMM_REGISTERED
	bool
	default n

if DIMM_DDR2
	if DIMM_REGISTERED
	config DIMM_SUPPORT
		hex
		default 0x0104
	endif

	if !DIMM_REGISTERED
	config DIMM_SUPPORT
		hex
		default 0x0004
	endif
endif #DIMM_DDR2

config MEM_TRAIN_SEQ
	int
	default 0

endif #K8_REV_F_SUPPORT

# TODO: Reservation for heap seems excessive
config HEAP_SIZE
	hex
	default 0x40000

config IOMMU
	bool
	default y

config CBB
	hex
	default 0x00

config CDB
	hex
	default 0x18

config MAX_REBOOT_CNT
	int
	default 6

endif #NORTHBRIDGE_AMD_K8
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_AMD_GX2
	bool
	select GEODE_VSA
	select LATE_CBMEM_INIT

if NORTHBRIDGE_AMD_GX2

choice
	prompt "Framebuffer size"
	default GX2_VIDEO_MB_8MB

config GX2_VIDEO_MB_4MB
	bool "4MB"
config GX2_VIDEO_MB_8MB
	bool "8MB"
config GX2_VIDEO_MB_16MB
	bool "16MB"
config GX2_VIDEO_MB_32MB
	bool "32MB"
config GX2_VIDEO_MB_64MB
	bool "64MB"
config GX2_VIDEO_MB_128MB
	bool "128MB"
config GX2_VIDEO_MB_256MB
	bool "256MB"
config GX2_VIDEO_MB_CMOS
	bool "Use CMOS option"

endchoice

config VIDEO_MB
	int
	default 4 if GX2_VIDEO_MB_4MB
	default 8 if GX2_VIDEO_MB_8MB
	default 16 if GX2_VIDEO_MB_16MB
	default 32 if GX2_VIDEO_MB_32MB
	default 64 if GX2_VIDEO_MB_64MB
	default 128 if GX2_VIDEO_MB_128MB
	default 256 if GX2_VIDEO_MB_256MB
	default -1  if GX2_VIDEO_MB_CMOS

# The GX2_PROCESSOR_MHZ options let you chose the correct GX2 processor
# speed in the mainboard's Kconfig file.
config GX2_PROCESSOR_MHZ_300
	bool
config GX2_PROCESSOR_MHZ_366
	bool
config GX2_PROCESSOR_MHZ_400
	bool

# Map the config names to an integer (MHz).
config GX2_PROCESSOR_MHZ
	int
	default 300 if GX2_PROCESSOR_MHZ_300
	default 366 if GX2_PROCESSOR_MHZ_366
	default 400 if GX2_PROCESSOR_MHZ_400

endif # NORTHBRIDGE_AMD_GX2
#
# This file is part of the coreboot project.
#
#Copyright (C) 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config AMD_NB_CIMX
	bool
	default n

#
# This file is part of the coreboot project.
#
# Copyright (C) 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config NORTHBRIDGE_AMD_CIMX_RD890
	bool
	default n
	select AMD_NB_CIMX

if NORTHBRIDGE_AMD_CIMX_RD890

config REDIRECT_NBCIMX_TRACE_TO_SERIAL
	bool "Redirect AMD Northbridge CIMX Trace to serial console"
	default n
	help
	  This Option allows you to redirect the AMD Northbridge CIMX
	  Trace debug information to the serial console.

	  Warning: Only enable this option when debuging or tracing AMD CIMX code.

endif # NORTHBRIDGE_AMD_CIMX_RD890
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Google Inc.
## Copyright (C) 2013 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_FSP_RANGELEY
	bool
	select CPU_INTEL_FSP_MODEL_406DX

if NORTHBRIDGE_INTEL_FSP_RANGELEY

config MMCONF_BASE_ADDRESS
	hex
	default 0xe0000000

choice
	prompt "Set TSEG Size"
	default SET_TSEG_1MB if SET_DEFAULT_TSEG_1MB
	default SET_TSEG_2MB if SET_DEFAULT_TSEG_2MB
	default SET_TSEG_4MB if SET_DEFAULT_TSEG_4MB
	default SET_TSEG_8MB if SET_DEFAULT_TSEG_8MB

config SET_TSEG_1MB
	bool "1 MB"
	help
	  Set the TSEG area to 1 MB.

config SET_TSEG_2MB
	bool "2 MB"
	help
	  Set the TSEG area to 2 MB.

config SET_TSEG_4MB
	bool "4 MB"
	help
	  Set the TSEG area to 4 MB.

config SET_TSEG_8MB
	bool "8 MB"
	help
	  Set the TSEG area to 8 MB.
endchoice

config SMM_TSEG_SIZE
	hex
	default 0x200000 if SET_TSEG_2MB
	default 0x400000 if SET_TSEG_4MB
	default 0x800000 if SET_TSEG_8MB
	default 0x100000 # SET_TSEG_1MB

config SMM_RESERVED_SIZE
	hex
	default 0x200000 if SET_TSEG_2MB
	default 0x400000 if SET_TSEG_4MB
	default 0x800000 if SET_TSEG_8MB
	default 0x100000 # SET_TSEG_1MB

config SET_DEFAULT_TSEG_1MB
	bool
	default n

config SET_DEFAULT_TSEG_2MB
	bool
	default n

config SET_DEFAULT_TSEG_4MB
	bool
	default n

config SET_DEFAULT_TSEG_8MB
	bool
	default n

# Rangeley Specific FSP Kconfig
##
## This file is part of the coreboot project.
##
## Copyright (C) 2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config RANGELEY_FSP_SPECIFIC_OPTIONS
	def_bool y
	select PLATFORM_USES_FSP1_0
	select USE_GENERIC_FSP_CAR_INC
	select FSP_USES_UPD
	select ENABLE_MRC_CACHE #rangeley FSP always needs MRC data

config FSP_FILE
	string
	default "../intel/fsp/rangeley/FvFsp.bin"
	help
	  The path and filename of the Intel FSP binary for this platform.

config FSP_LOC
	hex
	default 0xfff80000
	help
	  The location in CBFS that the FSP is located. This must match the
	  value that is set in the FSP binary.  If the FSP needs to be moved,
	  rebase the FSP with Intel's BCT (tool).

	  The Rangeley FSP is built with a preferred base address of 0xFFF80000

config DCACHE_RAM_BASE
	hex
	default 0xfef00000

config DCACHE_RAM_SIZE
	hex
	default 0x4000

endif # NORTHBRIDGE_INTEL_FSP_RANGELEY
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_HASWELL
	bool
	select CPU_INTEL_HASWELL
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select NORTHBRIDGE_INTEL_COMMON_MRC_CACHE
	select INTEL_DDI
	select INTEL_DP
	select INTEL_GMA_ACPI

if NORTHBRIDGE_INTEL_HASWELL

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/intel/haswell/bootblock.c"

config VGA_BIOS_ID
	string
	default "8086,0166"

config CACHE_MRC_SIZE_KB
	int
	default 512

config MRC_CACHE_SIZE
	hex
	depends on !CHROMEOS
	default 0x10000

config DCACHE_RAM_BASE
	hex
	default 0xff7c0000

config DCACHE_RAM_SIZE
	hex
	default 0x10000
	help
	  The size of the cache-as-ram region required during bootblock
	  and/or romstage. Note DCACHE_RAM_SIZE and DCACHE_RAM_MRC_VAR_SIZE
	  must add up to a power of 2.

config DCACHE_RAM_MRC_VAR_SIZE
	hex
	default 0x30000
	help
	  The amount of cache-as-ram region required by the reference code.

config DCACHE_RAM_ROMSTAGE_STACK_SIZE
	hex
	default 0x2000
	help
	  The amount of anticipated stack usage from the data cache
	  during pre-ram rom stage execution.

config HAVE_MRC
	bool "Add a System Agent binary"
	help
	  Select this option to add a System Agent binary to
	  the resulting coreboot image.

	  Note: Without this binary coreboot will not work

config MRC_FILE
	string "Intel System Agent path and filename"
	depends on HAVE_MRC
	default "mrc.bin"
	help
	  The path and filename of the file to use as System Agent
	  binary.

config PRE_GRAPHICS_DELAY
	int "Graphics initialization delay in ms"
	default 0
	help
	  On some systems, coreboot boots so fast that connected monitors
	  (mostly TVs) won't be able to wake up fast enough to talk to the
	  VBIOS. On those systems we need to wait for a bit before executing
	  the VBIOS.

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_GM45
	bool

if NORTHBRIDGE_INTEL_GM45

config NORTHBRIDGE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select HAVE_DEBUG_RAM_SETUP
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select VGA
	select INTEL_EDID
	select INTEL_GMA_ACPI
	select UDELAY_TSC

config CBFS_SIZE
	hex
	default 0x100000

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/intel/gm45/bootblock.c"

config VGA_BIOS_ID
	string
	default "8086,2a42"

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Sven Schnelle <svens@stackframe.org>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_I5000
	bool
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select HAVE_DEBUG_RAM_SETUP
	select LATE_CBMEM_INIT

if NORTHBRIDGE_INTEL_I5000

config NORTHBRIDGE_INTEL_I5000_RAM_CHECK
	bool
	prompt "Run ramcheck after RAM initialization"

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/intel/i5000/bootblock.c"

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##


config NORTHBRIDGE_INTEL_SANDYBRIDGE
	bool
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select NORTHBRIDGE_INTEL_COMMON_MRC_CACHE
	select CPU_INTEL_MODEL_206AX
	select HAVE_DEBUG_RAM_SETUP
	select INTEL_GMA_ACPI

config NORTHBRIDGE_INTEL_IVYBRIDGE
	bool
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select NORTHBRIDGE_INTEL_COMMON_MRC_CACHE
	select CPU_INTEL_MODEL_306AX
	select HAVE_DEBUG_RAM_SETUP
	select INTEL_GMA_ACPI

if NORTHBRIDGE_INTEL_IVYBRIDGE || NORTHBRIDGE_INTEL_SANDYBRIDGE

config USE_NATIVE_RAMINIT
	bool "Use native raminit"
	default y
	help
	  Select if you want to use coreboot implementation of raminit rather than
	  System Agent/MRC.bin. You should answer Y.

config CBFS_SIZE
	hex
	default 0x100000

config VGA_BIOS_ID
	string
	default "8086,0106"

config CACHE_MRC_SIZE_KB
	int
	default 512

config SANDYBRIDGE_IVYBRIDGE_LVDS
	def_bool n
	select MAINBOARD_HAS_NATIVE_VGA_INIT
	select MAINBOARD_HAS_NATIVE_VGA_INIT_TEXTMODECFG

# Select VGA & INTEL_EDID if MAINBOARD_DO_NATIVE_VGA_INIT is enabled.
config MAINBOARD_DO_NATIVE_VGA_INIT
	select VGA
	select INTEL_EDID

config MRC_CACHE_SIZE
	hex
	depends on !CHROMEOS
	default 0x10000

config DCACHE_RAM_BASE
	hex
	default 0xff7e0000 if !USE_NATIVE_RAMINIT
	default 0xfefe0000 if USE_NATIVE_RAMINIT

config DCACHE_RAM_SIZE
	hex
	default 0x20000

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/intel/sandybridge/bootblock.c"

config DCACHE_RAM_MRC_VAR_SIZE
	hex
	default 0x4000

config MRC_FILE
	string "Intel System Agent path and filename"
	depends on !USE_NATIVE_RAMINIT
	default "3rdparty/blobs/northbridge/intel/sandybridge/systemagent-r6.bin"
	help
	  The path and filename of the file to use as System Agent
	  binary.

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2007-2009 coresystems GmbH
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config NORTHBRIDGE_INTEL_SCH
	bool
	select MMCONF_SUPPORT
	select LATE_CBMEM_INIT
	select INTEL_GMA_ACPI

if NORTHBRIDGE_INTEL_SCH

config VGA_BIOS_ID
	string
	default "8086,8108"
endif
config NORTHBRIDGE_INTEL_I82830
	bool
	select HAVE_DEBUG_RAM_SETUP
	select LATE_CBMEM_INIT
	select UDELAY_IO

choice
	prompt "Onboard graphics"
	default I830_VIDEO_MB_8MB
	depends on NORTHBRIDGE_INTEL_I82830

config I830_VIDEO_MB_OFF
	bool "Disabled, 0KB"
config I830_VIDEO_MB_512KB
	bool "Enabled, 512KB"
config I830_VIDEO_MB_1MB
	bool "Enabled, 1MB"
config I830_VIDEO_MB_8MB
	bool "Enabled, 8MB"

endchoice

config VIDEO_MB
	int
	default 0   if I830_VIDEO_MB_OFF
	default 512 if I830_VIDEO_MB_512KB
	default 1   if I830_VIDEO_MB_1MB
	default 8   if I830_VIDEO_MB_8MB
	depends on NORTHBRIDGE_INTEL_I82830
config NORTHBRIDGE_INTEL_E7501
	bool
	select HAVE_DEBUG_RAM_SETUP
	select LATE_CBMEM_INIT
config NORTHBRIDGE_INTEL_I3100
	bool
	select LATE_CBMEM_INIT
	select UDELAY_IO

if NORTHBRIDGE_INTEL_I3100
config DIMM_MAP_LOGICAL
	hex
	default 0x1248

endif
config NORTHBRIDGE_INTEL_I855
	bool
	select HAVE_DEBUG_RAM_SETUP
	select LATE_CBMEM_INIT

choice
	prompt "Onboard graphics"
	default I855_VIDEO_MB_8MB
	depends on NORTHBRIDGE_INTEL_I855

config I855_VIDEO_MB_OFF
	bool "Disabled, 0KB"
config I855_VIDEO_MB_1MB
	bool "Enabled, 1MB"
config I855_VIDEO_MB_4MB
	bool "Enabled, 4MB"
config I855_VIDEO_MB_8MB
	bool "Enabled, 8MB"
config I855_VIDEO_MB_16MB
	bool "Enabled, 16MB"
config I855_VIDEO_MB_32MB
	bool "Enabled, 32MB"

endchoice

config VIDEO_MB
	int
	default 0   if I855_VIDEO_MB_OFF
	default 1   if I855_VIDEO_MB_1MB
	default 4   if I855_VIDEO_MB_4MB
	default 8   if I855_VIDEO_MB_8MB
	default 16  if I855_VIDEO_MB_16MB
	default 32  if I855_VIDEO_MB_32MB
	depends on NORTHBRIDGE_INTEL_I855
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_I82810
	bool
	select HAVE_DEBUG_RAM_SETUP
	select LATE_CBMEM_INIT
	select UDELAY_IO

choice
	prompt "Onboard graphics"
	default I810_VIDEO_MB_1MB
	depends on NORTHBRIDGE_INTEL_I82810

config I810_VIDEO_MB_OFF
	bool "Disabled, 0KB"
config I810_VIDEO_MB_512KB
	bool "Enabled, 512KB"
config I810_VIDEO_MB_1MB
	bool "Enabled, 1MB"

endchoice

config VIDEO_MB
	int
	default 0   if I810_VIDEO_MB_OFF
	default 512 if I810_VIDEO_MB_512KB
	default 1   if I810_VIDEO_MB_1MB
	depends on NORTHBRIDGE_INTEL_I82810

config VGA_BIOS_ID
	string
	default "8086,7121"
	depends on NORTHBRIDGE_INTEL_I82810
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Google Inc.
## Copyright (C) 2013 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_FSP_SANDYBRIDGE
	bool
	select CPU_INTEL_FSP_MODEL_206AX
	select INTEL_GMA_ACPI

config NORTHBRIDGE_INTEL_FSP_IVYBRIDGE
	bool
	select CPU_INTEL_FSP_MODEL_306AX
	select INTEL_GMA_ACPI

if NORTHBRIDGE_INTEL_FSP_IVYBRIDGE || NORTHBRIDGE_INTEL_FSP_SANDYBRIDGE

config VGA_BIOS_ID
	string
	default "8086,0106"
	help
	  This is the default PCI ID for the sandybridge/ivybridge graphics
	  devices.  This string names the vbios ROM in cbfs.  The following
	  PCI IDs will be remapped to load this ROM:
	  0x80860102, 0x8086010a, 0x80860112, 0x80860116
	  0x80860122, 0x80860126, 0x80860166

# Ivybridge Specific FSP Kconfig
##
## This file is part of the coreboot project.
##
## Copyright (C) 2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SANDYBRIDGE_FSP_SPECIFIC_OPTIONS
	def_bool y
	select PLATFORM_USES_FSP1_0
	select USE_GENERIC_FSP_CAR_INC

config FSP_FILE
	string
	default "../intel/fsp/ivybridge_bd82x6x/FvFsp.bin" if SOUTHBRIDGE_INTEL_FSP_BD82X6X
	help
	  The path and filename of the Intel FSP binary for this platform.

config FSP_LOC
	hex "Intel FSP Binary location in CBFS"
	default 0xfff80000
	help
	  The location in CBFS that the FSP is located. This must match the
	  value that is set in the FSP binary.  If the FSP needs to be moved,
	  rebase the FSP with the Intel's BCT (tool).

	  The Ivy Bridge Processor/Panther Point FSP is built with a preferred
	  base address of 0xFFF80000

endif # NORTHBRIDGE_INTEL_FSP_IVYBRIDGE || NORTHBRIDGE_INTEL_FSP_SANDYBRIDGE
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
## Copyright (C) 2015 Damien Zammit <damien@zamaudio.com>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_X4X
	bool

if NORTHBRIDGE_INTEL_X4X

config NORTHBRIDGE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select HAVE_DEBUG_RAM_SETUP
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select VGA
	select INTEL_GMA_ACPI
	select EARLY_CBMEM_INIT

config CBFS_SIZE
	hex
	default 0x100000

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/intel/x4x/bootblock.c"

config VGA_BIOS_ID
	string
	default "8086,2e32"

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
## Copyright (C) 2015  Damien Zammit <damien@zamaudio.com>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_PINEVIEW
	bool

if NORTHBRIDGE_INTEL_PINEVIEW

config NORTHBRIDGE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select HAVE_DEBUG_RAM_SETUP
	select LAPIC_MONOTONIC_TIMER
	select LATE_CBMEM_INIT
	select VGA
	select MAINBOARD_HAS_NATIVE_VGA_INIT

config MAINBOARD_DO_NATIVE_VGA_INIT
	def_bool y
	select INTEL_EDID

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/intel/pineview/bootblock.c"

config VGA_BIOS_ID
	string
	default "8086,a001"

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_I440BX
	bool
	select HAVE_DEBUG_RAM_SETUP
	select LATE_CBMEM_INIT
	select UDELAY_IO

config SDRAMPWR_4DIMM
	bool
	depends on NORTHBRIDGE_INTEL_I440BX
	default n
	help
	  This option affects how the SDRAMC register is programmed.
	  Memory clock signals will not be routed properly if this option
	  is set wrong.

	  If your board has 4 DIMM slots, you must use select this option, in
	  your Kconfig file of the board. On boards with 3 DIMM slots,
	  do _not_ select this option.
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2012 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_E7505
	bool

if NORTHBRIDGE_INTEL_E7505

config NORTHBRIDGE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select HAVE_DEBUG_RAM_SETUP
	select LATE_CBMEM_INIT

config HW_SCRUBBER
	bool
	default n

endif
config NORTHBRIDGE_INTEL_COMMON_MRC_CACHE
	def_bool n
##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_I945
	bool

if NORTHBRIDGE_INTEL_I945

config NORTHBRIDGE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select HAVE_DEBUG_RAM_SETUP
	select LAPIC_MONOTONIC_TIMER
	select VGA
	select INTEL_GMA_ACPI

config NORTHBRIDGE_INTEL_SUBTYPE_I945GC
	def_bool n
config NORTHBRIDGE_INTEL_SUBTYPE_I945GM
	def_bool n

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/intel/i945/bootblock.c"

config VGA_BIOS_ID
	string
	default "8086,27a2"

config CHANNEL_XOR_RANDOMIZATION
	bool
	default n

config OVERRIDE_CLOCK_DISABLE
	bool
	default n
	help
	  Usually system firmware turns off system memory clock
	  signals to unused SO-DIMM slots to reduce EMI and power
	  consumption.
	  However, some boards do not like unused clock signals to
	  be disabled.

config MAXIMUM_SUPPORTED_FREQUENCY
	int
	default 0
	help
	  If non-zero, this designates the maximum DDR frequency
	  the board supports, despite what the chipset should be
	  capable of.

config CHECK_SLFRCS_ON_RESUME
	def_bool n
	help
	  On some boards it may be neccessary to hard reset early
	  during resume from S3 if the SLFRCS register indicates that
	  a memory channel is not guaranteed to be in self-refresh.
	  On other boards the check always creates a false positive,
	  effectively making it impossible to resume.

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_INTEL_NEHALEM
	bool
	select CPU_INTEL_MODEL_2065X
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select VGA
	select INTEL_EDID
	select TSC_MONOTONIC_TIMER
	select INTEL_GMA_ACPI
	select NORTHBRIDGE_INTEL_COMMON_MRC_CACHE

if NORTHBRIDGE_INTEL_NEHALEM

config CBFS_SIZE
	hex
	default 0x100000

config VGA_BIOS_ID
	string
	default "8086,0046"

config DCACHE_RAM_BASE
	hex
	default 0xff7f0000

config DCACHE_RAM_SIZE
	hex
	default 0x10000

config BOOTBLOCK_NORTHBRIDGE_INIT
	string
	default "northbridge/intel/nehalem/bootblock.c"

config TRAINING_CACHE_SIZE
	hex
	default 0x10000

endif
config NORTHBRIDGE_RDC_R8610
	bool
	select LATE_CBMEM_INIT
##
## This file is part of the coreboot project.
##
## Copyright (C) 2013 DMP Electronics Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_DMP_VORTEX86EX
	bool
	select LATE_CBMEM_INIT
config NORTHBRIDGE_VIA_CX700
	bool
	select HAVE_DEBUG_RAM_SETUP
	select HAVE_DEBUG_SMBUS
	select HAVE_HARD_RESET
	select IOAPIC
	select SMP
	select LATE_CBMEM_INIT

# TODO: What should be the per-chipset default value here?
choice
	prompt "Onboard graphics"
	default CX700_VIDEO_MB_32MB
	depends on NORTHBRIDGE_VIA_CX700

# TODO: Setting the amount of gfx memory is not yet supported in the source code.
config CX700_VIDEO_MB_OFF
	bool "Disabled, 0KB"
config CX700_VIDEO_MB_8MB
	bool "Enabled, 8MB"
config CX700_VIDEO_MB_16MB
	bool "Enabled, 16MB"
config CX700_VIDEO_MB_32MB
	bool "Enabled, 32MB"
config CX700_VIDEO_MB_64MB
	bool "Enabled, 64MB"
config CX700_VIDEO_MB_128MB
	bool "Enabled, 128MB"

endchoice

if NORTHBRIDGE_VIA_CX700

config VIDEO_MB
	int
	default 0   if CX700_VIDEO_MB_OFF
	default 8   if CX700_VIDEO_MB_8MB
	default 16  if CX700_VIDEO_MB_16MB
	default 32  if CX700_VIDEO_MB_32MB
	default 64  if CX700_VIDEO_MB_64MB
	default 128 if CX700_VIDEO_MB_128MB

config HPET_ADDRESS_OVERRIDE
	def_bool y

config HPET_ADDRESS
	hex
	default 0xfe800000

config HPET_MIN_TICKS
	hex
	default 0x90

endif
config NORTHBRIDGE_VIA_VX800
	bool
	select HAVE_DEBUG_RAM_SETUP
	select HAVE_DEBUG_SMBUS
	select LATE_CBMEM_INIT
config NORTHBRIDGE_VIA_CN700
	bool
	select HAVE_DEBUG_RAM_SETUP
	select LATE_CBMEM_INIT

# TODO: Values are from the CX700 datasheet, not sure if this matches CN700.
# TODO: What should be the per-chipset default value here?
choice
	prompt "Onboard graphics"
	default CN700_VIDEO_MB_32MB
	depends on NORTHBRIDGE_VIA_CN700

# TODO: Disabling onboard graphics is not yet supported in the code.
config CN700_VIDEO_MB_OFF
	bool "Disabled, 0KB"
config CN700_VIDEO_MB_8MB
	bool "Enabled, 8MB"
config CN700_VIDEO_MB_16MB
	bool "Enabled, 16MB"
config CN700_VIDEO_MB_32MB
	bool "Enabled, 32MB"
config CN700_VIDEO_MB_64MB
	bool "Enabled, 64MB"
config CN700_VIDEO_MB_128MB
	bool "Enabled, 128MB"

endchoice

config VIDEO_MB
	int
	default 0   if CN700_VIDEO_MB_OFF
	default 8   if CN700_VIDEO_MB_8MB
	default 16  if CN700_VIDEO_MB_16MB
	default 32  if CN700_VIDEO_MB_32MB
	default 64  if CN700_VIDEO_MB_64MB
	default 128 if CN700_VIDEO_MB_128MB
	depends on NORTHBRIDGE_VIA_CN700
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011  Alexandru Gagniuc <mr.nuke.me@gmail.com>
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config NORTHBRIDGE_VIA_VX900
	bool
	select IOAPIC
	select DRIVERS_GENERIC_IOAPIC
	select HAVE_DEBUG_RAM_SETUP
	select HAVE_DEBUG_SMBUS
	select HAVE_HARD_RESET
	select MMCONF_SUPPORT
	select MMCONF_SUPPORT_DEFAULT
	select LATE_CBMEM_INIT

if NORTHBRIDGE_VIA_VX900

config MAX_PIRQ_LINKS
	int
	default 8

config MMCONF_BASE_ADDRESS
	hex
	default 0xe0000000

config VGA_BIOS_ID
	string
	default "1106,7122"

endif
comment "Southbridge"
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_SB800
	bool
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select HAVE_HARD_RESET

if SOUTHBRIDGE_AMD_SB800

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/amd/sb800/bootblock.c"

config SOUTHBRIDGE_AMD_SB800_SKIP_ISA_DMA_INIT
	bool
	default n

config EHCI_BAR
	hex
	default 0xfef00000

endif # SOUTHBRIDGE_AMD_SB800
config SOUTHBRIDGE_AMD_AMD8132
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_AMD8111
	bool
	select IOAPIC
	select HAVE_HARD_RESET

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/amd/amd8111/bootblock.c"
	depends on SOUTHBRIDGE_AMD_AMD8111
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_RS780
	bool
config SOUTHBRIDGE_AMD_AMD8151
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_SB600
	bool
	select IOAPIC
	select HAVE_USBDEBUG
	select HAVE_HARD_RESET

if SOUTHBRIDGE_AMD_SB600
config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/amd/sb600/bootblock.c"

config EHCI_BAR
	hex
	default 0xfef00000

choice
	prompt "SATA Mode"
	default SATA_MODE_IDE
	help
	  Select the mode in which SATA should be driven. IDE or AHCI.
	  The default is IDE.

	config SATA_MODE_IDE
	bool "IDE"

	config SATA_MODE_AHCI
	bool "AHCI"
endchoice

config SATA_MODE
	int
	default 1 if SATA_MODE_IDE
	default 0 if SATA_MODE_AHCI

config HPET_MIN_TICKS
	hex
	default 0x14

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_SB700
	bool

if SOUTHBRIDGE_AMD_SB700

config SOUTHBRIDGE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select HAVE_HARD_RESET
	select SMBUS_HAS_AUX_CHANNELS

# Set for southbridge SP5100 which also uses SB700 driver
config SOUTHBRIDGE_AMD_SUBTYPE_SP5100
	bool
	default n

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/amd/sb700/bootblock.c"

config SOUTHBRIDGE_AMD_SB700_SKIP_ISA_DMA_INIT
	bool
	default n

config SOUTHBRIDGE_AMD_SB700_DISABLE_ISA_DMA
	bool
	default n

config SOUTHBRIDGE_AMD_SB700_SATA_PORT_COUNT_BITFIELD
	hex
	default 0xf

config EHCI_BAR
	hex
	default 0xfef00000

config HPET_MIN_TICKS
	hex
	default 0x14

endif # SOUTHBRIDGE_AMD_SB700
#
# This file is part of the coreboot project.
#
# Copyright (C) 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_PI_BOLTON
	bool
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select HAVE_HARD_RESET

config SOUTHBRIDGE_AMD_PI_AVALON
	bool
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select HAVE_HARD_RESET

config SOUTHBRIDGE_AMD_PI_KERN
	bool
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select HAVE_HARD_RESET

config HUDSON_DISABLE_IMC
	bool

if SOUTHBRIDGE_AMD_PI_AVALON || SOUTHBRIDGE_AMD_PI_BOLTON || SOUTHBRIDGE_AMD_PI_KERN

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/amd/pi/hudson/bootblock.c"

config SOUTHBRIDGE_AMD_HUDSON_SKIP_ISA_DMA_INIT
	bool
	default n

config EHCI_BAR
	hex
	default 0xfef00000

config HUDSON_XHCI_ENABLE
	bool "Enable Hudson XHCI Controller"
	default y
	help
	  The XHCI controller must be enabled and the XHCI firmware
	  must be added in order to have USB 3.0 support configured
	  by coreboot. The OS will be responsible for enabling the XHCI
	  controller if the the XHCI firmware is available but the
	  XHCI controller is not enabled by coreboot.

config HUDSON_XHCI_FWM
	bool "Add xhci firmware"
	default y
	help
	  Add Hudson 2/3/4 XHCI Firmware to support the onboard USB 3.0

config HUDSON_IMC_FWM
	bool "Add IMC firmware"
	depends on !HUDSON_DISABLE_IMC
	default y
	help
	  Add Hudson 2/3/4 IMC Firmware to support the onboard fan control

config HUDSON_GEC_FWM
	bool
	default n
	help
	  Add Hudson 2/3/4 GEC Firmware to support the onboard gigabit Ethernet MAC.
	  Must be connected to a Broadcom B50610 or B50610M PHY on the motherboard.

config HUDSON_PSP
	bool
	default y if CPU_AMD_PI_00730F01 || CPU_AMD_PI_00660F01

config HUDSON_XHCI_FWM_FILE
	string "XHCI firmware path and filename"
	default "3rdparty/blobs/southbridge/amd/avalon/xhci.bin" if SOUTHBRIDGE_AMD_PI_AVALON
	default "3rdparty/blobs/southbridge/amd/kern/xhci.bin" if SOUTHBRIDGE_AMD_PI_KERN
	depends on HUDSON_XHCI_FWM

config HUDSON_IMC_FWM_FILE
	string "IMC firmware path and filename"
	default "3rdparty/blobs/southbridge/amd/avalon/imc.bin" if SOUTHBRIDGE_AMD_PI_AVALON
	default "3rdparty/blobs/southbridge/amd/kern/imc.bin" if SOUTHBRIDGE_AMD_PI_KERN
	depends on HUDSON_IMC_FWM

config HUDSON_GEC_FWM_FILE
	string "GEC firmware path and filename"
	depends on HUDSON_GEC_FWM

config HUDSON_FWM
	bool
	default y if HUDSON_XHCI_FWM || HUDSON_IMC_FWM || HUDSON_GEC_FWM || HUDSON_PSP
	default n

if HUDSON_FWM

config HUDSON_FWM_POSITION
	hex "Hudson Firmware ROM Position"
	default 0xFFF20000 if BOARD_ROMSIZE_KB_1024
	default 0xFFE20000 if BOARD_ROMSIZE_KB_2048
	default 0xFFC20000 if BOARD_ROMSIZE_KB_4096
	default 0xFF820000 if BOARD_ROMSIZE_KB_8192
	default 0xFF020000 if BOARD_ROMSIZE_KB_16384
	help
	  Hudson requires the firmware MUST be located at
	  a specific address (ROM start address + 0x20000), otherwise
	  xhci host Controller can not find or load the xhci firmware.

	  The firmware start address is dependent on the ROM chip size.
	  The default offset is 0x20000 from the ROM start address, namely
	  0xFFF20000 if flash chip size is 1M
	  0xFFE20000 if flash chip size is 2M
	  0xFFC20000 if flash chip size is 4M
	  0xFF820000 if flash chip size is 8M
	  0xFF020000 if flash chip size is 16M
endif # HUDSON_FWM

config AMD_PUBKEY_FILE
	depends on HUDSON_PSP
	string "AMD public Key"
	default "3rdparty/blobs/southbridge/amd/avalon/PSP/AmdPubKey.bin" if CPU_AMD_PI_00730F01
	default "3rdparty/blobs/southbridge/amd/kern/PSP/AmdPubKeyCZ.bin" if CPU_AMD_PI_00660F01

config HUDSON_SATA_MODE
	int "SATA Mode"
	default 0
	range 0 6
	help
	  Select the mode in which SATA should be driven. NATIVE AHCI, or RAID.
	  The default is NATIVE.
	  0: NATIVE mode does not require a ROM.
	  1: RAID mode must have the two ROM files.
	  2: AHCI may work with or without AHCI ROM. It depends on the payload support.
	     For example, seabios does not require the AHCI ROM.
	  3: LEGACY IDE
	  4: IDE to AHCI
	  5: AHCI7804: ROM Required, and AMD driver required in the OS.
	  6: IDE to AHCI7804: ROM Required, and AMD driver required in the OS.

comment "NATIVE"
	depends on HUDSON_SATA_MODE = 0

comment "RAID"
	depends on HUDSON_SATA_MODE = 1

comment "AHCI"
	depends on HUDSON_SATA_MODE = 2

comment "LEGACY IDE"
	depends on HUDSON_SATA_MODE = 3

comment "IDE to AHCI"
	depends on HUDSON_SATA_MODE = 4

comment "AHCI7804"
	depends on HUDSON_SATA_MODE = 5

comment "IDE to AHCI7804"
	depends on HUDSON_SATA_MODE = 6

if HUDSON_SATA_MODE = 2 || HUDSON_SATA_MODE = 5

config AHCI_ROM_ID
	string  "AHCI device PCI IDs"
	default "1022,7801" if HUDSON_SATA_MODE = 2
	default "1022,7804" if HUDSON_SATA_MODE = 5

config HUDSON_AHCI_ROM
	bool "Add a AHCI ROM"

config AHCI_ROM_FILE
	string "AHCI ROM path and filename"
	depends on HUDSON_AHCI_ROM
	default "src/southbridge/amd/pi/hudson/ahci.bin"

endif

if HUDSON_SATA_MODE = 1

config RAID_ROM_ID
	string "RAID device PCI IDs"
	default "1022,7802"
	help
	  1022,7802 for SATA NON-RAID5 module, 1022,7803 for SATA RAID5 mode

config RAID_ROM_FILE
	string "RAID ROM path and filename"
	default "src/southbridge/amd/pi/hudson/raid.bin"

config RAID_MISC_ROM_FILE
	string "RAID Misc ROM path and filename"
	default "src/southbridge/amd/pi/hudson/misc.bin"

config RAID_MISC_ROM_POSITION
	hex "RAID Misc ROM Position"
	default 0xFFF00000
	help
	  The RAID ROM requires that the MISC ROM is located between the range
	  0xFFF0_0000 to 0xFFF0_FFFF. Also, it must 1K bytes aligned.
	  The CONFIG_ROM_SIZE must be larger than 0x100000.

endif

config HUDSON_LEGACY_FREE
	bool "System is legacy free"
	help
	  Select y if there is no keyboard controller in the system.
	  This sets variables in AGESA and ACPI.

config AZ_PIN
	hex
	default 0xaa
	help
	  bit 1,0 - pin 0
	  bit 3,2 - pin 1
	  bit 5,4 - pin 2
	  bit 7,6 - pin 3
endif

config HUDSON_UART
	bool "UART controller on Kern"
	default n
	depends on SOUTHBRIDGE_AMD_PI_KERN
	select DRIVERS_UART_8250MEM
	select DRIVERS_UART_8250MEM_32
	select NO_UART_ON_SUPERIO
	help
	  There are two UART controllers in Kern.
	  The UART registers are memory-mapped. UART
	  controller 0 registers range from FEDC_6000h
	  to FEDC_6FFFh. UART controller 1 registers
	  range from FEDC_8000h to FEDC_8FFFh.


config SOUTHBRIDGE_AMD_CS5535
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_SR5650
	bool

if SOUTHBRIDGE_AMD_SR5650
config EXT_CONF_SUPPORT
	bool "Enable PCI-E MMCONFIG support"
	default y
	help
	  Select to enable PCI-E MMCONFIG support on the SR5650.

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_AMD8131
	bool
#
# This file is part of the coreboot project.
#
# Copyright (C) 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_AGESA_BOLTON
	bool
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select HAVE_HARD_RESET

config SOUTHBRIDGE_AMD_AGESA_HUDSON
	bool
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select HAVE_HARD_RESET

config SOUTHBRIDGE_AMD_AGESA_YANGTZE
	bool
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select HAVE_HARD_RESET

if SOUTHBRIDGE_AMD_AGESA_BOLTON || SOUTHBRIDGE_AMD_AGESA_HUDSON || SOUTHBRIDGE_AMD_AGESA_YANGTZE

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/amd/agesa/hudson/bootblock.c"

config SOUTHBRIDGE_AMD_HUDSON_SKIP_ISA_DMA_INIT
	bool
	default n

config EHCI_BAR
	hex
	default 0xfef00000

config HUDSON_XHCI_ENABLE
	bool "Enable Hudson XHCI Controller"
	default y
	help
	  The XHCI controller must be enabled and the XHCI firmware
	  must be added in order to have USB 3.0 support configured
	  by coreboot. The OS will be responsible for enabling the XHCI
	  controller if the the XHCI firmware is available but the
	  XHCI controller is not enabled by coreboot.

config HUDSON_XHCI_FWM
	bool "Add xhci firmware"
	default y if USE_BLOBS
	help
	  Add Hudson 2/3/4 XHCI Firmware to support the onboard USB 3.0

config HUDSON_IMC_FWM
	bool "Add imc firmware"
	default y if USE_BLOBS
	help
	  Add Hudson 2/3/4 IMC Firmware to support the onboard fan control

config HUDSON_GEC_FWM
	bool
	default n
	help
	  Add Hudson 2/3/4 GEC Firmware to support the onboard gigabit Ethernet MAC.
	  Must be connected to a Broadcom B50610 or B50610M PHY on the motherboard.

config HUDSON_XHCI_FWM_FILE
	string "XHCI firmware path and filename"
	default "3rdparty/blobs/southbridge/amd/bolton/xhci.bin" if SOUTHBRIDGE_AMD_AGESA_BOLTON
	default "3rdparty/blobs/southbridge/amd/hudson/xhci.bin" if SOUTHBRIDGE_AMD_AGESA_HUDSON
	default "3rdparty/blobs/southbridge/amd/yangtze/xhci.bin" if SOUTHBRIDGE_AMD_AGESA_YANGTZE
	depends on HUDSON_XHCI_FWM

config HUDSON_IMC_FWM_FILE
	string "IMC firmware path and filename"
	default "3rdparty/blobs/southbridge/amd/bolton/imc.bin" if SOUTHBRIDGE_AMD_AGESA_BOLTON
	default "3rdparty/blobs/southbridge/amd/hudson/imc.bin" if SOUTHBRIDGE_AMD_AGESA_HUDSON
	default "3rdparty/blobs/southbridge/amd/yangtze/imc.bin" if SOUTHBRIDGE_AMD_AGESA_YANGTZE
	depends on HUDSON_IMC_FWM

config HUDSON_GEC_FWM_FILE
	string "GEC firmware path and filename"
	default "3rdparty/blobs/southbridge/amd/bolton/gec.bin"  if SOUTHBRIDGE_AMD_AGESA_BOLTON
	default "3rdparty/blobs/southbridge/amd/hudson/gec.bin"  if SOUTHBRIDGE_AMD_AGESA_HUDSON
	default "3rdparty/blobs/southbridge/amd/yangtze/gec.bin"  if SOUTHBRIDGE_AMD_AGESA_YANGTZE
	depends on HUDSON_GEC_FWM

config HUDSON_FWM
	bool
	default y if HUDSON_XHCI_FWM || HUDSON_IMC_FWM || HUDSON_GEC_FWM
	default n

if HUDSON_FWM

config HUDSON_FWM_POSITION
	hex "Hudson Firmware ROM Position"
	default 0xFFF20000 if BOARD_ROMSIZE_KB_1024
	default 0xFFE20000 if BOARD_ROMSIZE_KB_2048
	default 0xFFC20000 if BOARD_ROMSIZE_KB_4096
	default 0xFF820000 if BOARD_ROMSIZE_KB_8192
	default 0xFF020000 if BOARD_ROMSIZE_KB_16384
	help
	  Hudson requires the firmware MUST be located at
	  a specific address (ROM start address + 0x20000), otherwise
	  xhci host Controller can not find or load the xhci firmware.

	  The firmware start address is dependent on the ROM chip size.
	  The default offset is 0x20000 from the ROM start address, namely
	  0xFFF20000 if flash chip size is 1M
	  0xFFE20000 if flash chip size is 2M
	  0xFFC20000 if flash chip size is 4M
	  0xFF820000 if flash chip size is 8M
	  0xFF020000 if flash chip size is 16M
endif # HUDSON_FWM

config HUDSON_SATA_MODE
	int "SATA Mode"
	default 0
	range 0 6
	help
	  Select the mode in which SATA should be driven. NATIVE AHCI, or RAID.
	  The default is NATIVE.
	  0: NATIVE mode does not require a ROM.
	  1: RAID mode must have the two ROM files.
	  2: AHCI may work with or without AHCI ROM. It depends on the payload support.
	     For example, seabios does not require the AHCI ROM.
	  3: LEGACY IDE
	  4: IDE to AHCI
	  5: AHCI7804: ROM Required, and AMD driver required in the OS.
	  6: IDE to AHCI7804: ROM Required, and AMD driver required in the OS.

comment "NATIVE"
	depends on HUDSON_SATA_MODE = 0

comment "RAID"
	depends on HUDSON_SATA_MODE = 1

comment "AHCI"
	depends on HUDSON_SATA_MODE = 2

comment "LEGACY IDE"
	depends on HUDSON_SATA_MODE = 3

comment "IDE to AHCI"
	depends on HUDSON_SATA_MODE = 4

comment "AHCI7804"
	depends on HUDSON_SATA_MODE = 5

comment "IDE to AHCI7804"
	depends on HUDSON_SATA_MODE = 6

if HUDSON_SATA_MODE = 2 || HUDSON_SATA_MODE = 5

config AHCI_ROM_ID
	string  "AHCI device PCI IDs"
	default "1022,7801" if HUDSON_SATA_MODE = 2
	default "1022,7804" if HUDSON_SATA_MODE = 5

config HUDSON_AHCI_ROM
	bool "Add a AHCI ROM"

config AHCI_ROM_FILE
	string "AHCI ROM path and filename"
	depends on HUDSON_AHCI_ROM
	default "src/southbridge/amd/agesa/hudson/ahci.bin"

endif

if HUDSON_SATA_MODE = 1

config RAID_ROM_ID
	string "RAID device PCI IDs"
	default "1022,7802"
	help
	  1022,7802 for SATA NON-RAID5 module, 1022,7803 for SATA RAID5 mode

config RAID_ROM_FILE
	string "RAID ROM path and filename"
	default "src/southbridge/amd/agesa/hudson/raid.bin"

config RAID_MISC_ROM_FILE
	string "RAID Misc ROM path and filename"
	default "src/southbridge/amd/agesa/hudson/misc.bin"

config RAID_MISC_ROM_POSITION
	hex "RAID Misc ROM Position"
	default 0xFFF00000
	help
	  The RAID ROM requires that the MISC ROM is located between the range
	  0xFFF0_0000 to 0xFFF0_FFFF. Also, it must 1K bytes aligned.
	  The CONFIG_ROM_SIZE must be larger than 0x100000.

endif

config HUDSON_LEGACY_FREE
	bool "System is legacy free"
	help
	  Select y if there is no keyboard controller in the system.
	  This sets variables in AGESA and ACPI.

config ACPI_ENABLE_THERMAL_ZONE
	bool
	default y

endif # SOUTHBRIDGE_AMD_AGESA_BOLTON || SOUTHBRIDGE_AMD_AGESA_HUDSON || SOUTHBRIDGE_AMD_AGESA_YANGTZE

if SOUTHBRIDGE_AMD_AGESA_YANGTZE
	config AZ_PIN
		hex
		default 0xaa
		help
		  bit 1,0 - pin 0
		  bit 3,2 - pin 1
		  bit 5,4 - pin 2
		  bit 7,6 - pin 3
endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_CS5536
	bool
	select UDELAY_TSC
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_RS690
	bool

if SOUTHBRIDGE_AMD_RS690
config EXT_CONF_SUPPORT
	def_bool n
	help
	  Select if RS690 should be setup to support MMCONF.

endif
#
# This file is part of the coreboot project.
#
# Copyright (C) 2011 - 2012 Advanced Micro Devices, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config AMD_SB_CIMX
	bool
	default n

##
## This file is part of the coreboot project.
##
## Copyright (C) 2012 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_CIMX_SB700
	bool
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select AMD_SB_CIMX
	select HAVE_HARD_RESET

if SOUTHBRIDGE_AMD_CIMX_SB700
config SATA_CONTROLLER_MODE
	hex
	default 0x0
	help
		0x0 = Native IDE mode.
		0x1 = RAID mode.
		0x2 = AHCI mode.
		0x3 = Legacy IDE mode.
		0x4 = IDE->AHCI mode.
		0x5 = AHCI mode as 7804 ID (AMD driver).
		0x6 = IDE->AHCI mode as 7804 ID (AMD driver).

config PCIB_ENABLE
	bool
	default n
	help
		n = Disable PCI Bridge Device 14 Function 4.
		y = Enable PCI Bridge Device 14 Function 4.

config ACPI_SCI_IRQ
	hex
	default 0x9
	help
		Set SCI IRQ to 9.

config EHCI_BAR
	hex
	default 0xfef00000

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/amd/cimx/sb700/bootblock.c"

config REDIRECT_SBCIMX_TRACE_TO_SERIAL
	bool "Redirect AMD Southbridge CIMX Trace to serial console"
	default n
	help
	  This Option allows you to redirect the AMD Southbridge CIMX Trace
	  debug information to the serial console.

	  Warning: Only enable this option when debuging or tracing AMD CIMX code.

endif #SOUTHBRIDGE_AMD_CIMX_SB700
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_CIMX_SB800
	bool
	default n
	select IOAPIC
	select HAVE_USBDEBUG_OPTIONS
	select AMD_SB_CIMX
	select HAVE_HARD_RESET

if SOUTHBRIDGE_AMD_CIMX_SB800
config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/amd/cimx/sb800/bootblock.c"

config ENABLE_IDE_COMBINED_MODE
	bool "Enable SATA IDE combined mode"
	default n
	help
	  If Combined Mode is enabled. IDE controller is exposed and
	  SATA controller has control over Port0 through Port3,
	  IDE controller has control over Port4 and Port5.

	  If Combined Mode is disabled, IDE controller is hidden and
	  SATA controller has full control of all 6 Ports when operating in non-IDE mode.

config IDE_COMBINED_MODE
	hex
	default "0x0" if ENABLE_IDE_COMBINED_MODE
	default "0x1" if !ENABLE_IDE_COMBINED_MODE

choice
	prompt "SATA Mode"
	default SB800_SATA_AHCI
	help
	  Select the mode in which SATA should be driven. NATIVE AHCI, or RAID.
	  The default is AHCI.

config SB800_SATA_IDE
	bool "NATIVE"
	help
	  NATIVE does not require a ROM.

config SB800_SATA_AHCI
	bool "AHCI"
	help
	  AHCI is the default and may work with or without AHCI ROM. It depends on the payload support.
	  For example, seabios does not require the AHCI ROM.

config SB800_SATA_RAID
	bool "RAID"
	help
	  sb800 RAID mode must have the two required ROM files.

endchoice

config SB800_SATA_MODE
	hex
	depends on (SB800_SATA_IDE || SB800_SATA_RAID || SB800_SATA_AHCI)
	default "0x0" if SB800_SATA_IDE
	default "0x1" if SB800_SATA_RAID
	default "0x2" if SB800_SATA_AHCI

config SB_SUPERIO_HWM
	bool
	default n

if SB800_SATA_AHCI
config AHCI_ROM_ID
	string "AHCI device PCI IDs"
	default "1002,4391"

config SB800_AHCI_ROM
	bool "Add a AHCI ROM"

config AHCI_ROM_FILE
	string "AHCI ROM path and filename"
	depends on SB800_AHCI_ROM
	default "site-local/sb800/ahci.bin"
endif

if SB800_SATA_RAID
config RAID_ROM_ID
	string "RAID device PCI IDs"
	default "1002,4393"
	help
	  1002,4392 for SATA NON-RAID5 module, 1002,4393 for SATA RAID5 mode

config RAID_ROM_FILE
	string "RAID ROM path and filename"
	depends on SB800_SATA_RAID
	default "site-local/sb800/raid.bin"

config RAID_MISC_ROM_FILE
	string "RAID Misc ROM path and filename"
	default "site-local/sb800/misc.bin"
	depends on SB800_SATA_RAID

config RAID_MISC_ROM_POSITION
	hex "RAID Misc ROM Position"
	default 0xFFF00000
	depends on SB800_SATA_RAID
	help
	  The RAID ROM requires that the MISC ROM is located between the range
	  0xFFF0_0000 to 0xFFF0_FFFF. Also, it must 1K bytes aligned.
	  The CONFIG_ROM_SIZE must larger than 0x100000.

endif

config SB800_IMC_FWM
	bool "Add IMC firmware"
	default n
	help
	  Add SB800 / Hudson 1 IMC Firmware to support the onboard fan control.

if SB800_IMC_FWM

config SB800_IMC_FWM_FILE
	string "IMC firmware path and filename"
	default "3rdparty/blobs/southbridge/amd/sb800/imc.bin"

choice
	prompt "SB800 Firmware ROM Position"

config SB800_FWM_AT_FFFA0000
	bool "0xFFFA0000"
	help
	  The IMC and GEC ROMs requires a 'signature' located at one of several
	  fixed locations in memory.  The location used shouldn't matter, just
	  select an area that doesn't conflict with anything else.

config SB800_FWM_AT_FFF20000
	bool "0xFFF20000"
	help
	  The IMC and GEC ROMs requires a 'signature' located at one of several
	  fixed locations in memory.  The location used shouldn't matter, just
	  select an area that doesn't conflict with anything else.

config SB800_FWM_AT_FFE20000
	depends on BOARD_ROMSIZE_KB_8192 || BOARD_ROMSIZE_KB_4096 || BOARD_ROMSIZE_KB_2048
	bool "0xFFE20000"
	help
	  The IMC and GEC ROMs requires a 'signature' located at one of several
	  fixed locations in memory.  The location used shouldn't matter, just
	  select an area that doesn't conflict with anything else.

config SB800_FWM_AT_FFC20000
	depends on BOARD_ROMSIZE_KB_8192 || BOARD_ROMSIZE_KB_4096
	bool "0xFFC20000"
	help
	  The IMC and GEC ROMs requires a 'signature' located at one of several
	  fixed locations in memory.  The location used shouldn't matter, just
	  select an area that doesn't conflict with anything else.

config SB800_FWM_AT_FF820000
	depends on BOARD_ROMSIZE_KB_8192
	bool "0xFF820000"
	help
	  The IMC and GEC ROMs requires a 'signature' located at one of several
	  fixed locations in memory.  The location used shouldn't matter, just
	  select an area that doesn't conflict with anything else.

endchoice

config SB800_FWM_POSITION
	hex
	default 0xFFFA0000 if SB800_FWM_AT_FFFA0000
	default 0xFFF20000 if SB800_FWM_AT_FFF20000
	default 0xFFE20000 if SB800_FWM_AT_FFE20000
	default 0xFFC20000 if SB800_FWM_AT_FFC20000
	default 0xFF820000 if SB800_FWM_AT_FF820000

endif  #SB800_IMC_FWM

config EHCI_BAR
	hex
	default 0xfef00000

choice
	prompt "Fan Control"
	default SB800_NO_FAN_CONTROL
	help
	  Select the method of SB800 fan control to be used.  None would be
	  for either fixed maximum speed fans connected to the SB800 or for
	  an external chip controlling the fan speeds.  Manual control sets
	  up the SB800 fan control registers.  IMC fan control uses the SB800
	  IMC to actively control the fan speeds.

config SB800_NO_FAN_CONTROL
	bool "None"
	help
	  No SB800 Fan control - Do not set up the SB800 fan control registers.

config SB800_MANUAL_FAN_CONTROL
	bool "Manual"
	help
	  Configure the SB800 fan control registers in devicetree.cb.

config SB800_IMC_FAN_CONTROL
	bool "IMC Based"
	depends on SB800_IMC_FWM
	help
	  Set up the SB800 to use the IMC based Fan controller.  This requires
	  the IMC rom from AMD.  Configure the registers in devicetree.cb.

endchoice

endif #SOUTHBRIDGE_AMD_CIMX_SB800
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_AMD_CIMX_SB900
	bool
	default n
	select IOAPIC
	select AMD_SB_CIMX
	select HAVE_HARD_RESET

if SOUTHBRIDGE_AMD_CIMX_SB900
config SATA_CONTROLLER_MODE
	hex
	default 0x0
	help
	  0x0 = Native IDE mode.
	  0x1 = RAID mode.
	  0x2 = AHCI mode.
	  0x3 = Legacy IDE mode.
	  0x4 = IDE->AHCI mode.
	  0x5 = AHCI mode as 7804 ID (AMD driver).
	  0x6 = IDE->AHCI mode as 7804 ID (AMD driver).

config PCIB_ENABLE
	bool
	default n
	help
	  n = Disable PCI Bridge Device 14 Function 4.
	  y = Enable PCI Bridge Device 14 Function 4.

config ACPI_SCI_IRQ
	hex
	default 0x9
	help
	  Set SCI IRQ to 9.

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/amd/cimx/sb900/bootblock.c"

endif #SOUTHBRIDGE_AMD_CIMX_SB900
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_BD82X6X
	bool

config SOUTHBRIDGE_INTEL_C216
	bool

if SOUTHBRIDGE_INTEL_BD82X6X || SOUTHBRIDGE_INTEL_C216

config SOUTH_BRIDGE_OPTIONS # dummy
	def_bool y
	select SOUTHBRIDGE_INTEL_COMMON
	select IOAPIC
	select HAVE_HARD_RESET
	select HAVE_USBDEBUG_OPTIONS
	select HAVE_SMI_HANDLER
	select USE_WATCHDOG_ON_BOOT
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select SPI_FLASH
	select COMMON_FADT
	select ACPI_SATA_GENERATOR
	select HAVE_INTEL_FIRMWARE
	select SOUTHBRIDGE_INTEL_COMMON_GPIO

config EHCI_BAR
	hex
	default 0xfef00000

config DRAM_RESET_GATE_GPIO
	int
	default 60

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/intel/bd82x6x/bootblock.c"

config SERIRQ_CONTINUOUS_MODE
	bool
	default n
	help
	  If you set this option to y, the serial IRQ machine will be
	  operated in continuous mode.

config HPET_MIN_TICKS
	hex
	default 0x80

config HAVE_IFD_BIN
	def_bool y

config BUILD_WITH_FAKE_IFD
	def_bool !HAVE_IFD_BIN

endif

if SOUTHBRIDGE_INTEL_BD82X6X || SOUTHBRIDGE_INTEL_C216 || SOUTHBRIDGE_INTEL_IBEXPEAK

choice
	prompt "Flash ROM locking on S3 resume"
	default LOCK_SPI_ON_RESUME_NONE

config LOCK_SPI_ON_RESUME_NONE
	bool "Don't lock ROM sections on S3 resume"

config LOCK_SPI_ON_RESUME_RO
	bool "Lock all flash ROM sections on S3 resume"
	help
	  If the flash ROM shall be protected against write accesses from the
	  operating system (OS), the locking procedure has to be repeated after
	  each resume from S3. Select this if you never want to update the flash
	  ROM from within your OS. Notice: Even with this option, the write lock
	  has still to be enabled on the normal boot path (e.g. by the payload).

config LOCK_SPI_ON_RESUME_NO_ACCESS
	bool "Lock and disable reads all flash ROM sections on S3 resume"
	help
	  If the flash ROM shall be protected against all accesses from the
	  operating system (OS), the locking procedure has to be repeated after
	  each resume from S3. Select this if you never want to update the flash
	  ROM from within your OS. Notice: Even with this option, the lock
	  has still to be enabled on the normal boot path (e.g. by the payload).

endchoice

endif
config SOUTHBRIDGE_INTEL_I82870
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##               2012 secunet security Networks AG
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_I82801IX
	bool
	select SOUTHBRIDGE_INTEL_COMMON
	select IOAPIC
	select HAVE_USBDEBUG
	select HAVE_HARD_RESET
	select USE_WATCHDOG_ON_BOOT
	select HAVE_SMI_HANDLER
	select HAVE_USBDEBUG_OPTIONS

if SOUTHBRIDGE_INTEL_I82801IX

config EHCI_BAR
	hex
	default 0xfef00000

config HPET_MIN_TICKS
	hex
	default 0x80

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/intel/i82801ix/bootblock.c"

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Google Inc.
## Copyright (C) 2013-2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_FSP_RANGELEY
	bool

if SOUTHBRIDGE_INTEL_FSP_RANGELEY

config SOUTH_BRIDGE_OPTIONS # dummy
	def_bool y
	select IOAPIC
	select HAVE_HARD_RESET
	select HAVE_USBDEBUG
	select USE_WATCHDOG_ON_BOOT
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select SPI_FLASH
	select HAVE_INTEL_FIRMWARE

config EHCI_BAR
	hex
	default 0xfef00000

config EHCI_DEBUG_OFFSET
	hex
	default 0xa0

config SERIRQ_CONTINUOUS_MODE
	bool
	default n
	help
	  If you set this option to y, the serial IRQ machine will be
	  operated in continuous mode.

config HPET_MIN_TICKS
	hex
	default 0x80

config IFD_BIN_PATH
	string
	depends on HAVE_IFD_BIN
	default "../intel/mainboard/intel/rangeley"
	help
	  The path and filename to the descriptor.bin file.

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; version 2 of
## the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_I82801DX
	bool
	select SOUTHBRIDGE_INTEL_COMMON
	select IOAPIC
	select HAVE_HARD_RESET
	select HAVE_SMI_HANDLER
	select HAVE_USBDEBUG

if SOUTHBRIDGE_INTEL_I82801DX

config EHCI_BAR
	hex
	default 0xfef00000

endif
config SOUTHBRIDGE_INTEL_I82801EX
	bool
	select SOUTHBRIDGE_INTEL_COMMON
	select IOAPIC
	select HAVE_HARD_RESET
	select HAVE_USBDEBUG

if SOUTHBRIDGE_INTEL_I82801EX

config EHCI_BAR
	hex
	default 0xfef00000

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_IBEXPEAK
	bool

if SOUTHBRIDGE_INTEL_IBEXPEAK

config SOUTH_BRIDGE_OPTIONS # dummy
	def_bool y
	select IOAPIC
	select HAVE_HARD_RESET
	select HAVE_USBDEBUG
	select HAVE_SMI_HANDLER
	select USE_WATCHDOG_ON_BOOT
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select SPI_FLASH
	select SOUTHBRIDGE_INTEL_COMMON
	select HAVE_USBDEBUG_OPTIONS
	select COMMON_FADT
	select ACPI_SATA_GENERATOR
	select HAVE_INTEL_FIRMWARE
	select SOUTHBRIDGE_INTEL_COMMON_GPIO

config EHCI_BAR
	hex
	default 0xfef00000

config DRAM_RESET_GATE_GPIO
	int
	default 60

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/intel/bd82x6x/bootblock.c"

config SERIRQ_CONTINUOUS_MODE
	bool
	default n
	help
	  If you set this option to y, the serial IRQ machine will be
	  operated in continuous mode.

config BUILD_WITH_FAKE_IFD
	def_bool !HAVE_IFD_BIN

config HPET_MIN_TICKS
	hex
	default 0x80

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2010 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_SCH
	bool
	select SOUTHBRIDGE_INTEL_COMMON
	select HAVE_USBDEBUG
	select HAVE_HARD_RESET
	select HAVE_SMI_HANDLER

if SOUTHBRIDGE_INTEL_SCH

config EHCI_BAR
	hex
	default 0xfef00000

config HAVE_CMC
	bool "Add a CMC state machine binary"
	help
	  Select this option to add a CMC state machine binary to
	  the resulting coreboot image.

	  Note: Without this binary coreboot will not work

config CMC_FILE
	string "Intel CMC path and filename"
	depends on HAVE_CMC
	default "cmc.bin"
	help
	  The path and filename of the file to use as CMC state machine
	  binary.

config HPET_MIN_TICKS
	hex
	default 0x80

endif
config SOUTHBRIDGE_INTEL_I3100
	bool
	select IOAPIC
	select HAVE_HARD_RESET

if SOUTHBRIDGE_INTEL_I3100

config HPET_MIN_TICKS
	hex
	default 0x90

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Google Inc.
## Copyright (C) 2013 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_FSP_BD82X6X
	bool

if SOUTHBRIDGE_INTEL_FSP_BD82X6X

config SOUTH_BRIDGE_OPTIONS # dummy
	def_bool y
	select IOAPIC
	select HAVE_HARD_RESET
	select HAVE_SMI_HANDLER
	select USE_WATCHDOG_ON_BOOT
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select SPI_FLASH
	select COMMON_FADT
	select HAVE_INTEL_FIRMWARE

config EHCI_BAR
	hex
	default 0xfef00000

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/intel/fsp_bd82x6x/bootblock.c"

config SERIRQ_CONTINUOUS_MODE
	bool
	default n
	help
	  If you set this option to y, the serial IRQ machine will be
	  operated in continuous mode.

config HPET_MIN_TICKS
	hex
	default 0x80

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_I82801AX
	bool
	select IOAPIC
	select HAVE_HARD_RESET
	select USE_WATCHDOG_ON_BOOT
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_I82801GX
	bool
	select SOUTHBRIDGE_INTEL_COMMON
	select IOAPIC
	select HAVE_HARD_RESET
	select HAVE_USBDEBUG
	select USE_WATCHDOG_ON_BOOT
	select HAVE_SMI_HANDLER
	select COMMON_FADT

if SOUTHBRIDGE_INTEL_I82801GX

config EHCI_BAR
	hex
	default 0xfef00000

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/intel/i82801gx/bootblock.c"

config HPET_MIN_TICKS
	hex
	default 0x80

endif
config SOUTHBRIDGE_INTEL_COMMON
	def_bool n
config SOUTHBRIDGE_INTEL_COMMON_GPIO
	def_bool n
config SOUTHBRIDGE_INTEL_I82371EB
	bool

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/intel/i82371eb/bootblock.c"
	depends on SOUTHBRIDGE_INTEL_I82371EB
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Google Inc.
## Copyright (C) 2013 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_FSP_I89XX
	bool

if SOUTHBRIDGE_INTEL_FSP_I89XX

config SOUTH_BRIDGE_OPTIONS # dummy
	def_bool y
	select IOAPIC
	select HAVE_HARD_RESET
	select HAVE_SMI_HANDLER
	select USE_WATCHDOG_ON_BOOT
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select SPI_FLASH
	select COMMON_FADT
	select HAVE_INTEL_FIRMWARE
	select NO_EARLY_BOOTBLOCK_POSTCODES

config EHCI_BAR
	hex
	default 0xfe700000


config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/intel/fsp_i89xx/bootblock.c"

config SERIRQ_CONTINUOUS_MODE
	bool
	default n
	help
	  If you set this option to y, the serial IRQ machine will be
	  operated in continuous mode.

config HPET_MIN_TICKS
	hex
	default 0x80

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_LYNXPOINT
	bool

if SOUTHBRIDGE_INTEL_LYNXPOINT

config SOUTH_BRIDGE_OPTIONS # dummy
	def_bool y
	select SOUTHBRIDGE_INTEL_COMMON
	select IOAPIC
	select HAVE_HARD_RESET
	select HAVE_USBDEBUG_OPTIONS
	select USE_WATCHDOG_ON_BOOT
	select PCIEXP_ASPM
	select PCIEXP_COMMON_CLOCK
	select SPI_FLASH
	select HAVE_INTEL_FIRMWARE
	select HAVE_SPI_CONSOLE_SUPPORT
	select SOUTHBRIDGE_INTEL_COMMON_GPIO if !INTEL_LYNXPOINT_LP

config INTEL_LYNXPOINT_LP
	bool
	default n
	help
	  Set this option to y for Lynxpont LP (Haswell ULT).

config EHCI_BAR
	hex
	default 0xe8000000

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/intel/lynxpoint/bootblock.c"

config SERIRQ_CONTINUOUS_MODE
	bool
	default n
	help
	  If you set this option to y, the serial IRQ machine will be
	  operated in continuous mode.

config HAVE_IFD_BIN
	bool
	default y

config BUILD_WITH_FAKE_IFD
	bool
	default y if !HAVE_IFD_BIN

config IFD_BIN_PATH
	string
	depends on !BUILD_WITH_FAKE_IFD
	default "3rdparty/blobs/mainboard/$(MAINBOARDDIR)/descriptor.bin"

config HAVE_ME_BIN
	bool
	default y

config ME_BIN_PATH
	string
	depends on HAVE_ME_BIN
	default "3rdparty/blobs/mainboard/$(MAINBOARDDIR)/me.bin"

config ME_MBP_CLEAR_LATE
	bool "Defer wait for ME MBP Cleared"
	default y
	help
	  If you set this option to y, the Management Engine driver
	  will defer waiting for the MBP Cleared indicator until the
	  finalize step.  This can speed up boot time if the ME takes
	  a long time to indicate this status.

config FINALIZE_USB_ROUTE_XHCI
	bool "Route all ports to XHCI controller in finalize step"
	default y
	help
	  If you set this option to y, the USB ports will be routed
	  to the XHCI controller during the finalize SMM callback.

config LOCK_MANAGEMENT_ENGINE
	bool
	default n

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_INTEL_I82801BX
	bool
	select IOAPIC
	select HAVE_HARD_RESET
	select USE_WATCHDOG_ON_BOOT
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_RDC_R8610
	bool

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/rdc/r8610/bootblock.c"
	depends on SOUTHBRIDGE_RDC_R8610
##
## This file is part of the coreboot project.
##
## Copyright (C) 2013 DMP Electronics Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_DMP_VORTEX86EX
	bool
	select AZALIA_PLUGIN_SUPPORT
	select HAVE_HARD_RESET
config SOUTHBRIDGE_SIS_SIS966
	bool
	select IOAPIC
	select HAVE_USBDEBUG
	select HAVE_HARD_RESET

if SOUTHBRIDGE_SIS_SIS966

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/sis/sis966/bootblock.c"

config EHCI_BAR
	hex
	default 0xfef00000

endif

config SOUTHBRIDGE_VIA_K8T890
	bool

if SOUTHBRIDGE_VIA_K8T890

config SOUTHBRIDGE_VIA_SUBTYPE_K8M800     # not tested
	def_bool n
config SOUTHBRIDGE_VIA_SUBTYPE_K8T800_OLD # not tested, lspci lists B188 and 3188
	def_bool n
config SOUTHBRIDGE_VIA_SUBTYPE_K8T800     # lspci lists 0282, 1282, 2282, 3282, and 7282
	def_bool n
config SOUTHBRIDGE_VIA_SUBTYPE_K8T800PRO  # lspci lists 0282, 1282, 2282, 3282, and 7282
	def_bool n
config SOUTHBRIDGE_VIA_SUBTYPE_K8M890
	def_bool n
config SOUTHBRIDGE_VIA_SUBTYPE_K8T890
	def_bool n

config SOUTHBRIDGE_VIA_K8M890_VGA_EN
	bool "Enable onboard K8M890 graphics"
	default y
	depends on SOUTHBRIDGE_VIA_SUBTYPE_K8M890
	select VGA
	select GFXUMA

choice
	prompt "Framebuffer size"
	default K8M890_VIDEO_MB_32MB
	depends on SOUTHBRIDGE_VIA_K8M890_VGA_EN

config K8M890_VIDEO_MB_32MB
	bool "32MB"
config K8M890_VIDEO_MB_64MB
	bool "64MB"
config K8M890_VIDEO_MB_128MB
	bool "128MB"
config K8M890_VIDEO_MB_256MB
	bool "256MB"
config K8M890_VIDEO_MB_CMOS
	bool "Use CMOS option"

endchoice

config VIDEO_MB
	int
	default 32  if K8M890_VIDEO_MB_32MB
	default 64  if K8M890_VIDEO_MB_64MB
	default 128  if K8M890_VIDEO_MB_128MB
	default 256 if K8M890_VIDEO_MB_256MB
	default -1  if K8M890_VIDEO_MB_CMOS
	depends on SOUTHBRIDGE_VIA_K8M890_VGA_EN

endif # SOUTHBRIDGE_K8T890
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_VIA_VT8237R
	bool
	select HAVE_DEBUG_SMBUS
	select IOAPIC

if SOUTHBRIDGE_VIA_VT8237R

config EPIA_VT8237R_INIT
	bool
	default n

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/via/vt8237r/bootblock.c"

endif
config SOUTHBRIDGE_BROADCOM_BCM21000
	bool
config SOUTHBRIDGE_BROADCOM_BCM5780
	bool
config SOUTHBRIDGE_BROADCOM_BCM5785
	bool
	select HAVE_HARD_RESET

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/broadcom/bcm5785/bootblock.c"
	depends on SOUTHBRIDGE_BROADCOM_BCM5785
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_RICOH_RL5C476
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_TI_PCIXX12
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2008-2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SOUTHBRIDGE_TI_PCI7420
	bool
config SOUTHBRIDGE_TI_PCI1X2X
	bool
config SOUTHBRIDGE_NVIDIA_CK804
	bool
	select HAVE_HARD_RESET
	select HAVE_USBDEBUG
	select IOAPIC

if SOUTHBRIDGE_NVIDIA_CK804

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/nvidia/ck804/bootblock.c"

config EHCI_BAR
	hex
	default 0xfef00000

config CK804_USE_NIC
	bool
	default n

config CK804_USE_ACI
	bool
	default n

config CK804_PCI_E_X
	int
	default 4

config CK804B_PCI_E_X
	int
	default 4

config CK804_PCIE_PME_WAKE
	bool "Enable system wake on PCIe PME# signal"
	default n

config CK804_NUM
	int
	default 1

config HPET_MIN_TICKS
	hex
	default 0xfa

endif
config SOUTHBRIDGE_NVIDIA_MCP55
	bool
	select HAVE_USBDEBUG
	select IOAPIC
	select HAVE_HARD_RESET

if SOUTHBRIDGE_NVIDIA_MCP55

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string
	default "southbridge/nvidia/mcp55/bootblock.c"

config EHCI_BAR
	hex
	default 0xfef00000

config MCP55_USE_NIC
	bool
	default n

config MCP55_USE_AZA
	bool
	default n

config MCP55_NUM
	int
	default 1

config MCP55_PCI_E_X_0
	int
	default 4

config MCP55_PCI_E_X_1
	int
	default 4

config MCP55_PCI_E_X_2
	int
	default 4

config MCP55_PCI_E_X_3
	int
	default 4

endif
comment "Super I/O"
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Ronald G. Minnich
## Copyright (C) 2014 Edward O'Callaghan <eocallaghan@alterapraxis.com>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

# Generic Winbond romstage driver - Just enough UART initialisation code for
# romstage.
config SUPERIO_WINBOND_COMMON_ROMSTAGE
	bool

config SUPERIO_WINBOND_W83627DHG
	bool
	select SUPERIO_WINBOND_COMMON_ROMSTAGE

config SUPERIO_WINBOND_W83627EHG
	bool
	select SUPERIO_WINBOND_COMMON_ROMSTAGE

config SUPERIO_WINBOND_W83627HF
	bool
	select SUPERIO_WINBOND_COMMON_ROMSTAGE

config SUPERIO_WINBOND_W83627THG
	bool
	select SUPERIO_WINBOND_COMMON_ROMSTAGE

config SUPERIO_WINBOND_W83627UHG
	bool
	select SUPERIO_WINBOND_COMMON_ROMSTAGE

config SUPERIO_WINBOND_W83667HG_A
	bool
	select SUPERIO_WINBOND_COMMON_ROMSTAGE

config SUPERIO_WINBOND_W83697HF
	bool
	select SUPERIO_WINBOND_COMMON_ROMSTAGE

config SUPERIO_WINBOND_W83977TF
	bool
	select SUPERIO_WINBOND_COMMON_ROMSTAGE

config SUPERIO_WINBOND_WPCD376I
	bool
	select SUPERIO_WINBOND_COMMON_ROMSTAGE
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Ronald G. Minnich
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SUPERIO_INTEL_I3100
	bool

config SUPERIO_INTEL_I8900
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SUPERIO_RENESAS_M3885X
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Ronald G. Minnich
## Copyright (C) 2012 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SUPERIO_WANTS_14MHZ_CLOCK
	bool

config SUPERIO_SMSC_DME1737
	bool
config SUPERIO_SMSC_FDC37N972
	bool
config SUPERIO_SMSC_LPC47B272
	bool
config SUPERIO_SMSC_LPC47B397
	bool
config SUPERIO_SMSC_LPC47M10X
	bool
config SUPERIO_SMSC_LPC47M15X
	bool
config SUPERIO_SMSC_LPC47N207
	bool
config SUPERIO_SMSC_LPC47N217
	bool
config SUPERIO_SMSC_LPC47N227
	bool
config SUPERIO_SMSC_SIO10N268
	bool
config SUPERIO_SMSC_SIO1007
	bool
config SUPERIO_SMSC_KBC1100
	bool
config SUPERIO_SMSC_MEC1308
	bool
config SUPERIO_SMSC_SMSCSUPERIO
	bool
	select SUPERIO_WANTS_14MHZ_CLOCK
config SUPERIO_SMSC_SIO1036
	bool
config SUPERIO_SMSC_SCH4037
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Ronald G. Minnich
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SUPERIO_SERVERENGINES_PILOT
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Ronald G. Minnich
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##


config SUPERIO_NSC_PC87309
	bool
config SUPERIO_NSC_PC87360
	bool
config SUPERIO_NSC_PC87366
	bool
config SUPERIO_NSC_PC87382
	bool
config SUPERIO_NSC_PC87384
	bool
config SUPERIO_NSC_PC87392
	bool
config SUPERIO_NSC_PC87417
	bool
config SUPERIO_NSC_PC97317
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Ronald G. Minnich
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SUPERIO_VIA_VT1211
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Advanced Micro Devices, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

# Generic Nuvoton romstage driver - Just enough UART initialisation code for
# romstage.
config SUPERIO_NUVOTON_COMMON_ROMSTAGE
	bool

config SUPERIO_NUVOTON_WPCM450
	bool

config SUPERIO_NUVOTON_NCT5104D
	bool
	select SUPERIO_NUVOTON_COMMON_ROMSTAGE

config SUPERIO_NUVOTON_NCT5572D
	bool
	select SUPERIO_NUVOTON_COMMON_ROMSTAGE

config SUPERIO_NUVOTON_NCT6779D
	bool
	select SUPERIO_NUVOTON_COMMON_ROMSTAGE
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Ronald G. Minnich
## Copyright (C) 2014 Edward O'Callaghan <eocallaghan@alterapraxis.com>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

# Generic ITE romstage driver - Just enough UART initialisation code for
# romstage.
config SUPERIO_ITE_COMMON_ROMSTAGE
	bool

config SUPERIO_ITE_IT8671F
	bool
	select SUPERIO_ITE_COMMON_ROMSTAGE

config SUPERIO_ITE_IT8712F
	bool
	select SUPERIO_ITE_COMMON_ROMSTAGE

config SUPERIO_ITE_IT8716F
	bool
	select SUPERIO_ITE_COMMON_ROMSTAGE

config SUPERIO_ITE_IT8716F_OVERRIDE_FANCTL
	bool
	depends on SUPERIO_ITE_IT8716F
	default n
	select SUPERIO_ITE_COMMON_ROMSTAGE

config SUPERIO_ITE_IT8718F
	bool
	select SUPERIO_ITE_COMMON_ROMSTAGE

config SUPERIO_ITE_IT8721F
	bool
	select SUPERIO_ITE_COMMON_ROMSTAGE

config SUPERIO_ITE_IT8728F
	bool
	select SUPERIO_ITE_COMMON_ROMSTAGE

config SUPERIO_ITE_IT8772F
	bool
	select SUPERIO_ITE_COMMON_ROMSTAGE
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009 Ronald G. Minnich
## Copyright (C) 2014 Edward O'Callaghan <eocallaghan@alterapraxis.com>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

# Generic Fintek romstage driver - Just enough UART initialisation code for
# romstage.
config SUPERIO_FINTEK_COMMON_ROMSTAGE
	bool

config SUPERIO_FINTEK_F71805F
	bool
	select SUPERIO_FINTEK_COMMON_ROMSTAGE

config SUPERIO_FINTEK_F71859
	bool
	select SUPERIO_FINTEK_COMMON_ROMSTAGE

config SUPERIO_FINTEK_F71863FG
	bool
	select SUPERIO_FINTEK_COMMON_ROMSTAGE

config SUPERIO_FINTEK_F71869AD
	bool
	select SUPERIO_FINTEK_COMMON_ROMSTAGE

config SUPERIO_FINTEK_F71872
	bool
	select SUPERIO_FINTEK_COMMON_ROMSTAGE

config SUPERIO_FINTEK_F81216H
	bool
# N.B. 'special romstage'

config SUPERIO_FINTEK_F81865F
	bool
	select SUPERIO_FINTEK_COMMON_ROMSTAGE

config SUPERIO_FINTEK_F81866D
	bool
	select SUPERIO_FINTEK_COMMON_ROMSTAGE
comment "Embedded Controllers"
config EC_ACPI
	bool
	help
	ACPI Embedded Controller interface. Mostly found in laptops.
config EC_KONTRON_IT8516E
	select EC_ACPI
	bool
	help
	  Kontron uses an ITE IT8516E on the KTQM77. Its firmware might
	  come from Fintek (mentioned as Finte*c* somewhere in their Linux
	  driver).
	  The KTQM77 is an embedded board and the IT8516E seems to be
	  only used for fan control and GPIO.
config EC_SMSC_MEC1308
	bool
	help
	Shared memory mailbox interface to SMSC MEC1308 Embedded Controller.
config EC_COMPAL_ENE932
	bool
	help
	Interface to COMPAL ENE932 Embedded Controller.
config EC_QUANTA_IT8518
	bool
	help
	Interface to QUANTA IT8518 Embedded Controller.
config EC_QUANTA_ENE_KB3940Q
	bool
	help
	Interface to QUANTA ENE KB3940Q Embedded Controller.
config EC_GOOGLE_CHROMEEC
	bool
	help
	  Google's Chrome EC

config EC_GOOGLE_CHROMEEC_ACPI_MEMMAP
	depends on EC_GOOGLE_CHROMEEC_LPC
	def_bool n
	help
	  When defined, ACPI accesses EC memmap data on ports 66h/62h. When
	  not defined, the memmap data is instead accessed on 900h-9ffh via
	  the LPC bus.

config EC_GOOGLE_CHROMEEC_I2C
	depends on EC_GOOGLE_CHROMEEC
	bool
	default n
	help
	  Google's Chrome EC via I2C bus.

config EC_GOOGLE_CHROMEEC_I2C_BUS
	depends on EC_GOOGLE_CHROMEEC_I2C
	hex "I2C bus for Google's Chrome EC"

config EC_GOOGLE_CHROMEEC_I2C_CHIP
	depends on EC_GOOGLE_CHROMEEC_I2C
	hex
	default 0x1e

config EC_GOOGLE_CHROMEEC_I2C_PROTO3
	depends on EC_GOOGLE_CHROMEEC_I2C
	bool
	default n
	help
	  Use only proto3 for i2c EC communication.

config EC_GOOGLE_CHROMEEC_LPC
	depends on EC_GOOGLE_CHROMEEC && ARCH_X86  # Needs Plug-and-play.
	def_bool y
	help
	  Google Chrome EC via LPC bus.

config EC_GOOGLE_CHROMEEC_MEC
	depends on EC_GOOGLE_CHROMEEC_LPC
	def_bool n
	help
	  Microchip EC variant for LPC register access.

config EC_GOOGLE_CHROMEEC_PD
	depends on EC_GOOGLE_CHROMEEC
	def_bool n
	help
	  Indicates that Google's Chrome USB PD chip is present.

config EC_GOOGLE_CHROMEEC_SPI
	depends on EC_GOOGLE_CHROMEEC
	def_bool n
	help
	  Google's Chrome EC via SPI bus.

config EC_GOOGLE_CHROMEEC_SPI_BUS
	depends on EC_GOOGLE_CHROMEEC_SPI
	hex

config EC_GOOGLE_CHROMEEC_SPI_WAKEUP_DELAY_US
	depends on EC_GOOGLE_CHROMEEC_SPI
	int
	default 0
	help
	  Force delay after asserting /CS to allow EC to wakeup.

config EC_GOOGLE_CHROMEEC_SPI_CHIP
	depends on EC_GOOGLE_CHROMEEC_SPI
	hex
	default 0

config EC_EXTERNAL_FIRMWARE
	depends on EC_GOOGLE_CHROMEEC
	def_bool n
	help
	  Disable building EC firmware if it's already built externally (and
	  added manually.)

config EC_GOOGLE_CHROMEEC_BOARDNAME
	depends on EC_GOOGLE_CHROMEEC && !EC_EXTERNAL_FIRMWARE
	string "Chrome EC board name for EC"
	default ""
	help
	  The board name used in the Chrome EC code base to build
	  the EC firmware.  If set, the coreboot build with also
	  build the EC firmware and add it to the image.

config EC_GOOGLE_CHROMEEC_PD_BOARDNAME
	depends on EC_GOOGLE_CHROMEEC_PD && !EC_EXTERNAL_FIRMWARE
	string "Chrome EC board name for PD"
	default ""
	help
	  The board name used in the Chrome EC code base to build
	  the PD firmware.  If set, the coreboot build with also
	  build the EC firmware and add it to the image.
config EC_LENOVO_H8
	select EC_ACPI
	bool

config H8_DOCK_EARLY_INIT
	bool
config EC_LENOVO_PMH7
	bool
config EC_PURISM_LIBREM
	bool
	help
	  Purism Librem EC
# FIXME move to vendorcode
##
## This file is part of the coreboot project.
##
## Copyright (C) 2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

if PLATFORM_USES_FSP1_0

comment "Intel FSP"

config HAVE_FSP_BIN
	bool "Use Intel Firmware Support Package"
	help
	  Select this option to add an Intel FSP binary to
	  the resulting coreboot image.

	  Note: Without this binary, coreboot builds relying on the FSP
	  will not boot

config DCACHE_RAM_BASE
	hex
	default 0xfef00000

config DCACHE_RAM_SIZE
	hex
	default 0x4000

if HAVE_FSP_BIN

config FSP_FILE
	string "Intel FSP binary path and filename"
	help
	  The path and filename of the Intel FSP binary for this platform.

endif #HAVE_FSP_BIN

config FSP_LOC
	hex "Intel FSP Binary location in CBFS"
	help
	  The location in CBFS that the FSP is located. This must match the
	  value that is set in the FSP binary.  If the FSP needs to be moved,
	  rebase the FSP with Intel's BCT (tool).

config ENABLE_FSP_FAST_BOOT
	bool "Enable Fast Boot"
	select ENABLE_MRC_CACHE
	default n
	help
	  Enabling this feature will force the MRC data to be cached in NV
	  storage to be used for speeding up boot time on future reboots
	  and/or power cycles.

config ENABLE_MRC_CACHE
	bool
	default y if HAVE_ACPI_RESUME
	default n
	help
	  Enabling this feature will cause MRC data to be cached in NV storage.
	  This can either be used for fast boot, or just because the FSP wants
	  it to be saved.

config MRC_CACHE_FMAP
	bool "Use MRC Cache in FMAP"
	depends on ENABLE_MRC_CACHE
	default n
	help
	  Use the region "RW_MRC_CACHE" in FMAP instead of "mrc.cache" in CBFS.
	  You must define a region in your FMAP named "RW_MRC_CACHE".

config MRC_CACHE_SIZE
	hex "Fast Boot Data Cache Size"
	default 0x10000
	depends on ENABLE_MRC_CACHE
	depends on !MRC_CACHE_FMAP
	help
	  This is the amount of space in NV storage that is reserved for the
	  fast boot data cache storage.

	  WARNING: Because this area will be erased and re-written, the size
	  should be a full sector of the flash ROM chip and nothing else should
	  be included in CBFS in any sector that the fast boot cache data is in.

config VIRTUAL_ROM_SIZE
	hex "Virtual ROM Size"
	default ROM_SIZE
	depends on ENABLE_MRC_CACHE
	help
	  This is used to calculate the offset of the MRC data cache in NV
	  Storage for fast boot.  If in doubt, leave this set to the default
	  which sets the virtual size equal to the ROM size.

	  Example: Cougar Canyon 2 has two 8 MB SPI ROMs.  When the SPI ROMs are
	  loaded with a 4 MB coreboot image, the virtual ROM size is 8 MB.  When
	  the SPI ROMs are loaded with an 8 MB coreboot image, the virtual ROM
	  size is 16 MB.

config CACHE_ROM_SIZE_OVERRIDE
	hex "Cache ROM Size"
	default CBFS_SIZE
	help
	  This is the size of the cachable area that is passed into the FSP in
	  the early initialization.  Typically this should be the size of the CBFS
	  area, but the size must be a power of 2 whereas the CBFS size does not
	  have this limitation.

config USE_GENERIC_FSP_CAR_INC
	bool
	default n
	help
	  The chipset can select this to use a generic cache_as_ram.inc file
	  that should be good for all FSP based platforms.

config FSP_USES_UPD
	bool
	default n
	help
	  If this FSP uses UPD/VPD data regions, select this in the chipset Kconfig.
endif #PLATFORM_USES_FSP1_0

##
## This file is part of the coreboot project.
##
## Copyright (C) 2011 Google Inc.
## Copyright (C) 2013-2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config HAVE_INTEL_FIRMWARE
	bool
	help
	  Chipset uses the Intel Firmware Descriptor to describe the
	  layout of the SPI ROM chip.

if HAVE_INTEL_FIRMWARE

comment "Intel Firmware"

config HAVE_IFD_BIN
	bool "Add Intel descriptor.bin file"
	help
	  The descriptor binary

config IFD_BIN_PATH
	string "Path and filename of the descriptor.bin file"
	default "3rdparty/blobs/mainboard/$(MAINBOARDDIR)/descriptor.bin"
	depends on HAVE_IFD_BIN && !BUILD_WITH_FAKE_IFD

config EM100
	bool "Configure IFD for EM100 usage"
	depends on HAVE_IFD_BIN && !BUILD_WITH_FAKE_IFD
	help
	  Set SPI frequency to 20MHz and disable Dual Output Fast Read Support

config HAVE_ME_BIN
	bool "Add Intel ME/TXE firmware"
	depends on HAVE_IFD_BIN
	help
	  The Intel processor in the selected system requires a special firmware
	  for an integrated controller.  This might be called the Management
	  Engine (ME), the Trusted Execution Engine (TXE) or something else
	  depending on the chip. This firmware might or might not be available
	  in coreboot's 3rdparty/blobs repository. If it is not and if you don't
	  have access to the firmware from elsewhere, you can still build
	  coreboot without it. In this case however, you'll have to make sure
	  that you don't overwrite your ME/TXE firmware on your flash ROM.

config ME_BIN_PATH
	string "Path to management engine firmware"
	default "3rdparty/blobs/mainboard/$(MAINBOARDDIR)/me.bin"
	depends on HAVE_ME_BIN

config HAVE_GBE_BIN
	bool "Add gigabit ethernet firmware"
	depends on HAVE_IFD_BIN
	help
	  The integrated gigabit ethernet controller needs a firmware file.
	  Select this if you are going to use the PCH integrated controller
	  and have the firmware.

config GBE_BIN_PATH
	string "Path to gigabit ethernet firmware"
	depends on HAVE_GBE_BIN
	default "3rdparty/blobs/mainboard/$(MAINBOARDDIR)/gbe.bin"

##### Fake IFD #####

config BUILD_WITH_FAKE_IFD
	bool "Build with a fake IFD" if !HAVE_IFD_BIN
	help
	  If you don't have an Intel Firmware Descriptor (descriptor.bin) for your
	  board, you can select this option and coreboot will build without it.
	  The resulting coreboot.rom will not contain all parts required
	  to get coreboot running on your board. You can however write only the
	  BIOS section to your board's flash ROM and keep the other sections
	  untouched. Unfortunately the current version of flashrom doesn't
	  support this yet. But there is a patch pending [1].

	  WARNING: Never write a complete coreboot.rom to your flash ROM if it
	           was built with a fake IFD. It just won't work.

	  [1] http://www.flashrom.org/pipermail/flashrom/2013-June/011083.html

config IFD_BIOS_SECTION
	depends on BUILD_WITH_FAKE_IFD
	string "BIOS Region Starting:Ending addresses within the ROM"
	default ""
	help
	  The BIOS region is typically the size of the CBFS area, and is located
	  at the end of the ROM space.

	  For an 8MB ROM with a 3MB CBFS area, this would look like:
	  0x00500000:0x007fffff

config IFD_ME_SECTION
	depends on BUILD_WITH_FAKE_IFD
	string "ME/TXE Region Starting:Ending addresses within the ROM"
	default ""
	help
	  The ME/TXE region typically starts at around 0x1000 and often fills the
	  ROM space not used by CBFS.

	  For an 8MB ROM with a 3MB CBFS area, this might look like:
	  0x00001000:0x004fffff

config IFD_GBE_SECTION
	depends on BUILD_WITH_FAKE_IFD
	string "GBE Region Starting:Ending addresses within the ROM"
	default ""
	help
	  The Gigabit Ethernet ROM region is used when an Intel NIC is built into
	  the Southbridge/SOC and the platform uses this device instead of an external
	  PCIe NIC.  It will be located between the ME/TXE and the BIOS region.

	  Leave this empty if you're unsure.

config IFD_PLATFORM_SECTION
	depends on BUILD_WITH_FAKE_IFD
	string "Platform Region Starting:Ending addresses within the Rom"
	default ""
	help
	  The Platform region is used for platform specific data.
	  It will be located between the ME/TXE and the BIOS region.

	  Leave this empty if you're unsure.

config LOCK_MANAGEMENT_ENGINE
	bool "Lock ME/TXE section"
	depends on HAVE_ME_BIN
	default n
	help
	  The Intel Firmware Descriptor supports preventing write accesses
	  from the host to the ME or TXE section in the firmware
	  descriptor. If the section is locked, it can only be overwritten
	  with an external SPI flash programmer. You will want this if you
	  want to increase security of your ROM image once you are sure
	  that the ME/TXE firmware is no longer going to change.

	  If unsure, say N.

config CBFS_SIZE
	hex
	default 0x100000
	help
	  Reduce CBFS size to give room to the IFD blobs.

endif #INTEL_FIRMWARE
#
# This file is part of the coreboot project.
#
# Copyright (C) 2013-2014 Sage Electronic Engineering, LLC
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

if CPU_AMD_PI

menu "AMD Platform Initialization"

choice
	prompt "AGESA source"
	default CPU_AMD_AGESA_BINARY_PI if CPU_AMD_PI
	default CPU_AMD_AGESA_OPENSOURCE
	help
	  Select the method for including the AMD Platform Initialization
	  code into coreboot.  Platform Initialization code is required for
	  all AMD processors.

config CPU_AMD_AGESA_BINARY_PI
	bool "binary PI"
	select HUDSON_DISABLE_IMC if CPU_AMD_PI_00730F01 || CPU_AMD_PI_00630F01
	help
	  Use a binary PI package.  Generally, these will be stored in the
	  "3rdparty/blobs" directory.  For some processors, these must be obtained
	  directly from AMD Embedded Processors Group
	  (http://www.amdcom/embedded).

config CPU_AMD_AGESA_OPENSOURCE
	bool "open-source AGESA"
	help
	  Build the PI package ("AGESA") from source code in the "vendorcode"
	  directory.

endchoice

if CPU_AMD_AGESA_BINARY_PI
#
# Copyright (c) 2013 - 2014, Sage Electronic Engineering, LLC
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Advanced Micro Devices, Inc. nor the names of
#       its contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL ADVANCED MICRO DEVICES, INC. BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

if CPU_AMD_PI_00630F01 || CPU_AMD_PI_00730F01 || CPU_AMD_PI_00660F01

config AGESA_BINARY_PI_VENDORCODE_PATH
	string "AGESA PI directory path"
	default "src/vendorcode/amd/pi/00630F01" if CPU_AMD_PI_00630F01
	default "src/vendorcode/amd/pi/00730F01" if CPU_AMD_PI_00730F01
	default "src/vendorcode/amd/pi/00660F01" if CPU_AMD_PI_00660F01
	help
	  Specify where to find the AGESA header files
	  for AMD platform initialization.

config AGESA_BINARY_PI_FILE
	string "AGESA PI binary file name"
	default "3rdparty/blobs/pi/amd/00630F01/FP3/AGESA.bin" if CPU_AMD_PI_00630F01
	default "3rdparty/blobs/pi/amd/00730F01/FT3b/AGESA.bin" if CPU_AMD_PI_00730F01
	default "3rdparty/blobs/pi/amd/00660F01/FP4/AGESA.bin" if CPU_AMD_PI_00660F01
	help
	  Specify the binary file to use for AMD platform initialization.

config AGESA_BINARY_PI_LOCATION
	string "AGESA PI binary address in ROM"
	default 0xFFE00000
	help
	  Specify the ROM address at which to store the binary Platform
	  Initialization code.

endif
endif

endmenu

endif
##
## This file is part of the coreboot project.
##
## Copyright (C) 2013 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config FSP_VENDORCODE_HEADER_PATH
	string
	default "fsp1_0/ivybridge_bd82x6x" if CPU_INTEL_FSP_MODEL_306AX && SOUTHBRIDGE_INTEL_FSP_BD82X6X
	default "fsp1_0/ivybridge_i89xx/" if CPU_INTEL_FSP_MODEL_306AX && SOUTHBRIDGE_INTEL_FSP_I89XX
	default "fsp1_0/baytrail" if SOC_INTEL_FSP_BAYTRAIL
	default "fsp1_0/broadwell_de" if SOC_INTEL_FSP_BROADWELL_DE
	default "fsp1_0/rangeley" if CPU_INTEL_FSP_MODEL_406DX

config UEFI_2_4_BINDING
	def_bool n
##
## This file is part of the coreboot project.
##
## Copyright (C) 2016 Siemens AG
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config USE_SIEMENS_HWILIB
	bool
	default n

## This file is part of the coreboot project.
##
## Copyright (C) 2011 The ChromiumOS Authors.  All rights reserved.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

## This file is part of the coreboot project.
##
## Copyright (C) 2011 The ChromiumOS Authors.  All rights reserved.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config MAINBOARD_HAS_CHROMEOS
	def_bool n

menu "ChromeOS"
	depends on MAINBOARD_HAS_CHROMEOS

config CHROMEOS
	bool "Build for ChromeOS"
	default n
	select TPM
	select TPM_INIT_FAILURE_IS_FATAL if PC80_SYSTEM && LPC_TPM
	select SKIP_TPM_STARTUP_ON_NORMAL_BOOT if PC80_SYSTEM && LPC_TPM
	select BOOTMODE_STRAPS
	select ELOG if SPI_FLASH
	select COLLECT_TIMESTAMPS
	select VBOOT_VERIFY_FIRMWARE
	select MULTIPLE_CBFS_INSTANCES
	help
	  Enable ChromeOS specific features like the GPIO sub table in
	  the coreboot table. NOTE: Enabling this option on an unsupported
	  board will most likely break your build.

if CHROMEOS

config VBNV_OFFSET
	hex
	default 0x26
	depends on PC80_SYSTEM
	help
	  CMOS offset for VbNv data. This value must match cmos.layout
	  in the mainboard directory, minus 14 bytes for the RTC.

config CHROMEOS_VBNV_CMOS
	bool "Vboot non-volatile storage in CMOS."
	default n
	help
	  VBNV is stored in CMOS

config CHROMEOS_VBNV_CMOS_BACKUP_TO_FLASH
	bool "Back up Vboot non-volatile storage from CMOS to flash."
	default n
	depends on CHROMEOS_VBNV_CMOS
	help
	  Vboot non-volatile storage data will be backed up from CMOS to flash
	  and restored from flash if the CMOS is invalid due to power loss.

config CHROMEOS_VBNV_EC
	bool "Vboot non-volatile storage in EC."
	default n
	help
	  VBNV is stored in EC

config CHROMEOS_VBNV_FLASH
	def_bool n
	help
	  VBNV is stored in flash storage

config CHROMEOS_RAMOOPS
	bool "Reserve space for Chrome OS ramoops"
	default y

config CHROMEOS_RAMOOPS_DYNAMIC
	bool "Allocate RAM oops buffer in cbmem"
	default n
	depends on CHROMEOS_RAMOOPS && HAVE_ACPI_TABLES

config CHROMEOS_RAMOOPS_NON_ACPI
	bool "Allocate RAM oops buffer in cbmem passed through cb tables to payload"
	default n
	depends on CHROMEOS_RAMOOPS && !HAVE_ACPI_TABLES

config CHROMEOS_RAMOOPS_RAM_START
	hex "Physical address of preserved RAM"
	default 0x00f00000
	depends on CHROMEOS_RAMOOPS && !CHROMEOS_RAMOOPS_DYNAMIC

config CHROMEOS_RAMOOPS_RAM_SIZE
	hex "Size of preserved RAM"
	default 0x00100000
	depends on CHROMEOS_RAMOOPS

config EC_SOFTWARE_SYNC
	bool "Enable EC software sync"
	default n
	depends on VBOOT_VERIFY_FIRMWARE
	help
	  EC software sync is a mechanism where the AP helps the EC verify its
	  firmware similar to how vboot verifies the main system firmware. This
	  option selects whether depthcharge should support EC software sync.

config VBOOT_EC_SLOW_UPDATE
	bool "EC is slow to update"
	default n
	depends on EC_SOFTWARE_SYNC
	help
	  Whether the EC (or PD) is slow to update and needs to display a
	  screen that informs the user the update is happening.

config VBOOT_OPROM_MATTERS
	bool "Video option ROM matters"
	default n
	depends on VBOOT_VERIFY_FIRMWARE
	help
	  Whether the video option ROM has run matters on this platform.

config VIRTUAL_DEV_SWITCH
	bool "Virtual developer switch support"
	default n
	depends on VBOOT_VERIFY_FIRMWARE
	help
	  Whether this platform has a virtual developer switch.

config VBOOT_VERIFY_FIRMWARE
	bool "Verify firmware with vboot."
	default n
	depends on HAVE_HARD_RESET
	help
	  Enabling VBOOT_VERIFY_FIRMWARE will use vboot to verify the components
	  of the firmware (stages, payload, etc).

config NO_TPM_RESUME
	bool
	default n
	help
	  On some boards the TPM stays powered up in S3. On those
	  boards, booting Windows will break if the TPM resume command
	  is sent during an S3 resume.

config PHYSICAL_REC_SWITCH
	bool "Physical recovery switch is present"
	default n
	help
	  Whether this platform has a physical recovery switch

config LID_SWITCH
	bool "Lid switch is present"
	default n
	help
	  Whether this platform has a lid switch

config WIPEOUT_SUPPORTED
	bool "User is able to request factory reset"
	default n
	help
	  When this option is enabled, the firmware provides the ability to
	  signal the application the need for factory reset (a.k.a. wipe
	  out) of the device

config HAVE_REGULATORY_DOMAIN
	bool "Add regulatory domain methods"
	default n
	help
	 This option is needed to add ACPI regulatory domain methods

## This file is part of the coreboot project.
##
## Copyright (C) 2014 The ChromiumOS Authors.  All rights reserved.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config VBOOT_STARTS_IN_BOOTBLOCK
	bool "Vboot starts verifying in bootblock"
	default n
	depends on VBOOT_VERIFY_FIRMWARE
	help
	  Firmware verification happens during or at the end of bootblock.

config VBOOT_STARTS_IN_ROMSTAGE
	bool "Vboot starts verifying in romstage"
	default n
	depends on VBOOT_VERIFY_FIRMWARE && !VBOOT_STARTS_IN_BOOTBLOCK
	help
	  Firmware verification happens during or at the end of romstage.

config VBOOT2_MOCK_SECDATA
	bool "Mock secdata for firmware verification"
	default n
	depends on VBOOT_VERIFY_FIRMWARE
	help
	  Enabling VBOOT2_MOCK_SECDATA will mock secdata for the firmware
	  verification to avoid access to a secdata storage (typically TPM).
	  All operations for a secdata storage will be successful. This option
	  can be used during development when a TPM is not present or broken.
	  THIS SHOULD NOT BE LEFT ON FOR PRODUCTION DEVICES.

config VBOOT_DISABLE_DEV_ON_RECOVERY
	bool "Disable dev mode on recovery requests"
	default n
	depends on VBOOT_VERIFY_FIRMWARE
	help
	  When this option is enabled, the Chrome OS device leaves the
	  developer mode as soon as recovery request is detected. This is
	  handy on embedded devices with limited input capabilities.

config SEPARATE_VERSTAGE
	bool "Vboot verification is built into a separate stage"
	default n
	depends on VBOOT_VERIFY_FIRMWARE

config RETURN_FROM_VERSTAGE
	bool "The separate verification stage returns to its caller"
	default n
	depends on SEPARATE_VERSTAGE
	help
	  If this is set, the verstage returns back to the calling stage instead
	  of exiting to the succeeding stage so that the verstage space can be
	  reused by the succeeding stage. This is useful if a ram space is too
	  small to fit both the verstage and the succeeding stage.

config CHIPSET_PROVIDES_VERSTAGE_MAIN_SYMBOL
	bool "The chipset provides the main() entry point for verstage"
	default n
	depends on SEPARATE_VERSTAGE
	help
	  The chipset code provides their own main() entry point.

config VBOOT_DYNAMIC_WORK_BUFFER
	bool "Vboot's work buffer is dynamically allocated."
	default y if ARCH_ROMSTAGE_X86_32 && !SEPARATE_VERSTAGE
	default n
	depends on VBOOT_VERIFY_FIRMWARE
	help
	  This option is used when there isn't enough pre-main memory
	  ram to allocate the vboot work buffer. That means vboot verification
	  is after memory init and requires main memory to back the work
	  buffer.

menu "GBB configuration"

config GBB_HWID
	string "Hardware ID"
	default "NOCONF HWID"

config GBB_BMPFV_FILE
	string "Path to bmpfv image"
	default ""

config GBB_FLAG_DEV_SCREEN_SHORT_DELAY
	bool "Reduce dev screen delay"
	default n

config GBB_FLAG_LOAD_OPTION_ROMS
	bool "Load option ROMs"
	default n

config GBB_FLAG_ENABLE_ALTERNATE_OS
	bool "Allow booting a non-Chrome OS kernel if dev switch is on"
	default n

config GBB_FLAG_FORCE_DEV_SWITCH_ON
	bool "Force dev switch on"
	default n

config GBB_FLAG_FORCE_DEV_BOOT_USB
	bool "Allow booting from USB in dev mode even if dev_boot_usb=0"
	default y

config GBB_FLAG_DISABLE_FW_ROLLBACK_CHECK
	bool "Disable firmware rollback protection"
	default y

config GBB_FLAG_ENTER_TRIGGERS_TONORM
	bool "Return to normal boot with Enter"
	default n

config GBB_FLAG_FORCE_DEV_BOOT_LEGACY
	bool "Allow booting to legacy in dev mode even if dev_boot_legacy=0"
	default n

config GBB_FLAG_FAFT_KEY_OVERIDE
	bool "Allow booting using alternative keys for FAFT servo testing"
	default n

config GBB_FLAG_DISABLE_EC_SOFTWARE_SYNC
	bool "Disable EC software sync"
	default n

config GBB_FLAG_DEFAULT_DEV_BOOT_LEGACY
	bool "Default to booting to legacy in dev mode"
	default n

config GBB_FLAG_DISABLE_PD_SOFTWARE_SYNC
	bool "Disable PD software sync"
	default n

config GBB_FLAG_DISABLE_LID_SHUTDOWN
	bool "Disable shutdown on closed lid"
	default n

config GBB_FLAG_FORCE_DEV_BOOT_FASTBOOT_FULL_CAP
	bool "Allow fastboot even if dev_boot_fastboot_full_cap=0"
	default n

config GBB_FLAG_ENABLE_SERIAL
	bool "Tell vboot to enable serial console"
	default n

endmenu # GBB

menu "Vboot Keys"
config VBOOT_ROOT_KEY
	string "Root key (public)"
	default "3rdparty/vboot/tests/devkeys/root_key.vbpubk"

config VBOOT_RECOVERY_KEY
	string "Recovery key (public)"
	default "3rdparty/vboot/tests/devkeys/recovery_key.vbpubk"

config VBOOT_FIRMWARE_PRIVKEY
	string "Firmware key (private)"
	default "3rdparty/vboot/tests/devkeys/firmware_data_key.vbprivk"

config VBOOT_KERNEL_KEY
	string "Kernel subkey (public)"
	default "3rdparty/vboot/tests/devkeys/kernel_subkey.vbpubk"

config VBOOT_KEYBLOCK
	string "Keyblock to use for the RW regions"
	default "3rdparty/vboot/tests/devkeys/firmware.keyblock"

config VBOOT_KEYBLOCK_VERSION
	int "Keyblock version number"
	default 1

config VBOOT_KEYBLOCK_PREAMBLE_FLAGS
	hex "Keyblock preamble flags"
	default 0

endmenu # Keys

endif # CHROMEOS
endmenu


#
# This file is part of the coreboot project.
#
# Copyright (C) 2014 Imagination Technologies
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; version 2 of
# the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

config ARCH_MIPS
	bool
	default n

config ARCH_BOOTBLOCK_MIPS
	bool
	default n
	select ARCH_MIPS
	select BOOTBLOCK_CUSTOM
	select C_ENVIRONMENT_BOOTBLOCK

config ARCH_VERSTAGE_MIPS
	bool
	default n

config ARCH_ROMSTAGE_MIPS
	bool
	default n

config ARCH_RAMSTAGE_MIPS
	bool
	default n
config ARCH_RISCV
	bool
	default n

config ARCH_BOOTBLOCK_RISCV
	bool
	default n
	select ARCH_RISCV
	select BOOTBLOCK_CUSTOM
	select C_ENVIRONMENT_BOOTBLOCK

config ARCH_VERSTAGE_RISCV
	bool
	default n

config ARCH_ROMSTAGE_RISCV
	bool
	default n

config ARCH_RAMSTAGE_RISCV
	bool
	default n
config ARCH_POWER8
	bool
	default n

config ARCH_BOOTBLOCK_POWER8
	bool
	default n
	select ARCH_POWER8
	select BOOTBLOCK_CUSTOM
	select C_ENVIRONMENT_BOOTBLOCK
	select ARCH_VERSTAGE_POWER8
	select ARCH_ROMSTAGE_POWER8
	select ARCH_RAMSTAGE_POWER8

config ARCH_VERSTAGE_POWER8
	bool
	default n

config ARCH_ROMSTAGE_POWER8
	bool
	default n

config ARCH_RAMSTAGE_POWER8
	bool
	default n
config ARCH_ARM
	bool
	default n

config ARCH_BOOTBLOCK_ARM
	bool
	default n
	select ARCH_ARM
	select C_ENVIRONMENT_BOOTBLOCK

config ARCH_VERSTAGE_ARM
	bool
	default n

config ARCH_ROMSTAGE_ARM
	bool
	default n

config ARCH_RAMSTAGE_ARM
	bool
	default n

config ARCH_BOOTBLOCK_ARMV4
	def_bool n
	select ARCH_BOOTBLOCK_ARM

config ARCH_VERSTAGE_ARMV4
	def_bool n
	select ARCH_VERSTAGE_ARM

config ARCH_ROMSTAGE_ARMV4
	def_bool n
	select ARCH_ROMSTAGE_ARM

config ARCH_RAMSTAGE_ARMV4
	def_bool n
	select ARCH_RAMSTAGE_ARM
config ARCH_BOOTBLOCK_ARMV7
	def_bool n
	select ARCH_BOOTBLOCK_ARM

config ARCH_VERSTAGE_ARMV7
	def_bool n
	select ARCH_VERSTAGE_ARM

config ARCH_ROMSTAGE_ARMV7
	def_bool n
	select ARCH_ROMSTAGE_ARM

config ARCH_RAMSTAGE_ARMV7
	def_bool n
	select ARCH_RAMSTAGE_ARM
config ARCH_BOOTBLOCK_ARMV7_M
	def_bool n
	select ARCH_BOOTBLOCK_ARM
config ARCH_VERSTAGE_ARMV7_M
	def_bool n
	select ARCH_VERSTAGE_ARM

config ARM_LPAE
	bool
	default n
##
## This file is part of the coreboot project.
##
## Copyright (C) 2009-2010 coresystems GmbH
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config ARCH_X86
	bool
	default n
	select PCI

# stage selectors for x86

config ARCH_BOOTBLOCK_X86_32
	bool
	default n
	select ARCH_X86
	select BOOTBLOCK_CUSTOM if !C_ENVIRONMENT_BOOTBLOCK

config ARCH_VERSTAGE_X86_32
	bool
	default n

config ARCH_ROMSTAGE_X86_32
	bool
	default n

config ARCH_RAMSTAGE_X86_32
	bool
	default n

# stage selectors for x64

config ARCH_BOOTBLOCK_X86_64
	bool
	default n
	select ARCH_X86
	select BOOTBLOCK_CUSTOM if !C_ENVIRONMENT_BOOTBLOCK

config ARCH_VERSTAGE_X86_64
	bool
	default n

config ARCH_ROMSTAGE_X86_64
	bool
	default n

config ARCH_RAMSTAGE_X86_64
	bool
	default n

config USE_MARCH_586
	def_bool n
	help
	  Allow a platform or processor to select to be compiled using
	  the '-march=i586' option instead of the typical '-march=i686'

# This is an SMP option. It relates to starting up APs.
# It is usually set in mainboard/*/Kconfig.
# TODO: Improve description.
config AP_IN_SIPI_WAIT
	bool
	default n
	depends on ARCH_X86 && SMP

# Aligns 16bit entry code in bootblock so that hyper-threading CPUs
# can boot AP CPUs to enable their shared caches.
config SIPI_VECTOR_IN_ROM
	bool
	default n
	depends on ARCH_X86

config RAMBASE
	hex
	default 0x100000

# Traditionally BIOS region on SPI flash boot media was memory mapped right below
# 4G and it was the last region in the IFD. This way translation between CPU
# address space to flash address was trivial. However some IFDs on newer SoCs
# have BIOS region sandwiched between descriptor and other regions. Turning off
# this option enables soc code to provide custom mmap_boot.c which can be used to
# implement complex translation.
config X86_TOP4G_BOOTMEDIA_MAP
	bool
	default y

# This is something you almost certainly don't want to mess with.
# How many SIPIs do we send when starting up APs and cores?
# The answer in 2000 or so was '2'. Nowadays, on many systems,
# it is 1. Set a safe default here, and you can override it
# on reasonable platforms.
config NUM_IPI_STARTS
	int
	default 2

config ROMCC
	bool
	default n

config LATE_CBMEM_INIT
	def_bool n
	help
	  Enable this in chipset's Kconfig if northbridge does not implement
	  early get_top_of_ram() call for romstage. CBMEM tables will be
	  allocated late in ramstage, after PCI devices resources are known.

config PC80_SYSTEM
	bool
	default y if ARCH_X86

config BOOTBLOCK_MAINBOARD_INIT
	string

config BOOTBLOCK_NORTHBRIDGE_INIT
	string

config BOOTBLOCK_RESETS
	string

config HAVE_CMOS_DEFAULT
	def_bool n

config CMOS_DEFAULT_FILE
	string
	default "src/mainboard/$(MAINBOARDDIR)/cmos.default"
	depends on HAVE_CMOS_DEFAULT

config BOOTBLOCK_SOUTHBRIDGE_INIT
	string

config IOAPIC_INTERRUPTS_ON_FSB
	bool
	default y if !IOAPIC_INTERRUPTS_ON_APIC_SERIAL_BUS

config IOAPIC_INTERRUPTS_ON_APIC_SERIAL_BUS
	bool
	default n

config HPET_ADDRESS
	hex
	default 0xfed00000 if !HPET_ADDRESS_OVERRIDE

config ID_SECTION_OFFSET
	hex
	default 0x80

# 64KiB default bootblock size when employing C_ENVIRONMENT_BOOTBLOCK.
config C_ENV_BOOTBLOCK_SIZE
	hex
	default 0x10000

# Default address romstage is to be linked at
config ROMSTAGE_ADDR
	hex
	default 0x2000000

# Default address verstage is to be linked at
config VERSTAGE_ADDR
	hex
	default 0x2000000

# Use the post CAR infrastructure for tearing down cache-as-ram
# from a program loaded in ram and subsequently loading ramstage.
config POSTCAR_STAGE
	def_bool n
config ARCH_ARM64
	bool
	default n

config ARCH_BOOTBLOCK_ARM64
	bool
	default n
	select ARCH_ARM64
	select C_ENVIRONMENT_BOOTBLOCK

config ARCH_VERSTAGE_ARM64
	bool
	default n

config ARCH_ROMSTAGE_ARM64
	bool
	default n

config ARCH_RAMSTAGE_ARM64
	bool
	default n

config ARCH_BOOTBLOCK_ARMV8_64
	def_bool n
	select ARCH_BOOTBLOCK_ARM64

config ARCH_VERSTAGE_ARMV8_64
	def_bool n
	select ARCH_VERSTAGE_ARM64

config ARCH_ROMSTAGE_ARMV8_64
	def_bool n
	select ARCH_ROMSTAGE_ARM64

config ARCH_RAMSTAGE_ARMV8_64
	def_bool n
	select ARCH_RAMSTAGE_ARM64

config ARM64_USE_ARM_TRUSTED_FIRMWARE
	bool
	default n
	depends on ARCH_RAMSTAGE_ARM64

config ARM64_USE_SECURE_OS
	bool
	default n
	depends on ARM64_USE_ARM_TRUSTED_FIRMWARE

config ARM64_SECURE_OS_FILE
	string "Secure OS binary file"
	depends on ARM64_USE_SECURE_OS
	help
	  Secure OS binary file.

config ARM64_A53_ERRATUM_843419
	bool
	default n
	help
	  Some early Cortex-A53 revisions had a hardware bug that results in
	  incorrect address calculations in rare cases. This option enables a
	  linker workaround to avoid those cases if your toolchain supports it.
	  Should be selected automatically by SoCs that are affected.

endmenu

##
## This file is part of the coreboot project.
##
## Copyright (C) 2007-2010 coresystems GmbH
## (Written by Stefan Reinauer <stepan@coresystems.de> for coresystems GmbH)
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

menu "Devices"

# Only set this in the mainboard
config MAINBOARD_HAS_NATIVE_VGA_INIT
	bool
	default n

# FIXME Ugly hack to allow Z9s driver native framebuffer configuration
config NATIVE_VGA_INIT_USE_EDID
	bool
	default n if DRIVERS_XGI_Z9S
	default y if !DRIVERS_XGI_Z9S

config MAINBOARD_HAS_NATIVE_VGA_INIT_TEXTMODECFG
	bool
	default n

config MAINBOARD_DO_NATIVE_VGA_INIT
	bool "Use native graphics initialization"
	depends on MAINBOARD_HAS_NATIVE_VGA_INIT
	default n
	help
	  Some mainboards, such as the Google Link, allow initializing the display
	  without the need of a binary only VGA OPROM. Enabling this option may be
	  faster, but also lacks flexibility in setting modes.

	  If unsure, say N.

# TODO: Explain differences (if any) for onboard cards.
config VGA_ROM_RUN
	bool "Run VGA Option ROMs"
	default n if PAYLOAD_SEABIOS
	default y if !PAYLOAD_SEABIOS
	depends on PCI && !MAINBOARD_DO_NATIVE_VGA_INIT
	help
	  Execute VGA Option ROMs in coreboot if found. This is required
	  to enable PCI/AGP/PCI-E video cards when not using a SeaBIOS
	  payload.

	  When using a SeaBIOS payload it runs all option ROMs with much
	  more complete BIOS interrupt services available than coreboot,
	  which some option ROMs require in order to function correctly.

	  If unsure, say N when using SeaBIOS as payload, Y otherwise.

config S3_VGA_ROM_RUN
	bool "Re-run VGA Option ROMs on S3 resume"
	default y
	depends on VGA_ROM_RUN && HAVE_ACPI_RESUME
	help
	  Execute VGA Option ROMs in coreboot when resuming from S3 suspend.

	  When using a SeaBIOS payload it runs all option ROMs with much
	  more complete BIOS interrupt services available than coreboot,
	  which some option ROMs require in order to function correctly.

	  If unsure, say N when using SeaBIOS as payload, Y otherwise.

config ALWAYS_LOAD_OPROM
	def_bool n
	depends on VGA_ROM_RUN
	help
	  Always load option ROMs if any are found. The decision to run
	  the ROM is still determined at runtime, but the distinction
	  between loading and not running comes into play for CHROMEOS.

	  An example where this is required is that VBT (Video BIOS Tables)
	  are needed for the kernel's display driver to know how a piece of
	  hardware is configured to be used.

config ON_DEVICE_ROM_LOAD
	bool "Load Option ROMs on PCI devices"
	default n if PAYLOAD_SEABIOS
	default y if !PAYLOAD_SEABIOS
	depends on PCI
	help
	  Load Option ROMs stored on PCI/PCIe/AGP devices in coreboot.

	  If disabled, only Option ROMs stored in CBFS will be executed by
	  coreboot. If you are concerned about security, you might want to
	  disable this option, but it might leave your system in a state of
	  degraded functionality.

	  When using a SeaBIOS payload it runs all option ROMs with much
	  more complete BIOS interrupt services available than coreboot,
	  which some option ROMs require in order to function correctly.

	  If unsure, say N when using SeaBIOS as payload, Y otherwise.

choice
	prompt "Option ROM execution type"
	default PCI_OPTION_ROM_RUN_YABEL if !ARCH_X86
	default PCI_OPTION_ROM_RUN_REALMODE if ARCH_X86
	depends on VGA_ROM_RUN || GEODE_VSA

config PCI_OPTION_ROM_RUN_REALMODE
	prompt "Native mode"
	bool
	depends on ARCH_X86
	help
	  If you select this option, PCI Option ROMs will be executed
	  natively on the CPU in real mode. No CPU emulation is involved,
	  so this is the fastest, but also the least secure option.
	  (only works on x86/x64 systems)

config PCI_OPTION_ROM_RUN_YABEL
	prompt "Secure mode"
	bool
	depends on !GEODE_VSA
	help
	  If you select this option, the x86emu CPU emulator will be used to
	  execute PCI Option ROMs.

	  This option prevents Option ROMs from doing dirty tricks with the
	  system (such as installing SMM modules or hypervisors), but it is
	  also significantly slower than the native Option ROM initialization
	  method.

	  This is the default choice for non-x86 systems.

endchoice

config YABEL_PCI_ACCESS_OTHER_DEVICES
	prompt "Allow Option ROMs to access other devices"
	bool
	depends on PCI_OPTION_ROM_RUN_YABEL
	help
	  Per default, YABEL only allows Option ROMs to access the PCI device
	  that they are associated with. However, this causes trouble for some
	  onboard graphics chips whose Option ROM needs to reconfigure the
	  north bridge.

config YABEL_PCI_FAKE_WRITING_OTHER_DEVICES_CONFIG
	prompt "Fake success on writing other device's config space"
	bool
	depends on YABEL_PCI_ACCESS_OTHER_DEVICES
	help
	  By default, YABEL aborts when the Option ROM tries to write to other
	  devices' config spaces. With this option enabled, the write doesn't
	  follow through, but the Option ROM is allowed to go on.
	  This can create issues such as hanging Option ROMs (if it depends on
	  that other register changing to the written value), so test for
	  impact before using this option.

config YABEL_VIRTMEM_LOCATION
	prompt "Location of YABEL's virtual memory"
	hex
	depends on PCI_OPTION_ROM_RUN_YABEL
	default 0x1000000
	help
	  YABEL requires 1MB memory for its CPU emulation. This memory is
	  normally located at 16MB.

config YABEL_DIRECTHW
	prompt "Direct hardware access"
	bool
	depends on PCI_OPTION_ROM_RUN_YABEL && ARCH_X86
	help
	  YABEL consists of two parts: It uses x86emu for the CPU emulation and
	  additionally provides a PC system emulation that filters bad device
	  and memory access (such as PCI config space access to other devices
	  than the initialized one).

	  When choosing this option, x86emu will pass through all hardware
	  accesses to memory and I/O devices to the underlying memory and I/O
	  addresses. While this option prevents Option ROMs from doing dirty
	  tricks with the CPU (such as installing SMM modules or hypervisors),
	  they can still access all devices in the system.
	  Enable this option for a good compromise between security and speed.

config MULTIPLE_VGA_ADAPTERS
	bool
	default n

config SMBUS_HAS_AUX_CHANNELS
	bool
	default n

config SPD_CACHE
	bool
	default n

config PCI
	bool
	default n

config HYPERTRANSPORT_PLUGIN_SUPPORT
	bool
	depends on PCI
	default n

config PCIX_PLUGIN_SUPPORT
	bool
	depends on PCI
	default y

config PCIEXP_PLUGIN_SUPPORT
	bool
	depends on PCI
	default y

config CARDBUS_PLUGIN_SUPPORT
	bool
	depends on PCI
	default y

config AZALIA_PLUGIN_SUPPORT
	bool
	depends on PCI
	default n

config PCIEXP_COMMON_CLOCK
	prompt "Enable PCIe Common Clock"
	bool
	depends on PCIEXP_PLUGIN_SUPPORT
	default n
	help
	  Detect and enable Common Clock on PCIe links.

config PCIEXP_ASPM
	prompt "Enable PCIe ASPM"
	bool
	depends on PCIEXP_PLUGIN_SUPPORT
	default n
	help
	  Detect and enable ASPM on PCIe links.

config PCIEXP_CLK_PM
	prompt "Enable PCIe Clock Power Management"
	bool
	depends on PCIEXP_PLUGIN_SUPPORT
	default n
	help
	  Detect and enable Clock Power Management on PCIe.

config EARLY_PCI_BRIDGE
	bool "Early PCI bridge"
	depends on PCI
	default n
	help
	  While coreboot is executing code from ROM, the coreboot resource
	  allocator has not been running yet. Hence PCI devices living behind
	  a bridge are not yet visible to the system.

	  This option enables static configuration for a single pre-defined
	  PCI bridge function on bus 0.

config PCIEXP_L1_SUB_STATE
	prompt "Enable PCIe ASPM L1 SubState"
	bool
	depends on PCIEXP_PLUGIN_SUPPORT && MMCONF_SUPPORT
	default n
	help
	  Detect and enable ASPM on PCIe links.

if EARLY_PCI_BRIDGE

config EARLY_PCI_BRIDGE_DEVICE
	hex "bridge device"
	default 0x0

config EARLY_PCI_BRIDGE_FUNCTION
	hex "bridge function"
	default 0x0

config EARLY_PCI_MMIO_BASE
	hex "MMIO window base"
	default 0x0

endif # EARLY_PCI_BRIDGE

config SUBSYSTEM_VENDOR_ID
	hex "Override PCI Subsystem Vendor ID"
	depends on PCI
	default "0x0000"
	help
	  This config option will override the devicetree settings for
	  PCI Subsystem Vendor ID.

config SUBSYSTEM_DEVICE_ID
	hex "Override PCI Subsystem Device ID"
	depends on PCI
	default "0x0000"
	help
	  This config option will override the devicetree settings for
	  PCI Subsystem Device ID.

config VGA_BIOS
	bool "Add a VGA BIOS image"
	depends on ARCH_X86
	help
	  Select this option if you have a VGA BIOS image that you would
	  like to add to your ROM.

	  You will be able to specify the location and file name of the
	  image later.

config VGA_BIOS_FILE
	string "VGA BIOS path and filename"
	depends on VGA_BIOS
	default "vgabios.bin"
	help
	  The path and filename of the file to use as VGA BIOS.

config VGA_BIOS_ID
	string "VGA device PCI IDs"
	depends on VGA_BIOS
	default "1106,3230"
	help
	  The comma-separated PCI vendor and device ID that would associate
	  your VGA BIOS to your video card.

	  Example: 1106,3230

	  In the above example 1106 is the PCI vendor ID (in hex, but without
	  the "0x" prefix) and 3230 specifies the PCI device ID of the
	  video card (also in hex, without "0x" prefix).

	  Under GNU/Linux you can run `lspci -nn` to list the IDs of your PCI devices.

config INTEL_MBI
	bool "Add an MBI image"
	depends on NORTHBRIDGE_INTEL_I82830
	help
	  Select this option if you have an Intel MBI image that you would
	  like to add to your ROM.

	  You will be able to specify the location and file name of the
	  image later.

config MBI_FILE
	string "Intel MBI path and filename"
	depends on INTEL_MBI
	default "mbi.bin"
	help
	  The path and filename of the file to use as VGA BIOS.

config SOFTWARE_I2C
	bool "Enable I2C controller emulation in software"
	default n
	help
	  This config option will enable code to override the i2c_transfer
	  routine with a (simple) software emulation of the protocol. This may
	  be useful for debugging or on platforms where a driver for the real
	  I2C controller is not (yet) available. The platform code needs to
	  provide bindings to manually toggle I2C lines.

endmenu

menu "Display"
	depends on PCI_OPTION_ROM_RUN_YABEL || PCI_OPTION_ROM_RUN_REALMODE || MAINBOARD_DO_NATIVE_VGA_INIT

config FRAMEBUFFER_SET_VESA_MODE
	prompt "Set framebuffer graphics resolution"
	bool
	depends on PCI_OPTION_ROM_RUN_YABEL || PCI_OPTION_ROM_RUN_REALMODE
	help
	  Set VESA/native framebuffer mode (needed for bootsplash and graphical framebuffer console)

choice
	prompt "framebuffer graphics resolution"
	default FRAMEBUFFER_VESA_MODE_117
	depends on FRAMEBUFFER_SET_VESA_MODE
	help
	  This option sets the resolution used for the coreboot framebuffer (and
	  bootsplash screen).

config FRAMEBUFFER_VESA_MODE_100
	bool "640x400 256-color"

config FRAMEBUFFER_VESA_MODE_101
	bool "640x480 256-color"

config FRAMEBUFFER_VESA_MODE_102
	bool "800x600 16-color"

config FRAMEBUFFER_VESA_MODE_103
	bool "800x600 256-color"

config FRAMEBUFFER_VESA_MODE_104
	bool "1024x768 16-color"

config FRAMEBUFFER_VESA_MODE_105
	bool "1024x768 256-color"

config FRAMEBUFFER_VESA_MODE_106
	bool "1280x1024 16-color"

config FRAMEBUFFER_VESA_MODE_107
	bool "1280x1024 256-color"

config FRAMEBUFFER_VESA_MODE_108
	bool "80x60 text"

config FRAMEBUFFER_VESA_MODE_109
	bool "132x25 text"

config FRAMEBUFFER_VESA_MODE_10A
	bool "132x43 text"

config FRAMEBUFFER_VESA_MODE_10B
	bool "132x50 text"

config FRAMEBUFFER_VESA_MODE_10C
	bool "132x60 text"

config FRAMEBUFFER_VESA_MODE_10D
	bool "320x200 32k-color (1:5:5:5)"

config FRAMEBUFFER_VESA_MODE_10E
	bool "320x200 64k-color (5:6:5)"

config FRAMEBUFFER_VESA_MODE_10F
	bool "320x200 16.8M-color (8:8:8)"

config FRAMEBUFFER_VESA_MODE_110
	bool "640x480 32k-color (1:5:5:5)"

config FRAMEBUFFER_VESA_MODE_111
	bool "640x480 64k-color (5:6:5)"

config FRAMEBUFFER_VESA_MODE_112
	bool "640x480 16.8M-color (8:8:8)"

config FRAMEBUFFER_VESA_MODE_113
	bool "800x600 32k-color (1:5:5:5)"

config FRAMEBUFFER_VESA_MODE_114
	bool "800x600 64k-color (5:6:5)"

config FRAMEBUFFER_VESA_MODE_115
	bool "800x600 16.8M-color (8:8:8)"

config FRAMEBUFFER_VESA_MODE_116
	bool "1024x768 32k-color (1:5:5:5)"

config FRAMEBUFFER_VESA_MODE_117
	bool "1024x768 64k-color (5:6:5)"

config FRAMEBUFFER_VESA_MODE_118
	bool "1024x768 16.8M-color (8:8:8)"

config FRAMEBUFFER_VESA_MODE_119
	bool "1280x1024 32k-color (1:5:5:5)"

config FRAMEBUFFER_VESA_MODE_11A
	bool "1280x1024 64k-color (5:6:5)"

config FRAMEBUFFER_VESA_MODE_11B
	bool "1280x1024 16.8M-color (8:8:8)"

config FRAMEBUFFER_VESA_MODE_USER
	bool "Manually select VESA mode"
	depends on !MAINBOARD_DO_NATIVE_VGA_INIT

endchoice

# Map the config names to an integer (KB).
config FRAMEBUFFER_VESA_MODE
	prompt "VESA mode" if FRAMEBUFFER_VESA_MODE_USER
	hex
	default 0x100 if FRAMEBUFFER_VESA_MODE_100
	default 0x101 if FRAMEBUFFER_VESA_MODE_101
	default 0x102 if FRAMEBUFFER_VESA_MODE_102
	default 0x103 if FRAMEBUFFER_VESA_MODE_103
	default 0x104 if FRAMEBUFFER_VESA_MODE_104
	default 0x105 if FRAMEBUFFER_VESA_MODE_105
	default 0x106 if FRAMEBUFFER_VESA_MODE_106
	default 0x107 if FRAMEBUFFER_VESA_MODE_107
	default 0x108 if FRAMEBUFFER_VESA_MODE_108
	default 0x109 if FRAMEBUFFER_VESA_MODE_109
	default 0x10A if FRAMEBUFFER_VESA_MODE_10A
	default 0x10B if FRAMEBUFFER_VESA_MODE_10B
	default 0x10C if FRAMEBUFFER_VESA_MODE_10C
	default 0x10D if FRAMEBUFFER_VESA_MODE_10D
	default 0x10E if FRAMEBUFFER_VESA_MODE_10E
	default 0x10F if FRAMEBUFFER_VESA_MODE_10F
	default 0x110 if FRAMEBUFFER_VESA_MODE_110
	default 0x111 if FRAMEBUFFER_VESA_MODE_111
	default 0x112 if FRAMEBUFFER_VESA_MODE_112
	default 0x113 if FRAMEBUFFER_VESA_MODE_113
	default 0x114 if FRAMEBUFFER_VESA_MODE_114
	default 0x115 if FRAMEBUFFER_VESA_MODE_115
	default 0x116 if FRAMEBUFFER_VESA_MODE_116
	default 0x117 if FRAMEBUFFER_VESA_MODE_117
	default 0x118 if FRAMEBUFFER_VESA_MODE_118
	default 0x119 if FRAMEBUFFER_VESA_MODE_119
	default 0x11A if FRAMEBUFFER_VESA_MODE_11A
	default 0x11B if FRAMEBUFFER_VESA_MODE_11B
	default 0x117 if FRAMEBUFFER_VESA_MODE_USER

config FRAMEBUFFER_KEEP_VESA_MODE
	prompt "Keep VESA framebuffer"
	bool
	depends on PCI_OPTION_ROM_RUN_YABEL || PCI_OPTION_ROM_RUN_REALMODE || (MAINBOARD_HAS_NATIVE_VGA_INIT_TEXTMODECFG && MAINBOARD_DO_NATIVE_VGA_INIT)
	help
	  This option keeps the framebuffer mode set after coreboot finishes
	  execution. If this option is enabled, coreboot will pass a
	  framebuffer entry in its coreboot table and the payload will need a
	  framebuffer driver. If this option is disabled, coreboot will switch
	  back to text mode before handing control to a payload.

config BOOTSPLASH
	prompt "Show graphical bootsplash"
	bool
	depends on FRAMEBUFFER_SET_VESA_MODE
	help
	  This option shows a graphical bootsplash screen. The graphics are
	  loaded from the CBFS file bootsplash.jpg.

	  You can either specify the location and file name of the
	  image in the 'General' section or add it manually to CBFS, using,
	  for example, cbfstool.

endmenu

menu "Generic Drivers"
config DRIVERS_AS3722_RTC
	bool "AS3722 RTC support"
	default n
	select RTC

config DRIVERS_AS3722_RTC_BUS
	int "AS3722 RTC bus"
	depends on DRIVERS_AS3722_RTC
	default 0

config DRIVERS_AS3722_RTC_ADDR
	hex "AS3722 RTC chip address"
	depends on DRIVERS_AS3722_RTC
	default 0x00
config DRIVER_XPOWERS_AXP209
	bool
	default n
	help
	  X-Powers AXP902 Power Management Unit

if DRIVER_XPOWERS_AXP209

config DRIVER_XPOWERS_AXP209_BOOTBLOCK
	bool
	default n
	help
	  Make AXP209 functionality available in he bootblock.

endif # DRIVER_XPOWERS_AXP209
##
## This file is part of the coreboot project.
##
## Copyright (C) 2012 The Chromium OS Authors.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config SPI_FLASH
	bool
	default n
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash.

if SPI_FLASH

config SPI_ATOMIC_SEQUENCING
	bool
	default y if ARCH_X86
	default n if !ARCH_X86
	help
	  Select this option if the SPI controller uses "atomic sequencing."
	  Atomic sequencing is when the sequence of commands is pre-programmed
	  in the SPI controller. Hardware manages the transaction instead of
	  software. This is common on x86 platforms.

config SPI_FLASH_MEMORY_MAPPED
	bool
	default y if ARCH_X86
	default n if !ARCH_X86
	help
	  Inform system if SPI is memory-mapped or not.

config SPI_FLASH_SMM
	bool "SPI flash driver support in SMM"
	default n
	depends on HAVE_SMI_HANDLER
	help
	  Select this option if you want SPI flash support in SMM.

config SPI_FLASH_NO_FAST_READ
	bool "Disable Fast Read command"
	default n
	help
	  Select this option if your setup requires to avoid "fast read"s
	  from the SPI flash parts.

config SPI_FLASH_ADESTO
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by Adesto Technologies.

config SPI_FLASH_AMIC
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by AMIC.

config SPI_FLASH_ATMEL
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by Atmel.

config SPI_FLASH_EON
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by EON.

config SPI_FLASH_GIGADEVICE
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by Gigadevice.

config SPI_FLASH_MACRONIX
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by Macronix.

config SPI_FLASH_SPANSION
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by Spansion.

config SPI_FLASH_SST
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by SST.

config SPI_FLASH_STMICRO
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by ST MICRO.

config SPI_FLASH_WINBOND
	bool
	default y if !COMMON_CBFS_SPI_WRAPPER
	help
	  Select this option if your chipset driver needs to store certain
	  data in the SPI flash and your SPI flash is made by Winbond.

config SPI_FLASH_FAST_READ_DUAL_OUTPUT_3B
	bool
	default n
	depends on SPI_FLASH
	help
	  Select this option if your SPI flash supports the fast read dual-
	  output command (opcode 0x3b) where the opcode and address are sent
	  to the chip on MOSI and data is received on both MOSI and MISO.

endif # SPI_FLASH

config HAVE_SPI_CONSOLE_SUPPORT
	def_bool n

##
## This file is part of the coreboot project.
##
## Copyright (C) 2012 The Chromium OS Authors.  All rights reserved.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config ELOG
	depends on SPI_FLASH
	bool "Support for flash based event log"
	default n
	help
	  Enable support for flash based event logging.

if ELOG

config ELOG_DEBUG
	bool "Enable debug output for event logging"
	default n

config ELOG_FLASH_BASE
	hex "Event log offset into flash"
	default 0
	help
	  Offset into the flash chip for the ELOG block.
	  This should be allocated in the FMAP.

config ELOG_AREA_SIZE
	hex "Size of Event Log area in flash"
	default 0x1000
	help
	  This should be a multiple of flash block size.

	  Default is 4K.

config ELOG_CBMEM
	bool "Store a copy of ELOG in CBMEM"
	default n
	help
	 This option will have ELOG store a copy of the flash event log
	 in a CBMEM region and export that address in SMBIOS to the OS.
	 This is useful if the ELOG location is not in memory mapped flash,
	 but it means that events added at runtime via the SMI handler
	 will not be reflected in the CBMEM copy of the log.

endif

config ELOG_GSMI
	depends on ELOG && SPI_FLASH_SMM && SMM_TSEG
	bool "SMI interface to write and clear event log"
	default n
	help
	  This interface is compatible with the linux kernel driver
	  available with CONFIG_GOOGLE_GSMI and can be used to write
	  kernel reset/shutdown messages to the event log.

config ELOG_BOOT_COUNT
	depends on ELOG
	bool "Maintain a monotonic boot number in CMOS"
	default n
	help
	  Store a monotonic boot number in CMOS and provide an interface
	  to read the current value and increment the counter.  This boot
	  counter will be logged as part of the System Boot event.

config ELOG_BOOT_COUNT_CMOS_OFFSET
	depends on ELOG && ELOG_BOOT_COUNT && !USE_OPTION_TABLE
	int "Offset in CMOS to store the boot count"
	default 0
	help
	  This value must be greater than 16 bytes so as not to interfere
	  with the standard RTC region.  Requires 8 bytes.
	# Use "select HAVE_USBDEBUG" on southbridges which have Debug Port code.
config HAVE_USBDEBUG
	bool
	default y if HAVE_USBDEBUG_OPTIONS
	default n

# Use "select HAVE_USBDEBUG_OPTIONS" on southbridges with multiple
# EHCI controllers or multiple ports with Debug Port capability
config HAVE_USBDEBUG_OPTIONS
	def_bool n

config USBDEBUG
	bool "USB 2.0 EHCI debug dongle support"
	default n
	depends on HAVE_USBDEBUG
	help
	  This option allows you to use a so-called USB EHCI Debug device
	  (such as the Ajays NET20DC, AMIDebug RX, or a system using the
	  Linux "EHCI Debug Device gadget" driver found in recent kernel)
	  to retrieve the coreboot debug messages (instead, or in addition
	  to, a serial port).

	  This feature is NOT supported on all chipsets in coreboot!

	  It also requires a USB2 controller which supports the EHCI
	  Debug Port capability.

	  See http://www.coreboot.org/EHCI_Debug_Port for an up-to-date list
	  of supported controllers.

	  If unsure, say N.

if USBDEBUG

config USBDEBUG_IN_ROMSTAGE
	bool "Enable early (pre-RAM) usbdebug"
	default y
	depends on EARLY_CBMEM_INIT
	help
	   Configuring USB controllers in system-agent binary may cause
	   problems to usbdebug. Disabling this option delays usbdebug to
	   be setup on entry to ramstage.

	   If unsure, say Y.

config USBDEBUG_HCD_INDEX
	int
	default 0
	prompt "Index for EHCI controller to use with usbdebug" if HAVE_USBDEBUG_OPTIONS
	help
	   Some boards have multiple EHCI controllers with possibly only
	   one having the Debug Port capability on an external USB port.

	   Mapping of this index to PCI device functions is southbridge
	   specific and mainboard level Kconfig should already provide
	   a working default value here.

config USBDEBUG_DEFAULT_PORT
	int
	default 0
	prompt "Default USB port to use as Debug Port" if HAVE_USBDEBUG_OPTIONS
	help
	  Selects which physical USB port usbdebug dongle is connected to.
	  Setting of 0 means to scan possible ports starting from 1.

	  Intel platforms have hardwired the debug port location and this
	  setting makes no difference there.

	  Hence, if you select the correct port here, you can speed up
	  your boot time. Which USB port number refers to which actual
	  port on your mainboard (potentially also USB pin headers on
	  your mainboard) is highly board-specific, and you'll likely
	  have to find out by trial-and-error.

choice
	prompt "Type of dongle"
	default USBDEBUG_DONGLE_STD

config USBDEBUG_DONGLE_STD
	bool "Net20DC or compatible"

config USBDEBUG_DONGLE_BEAGLEBONE
	bool "BeagleBone"
	help
	  Use this to configure the USB hub on BeagleBone board.

config USBDEBUG_DONGLE_BEAGLEBONE_BLACK
	bool "BeagleBone Black"
	help
	  Use this with BeagleBone Black.

config USBDEBUG_DONGLE_FTDI_FT232H
	bool "FTDI FT232H UART"
	help
	  Use this with FT232H usb-to-uart. Configuration is hard-coded
	  to use 115200, 8n1, no flow control.

endchoice

config USBDEBUG_OPTIONAL_HUB_PORT
	int
	default 2 if USBDEBUG_DONGLE_BEAGLEBONE
	default 0

endif # USBDEBUG
config IPMI_KCS
	bool
	default n
config DRIVERS_LENOVO_WACOM
	bool
	default n

if DRIVERS_LENOVO_WACOM

choice
	prompt "Digitizer"
	default DIGITIZER_AUTODETECT

config DIGITIZER_AUTODETECT
	bool "Autodetect"
	help
	  The presence of digitizer is inferred from model number stored in
	  AT24RF chip.

config DIGITIZER_PRESENT
	bool "Present"
	help
	  The digitizer is assumed to be present.

config DIGITIZER_ABSENT
	bool "Absent"
	help
	  The digitizer is assumed to be absent.

endchoice

endif
config GIC
	def_bool n
	help
	  This option enables GIC support, the ARM generic interrupt controller.
config DRIVERS_UART
	bool
	default y if CONSOLE_SERIAL
	default n

config DRIVERS_UART_8250IO
	bool "Serial port on SuperIO"
	depends on !ARCH_ARM
	default n if NO_UART_ON_SUPERIO
	default y if ARCH_X86

# Select this for mainboard without SuperIO serial port.
config NO_UART_ON_SUPERIO
	def_bool n

config DRIVERS_UART_8250MEM
	bool
	default n

config DRIVERS_UART_8250MEM_32
	bool
	default n
	select DRIVERS_UART_8250MEM

config HAVE_UART_SPECIAL
	bool
	default n

config DRIVERS_UART_OXPCIE
	bool "Oxford OXPCIe952"
	default n
	depends on PCI
	select DRIVERS_UART_8250MEM
	select EARLY_PCI_BRIDGE
	help
	  Support for Oxford OXPCIe952 serial port PCIe cards.
	  Currently only devices with the vendor ID 0x1415 and device ID
	  0xc158 or 0xc11b will work.

config DRIVERS_UART_PL011
	bool
	default n
	select HAVE_UART_SPECIAL
config DRIVERS_DEC_21143
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config PLATFORM_USES_FSP1_1
	bool
	select UEFI_2_4_BINDING
	help
	  Does the code require the Intel Firmware Support Package?

if PLATFORM_USES_FSP1_1

comment "Intel FSP 1.1"

config HAVE_FSP_BIN
	bool "Should the Intel FSP binary be added to the flash image"
	help
	  Select this option to add an Intel FSP binary to
	  the resulting coreboot image.

	  Note: Without this binary, coreboot builds relying on the FSP
	  will not boot

config CPU_MICROCODE_CBFS_LEN
	hex "Microcode update region length in bytes"
	default 0
	help
	  The length in bytes of the microcode update region.

config CPU_MICROCODE_CBFS_LOC
	hex "Microcode update base address in CBFS"
	default 0
	help
	  The location (base address) in CBFS that contains the microcode update
	  binary.

config FSP_FILE
	string "Intel FSP binary path and filename"
	help
	  The path and filename of the Intel FSP binary for this platform.

config FSP_IMAGE_ID_STRING
	string "8 byte platform string identifying the FSP platform"
	default "$XXXFSP$"
	help
	  8 ASCII character byte signature string that will help match the FSP
	  binary to a supported hardware configuration.

config FSP_LOC
	hex "Intel FSP Binary location in CBFS"
	default 0xffee0000
	help
	  The location in CBFS that the FSP is located. This must match the
	  value that is set in the FSP binary.  If the FSP needs to be moved,
	  rebase the FSP with Intel's BCT (tool).

config DISPLAY_FAST_BOOT_DATA
	bool "Display fast boot data"
	default n

config DISPLAY_HOBS
	bool "Display hand-off-blocks (HOBs)"
	default n

config DISPLAY_VBT
	bool "Display Video BIOS Table (VBT)"
	default n

config DISPLAY_FSP_ENTRY_POINTS
	bool "Display FSP entry points"
	default n

config DISPLAY_UPD_DATA
	bool "Display UPD data"
	default n
	help
	  Display the user specified product data prior to memory
	  initialization.

config FSP_USES_UPD
	bool
	default n
	help
	  If this FSP uses UPD/VPD data regions, select this in the chipset
	  Kconfig.

config GOP_SUPPORT
	bool "Enable GOP support"
	default n

config ROMSTAGE_RAM_STACK_SIZE
	hex "Size of the romstage RAM stack in bytes"
	default 0x5000

config USE_GENERIC_FSP_CAR_INC
	bool
	default n
	help
	  The chipset can select this to use a generic cache_as_ram.inc file
	  that should be good for all FSP based platforms.

config VBT_FILE
	string "GOP Video BIOS table binary path"
	depends on GOP_SUPPORT
	default "3rdparty/blobs/mainboard/$(MAINBOARDDIR)/vbt.bin"

endif #PLATFORM_USES_FSP1_1
config DRIVER_INTEL_I210
	bool
	default n
##
## This file is part of the coreboot project.
##
## Copyright (C) 2014 Sage Electronic Engineering, LLC.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

if PLATFORM_USES_FSP1_0

comment "Intel FSP"

config HAVE_FSP_BIN
	bool "Use Intel Firmware Support Package"
	help
	  Select this option to add an Intel FSP binary to
	  the resulting coreboot image.

	  Note: Without this binary, coreboot builds relying on the FSP
	  will not boot

config DCACHE_RAM_BASE
	hex
	default 0xfef00000

config DCACHE_RAM_SIZE
	hex
	default 0x4000

if HAVE_FSP_BIN

config FSP_FILE
	string "Intel FSP binary path and filename"
	help
	  The path and filename of the Intel FSP binary for this platform.

endif #HAVE_FSP_BIN

config FSP_LOC
	hex "Intel FSP Binary location in CBFS"
	help
	  The location in CBFS that the FSP is located. This must match the
	  value that is set in the FSP binary.  If the FSP needs to be moved,
	  rebase the FSP with Intel's BCT (tool).

config ENABLE_FSP_FAST_BOOT
	bool "Enable Fast Boot"
	select ENABLE_MRC_CACHE
	default n
	help
	  Enabling this feature will force the MRC data to be cached in NV
	  storage to be used for speeding up boot time on future reboots
	  and/or power cycles.

config ENABLE_MRC_CACHE
	bool
	default y if HAVE_ACPI_RESUME
	default n
	help
	  Enabling this feature will cause MRC data to be cached in NV storage.
	  This can either be used for fast boot, or just because the FSP wants
	  it to be saved.

config MRC_CACHE_FMAP
	bool "Use MRC Cache in FMAP"
	depends on ENABLE_MRC_CACHE
	default n
	help
	  Use the region "RW_MRC_CACHE" in FMAP instead of "mrc.cache" in CBFS.
	  You must define a region in your FMAP named "RW_MRC_CACHE".

config MRC_CACHE_SIZE
	hex "Fast Boot Data Cache Size"
	default 0x10000
	depends on ENABLE_MRC_CACHE
	depends on !MRC_CACHE_FMAP
	help
	  This is the amount of space in NV storage that is reserved for the
	  fast boot data cache storage.

	  WARNING: Because this area will be erased and re-written, the size
	  should be a full sector of the flash ROM chip and nothing else should
	  be included in CBFS in any sector that the fast boot cache data is in.

config VIRTUAL_ROM_SIZE
	hex "Virtual ROM Size"
	default ROM_SIZE
	depends on ENABLE_MRC_CACHE
	help
	  This is used to calculate the offset of the MRC data cache in NV
	  Storage for fast boot.  If in doubt, leave this set to the default
	  which sets the virtual size equal to the ROM size.

	  Example: Cougar Canyon 2 has two 8 MB SPI ROMs.  When the SPI ROMs are
	  loaded with a 4 MB coreboot image, the virtual ROM size is 8 MB.  When
	  the SPI ROMs are loaded with an 8 MB coreboot image, the virtual ROM
	  size is 16 MB.

config CACHE_ROM_SIZE_OVERRIDE
	hex "Cache ROM Size"
	default CBFS_SIZE
	help
	  This is the size of the cachable area that is passed into the FSP in
	  the early initialization.  Typically this should be the size of the CBFS
	  area, but the size must be a power of 2 whereas the CBFS size does not
	  have this limitation.

config USE_GENERIC_FSP_CAR_INC
	bool
	default n
	help
	  The chipset can select this to use a generic cache_as_ram.inc file
	  that should be good for all FSP based platforms.

config FSP_USES_UPD
	bool
	default n
	help
	  If this FSP uses UPD/VPD data regions, select this in the chipset Kconfig.
endif #PLATFORM_USES_FSP1_0
config PLATFORM_USES_FSP2_0
	bool
	help
	  Include FSP 2.0 wrappers and functionality


##
## This file is part of the coreboot project.
##
## Copyright 2013 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config INTEL_DP
	bool
	default n
	help
	  helper functions for intel display port operations

config INTEL_DDI
	bool
	default n
	help
	  helper functions for intel DDI operations

config INTEL_EDID
	bool
	default n

config INTEL_INT15
	bool
	default n

config INTEL_GMA_ACPI
	bool
	default n
config DRIVER_XPOWERS_AXP209
	bool
	default n
	help
	  X-Powers AXP902 Power Management Unit

if DRIVER_XPOWERS_AXP209

config DRIVER_XPOWERS_AXP209_BOOTBLOCK
	bool
	default n
	help
	  Make AXP209 functionality available in he bootblock.

endif # DRIVER_XPOWERS_AXP209
config DRIVERS_ICS_954309
	bool
config DRIVERS_XGI_Z9S
	bool

if DRIVERS_XGI_Z9S

config DEVICE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select DRIVERS_XGI_Z79_COMMON

config NATIVE_VGA_INIT_USE_EDID
	bool
	default n

endif # DRIVERS_XGI_Z9S
config DRIVERS_XGI_Z79_COMMON
	bool

if !MAINBOARD_DO_NATIVE_VGA_INIT

config DEVICE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select VGA

endif # MAINBOARD_DO_NATIVE_VGA_INIT
config DRIVERS_RICOH_RCE822
	bool
	default n
config DRIVERS_GENERIC_IOAPIC
	bool
config DRIVERS_GENERIC_GENERIC
	bool
##
## This file is part of the coreboot project.
##
## Copyright 2014 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config DRIVERS_TI_TPS65913
	bool "TI TPS65913 support"
	default n

config DRIVERS_TI_TPS65913_RTC
	bool "TI TPS65913 RTC support"
	default n
	select DRIVERS_TI_TPS65913
	select RTC

config DRIVERS_TI_TPS65913_RTC_BUS
	int "TI TPS65913 RTC bus"
	depends on DRIVERS_TI_TPS65913_RTC
	default 0

config DRIVERS_TI_TPS65913_RTC_ADDR
	hex "TI TPS65913 RTC chip address"
	depends on DRIVERS_TI_TPS65913_RTC
	default 0x00
##
## This file is part of the coreboot project.
##
## Copyright (C) 2012 The ChromiumOS Authors
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config DRIVER_TI_TPS65090
	bool
	default n
	help
	  TI TPS65090
config DRIVERS_ATI_RAGEXL
	bool
##
## This file is part of the coreboot project.
##
## Copyright (C) 2012 The ChromiumOS Authors
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config DRIVER_MAXIM_MAX77686
	bool
	default n
	help
	  Maxim MAX77686 power regulator
##
## This file is part of the coreboot project.
##
## Copyright 2015 MediaTek Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config DRIVER_PARADE_PS8640
	bool
	default n
	help
	  Parade PS8640 MIPI DSI to eDP Converter
##
## This file is part of the coreboot project.
##
## Copyright (C) 2013 Google Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

config DRIVER_PARADE_PS8625
	bool
	default n
	help
	  Parade ps8625 display port to lvds bridge
config DRIVERS_EMULATION_QEMU_BOCHS
	bool "bochs dispi interface vga driver"
	default y
	depends on BOARD_EMULATION_QEMU_X86
	depends on MAINBOARD_DO_NATIVE_VGA_INIT
	select VGA
	help
	   VGA driver for qemu emulated vga cards supporting
	   the bochs dispi interface.  This includes
	   standard vga, vmware svga and qxl.  The default
	   vga (cirrus) is *not* supported, so you have to
	   pick another one explicitly via 'qemu -vga $card'.

config DRIVERS_EMULATION_QEMU_BOCHS_XRES
	int "bochs vga xres"
	default 800
	depends on FRAMEBUFFER_KEEP_VESA_MODE
	depends on DRIVERS_EMULATION_QEMU_BOCHS

config DRIVERS_EMULATION_QEMU_BOCHS_YRES
	int "bochs vga yres"
	default 600
	depends on FRAMEBUFFER_KEEP_VESA_MODE
	depends on DRIVERS_EMULATION_QEMU_BOCHS
config DRIVERS_SIL_3114
	bool "Silicon Image SIL3114"
	default n
	depends on PCI
	help
	It sets PCI class to IDE compatible native mode, allowing
	SeaBIOS, FILO etc... to boot from it.
config DRIVERS_I2C_ADM1027
	bool
config DRIVERS_I2C_WW_RING
	bool
config I2C_TPM
	bool "I2C TPM"
	depends on !PC80_SYSTEM # for now

config DRIVER_TPM_I2C_BUS
	hex "I2C TPM chip bus"
	default 9 # FIXME, workaround for Kconfig BS
	depends on I2C_TPM

config DRIVER_TPM_I2C_ADDR
	hex "I2C TPM chip address"
	default 2 # FIXME, workaround for Kconfig BS
	depends on I2C_TPM
if VENDOR_LENOVO

config SMBIOS_PROVIDED_BY_MOBO
	bool
	default y

endif
config DRIVERS_I2C_I2CMUX
	bool
config DRIVERS_I2C_W83793
	bool
config DRIVERS_I2C_RTD2132
	bool
	default n
	help
	  Enable support for Realtek RTD2132 DisplayPort to LVDS bridge chip.
config DRIVERS_I2C_I2CMUX2
	bool
config DRIVERS_I2C_W83795
	bool
config DRIVERS_I2C_LM63
	bool
config DRIVERS_I2C_ADM1026
	bool
config DRIVERS_I2C_ADT7463
	bool
# Might be removed (alongside with the PS/2 init code) once payloads
# reliably support PS/2 init themselves.

config DRIVERS_PS2_KEYBOARD
	bool "PS/2 keyboard init"
	default n
	depends on PC80_SYSTEM
	help
	  Enable this option to initialize PS/2 keyboards found connected
	  to the PS/2 port.

	  Some payloads (eg, filo) require this option.  Other payloads
	  (eg, GRUB 2, SeaBIOS, Linux) do not require it.
	  Initializing a PS/2 keyboard can take several hundred milliseconds.

	  If you know you will only use a payload which does not require
	  this option, then you can say N here to speed up boot time.
	  Otherwise say Y.
config MAINBOARD_HAS_LPC_TPM
	bool
	default n
	help
	  Board has TPM support

config LPC_TPM
	bool "Enable TPM support"
	depends on MAINBOARD_HAS_LPC_TPM
	default n
	help
	  Enable this option to enable LPC TPM support in coreboot.

	  If unsure, say N.

config TPM_TIS_BASE_ADDRESS
	hex
	default 0xfed40000
	depends on LPC_TPM
	help
	  This can be used to adjust the TPM memory base address.
	  The default is specified by the TCG PC Client Specific TPM
	  Interface Specification 1.2 and should not be changed unless
	  the TPM being used does not conform to TPM TIS 1.2.

config TPM_PIRQ
	hex
	default 0
	depends on LPC_TPM
	help
	  This can be used to specify a PIRQ to use instead of SERIRQ,
	  which is needed for SPI TPM interrupt support on x86.

config TPM_INIT_FAILURE_IS_FATAL
	bool
	default n
	depends on LPC_TPM
	help
	  What to do if TPM init failed. If true, force a hard reset,
	  otherwise just log error message to console.

config SKIP_TPM_STARTUP_ON_NORMAL_BOOT
	bool
	default n
	depends on LPC_TPM
	help
	  Skip TPM init on normal boot. Useful if payload does TPM init.

config TPM_DEACTIVATE
	bool "Deactivate TPM"
	default n
	depends on LPC_TPM
	help
	  Deactivate TPM by issuing deactivate command.
config DRIVERS_MC146818
	bool
	default y if ARCH_X86
	depends on PC80_SYSTEM
config DRIVERS_ASPEED_AST_COMMON
	bool

if !MAINBOARD_DO_NATIVE_VGA_INIT

config DEVICE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select VGA

endif # MAINBOARD_DO_NATIVE_VGA_INIT
config DRIVERS_ASPEED_AST2050
	bool

if DRIVERS_ASPEED_AST2050

config DEVICE_SPECIFIC_OPTIONS # dummy
	def_bool y
	select DRIVERS_ASPEED_AST_COMMON

config NATIVE_VGA_INIT_USE_EDID
	bool
	default n

endif # DRIVERS_ASPEED_AST2050
endmenu

config RTC
	bool
	default n

config TPM
	bool
	default n
	select LPC_TPM if ARCH_X86
	select I2C_TPM if ARCH_ARM
	select I2C_TPM if ARCH_ARM64
	help
	  Enable this option to enable TPM support in coreboot.

	  If unsure, say N.

config RAMTOP
	hex
	default 0x200000
	depends on ARCH_X86

config HEAP_SIZE
	hex
	default 0x4000

config STACK_SIZE
	hex
	default 0x1000 if ARCH_X86
	default 0x0

config MAX_CPUS
	int
	default 1

config MMCONF_SUPPORT_DEFAULT
	bool
	default n

config MMCONF_SUPPORT
	bool
	default n

config BOOTMODE_STRAPS
	bool
	default n

menu "Console"

config BOOTBLOCK_CONSOLE
	bool "Enable early (bootblock) console output."
	depends on C_ENVIRONMENT_BOOTBLOCK
	default n
	help
	  Use console during the bootblock if supported

config SQUELCH_EARLY_SMP
	bool "Squelch AP CPUs from early console."
	default y
	depends on SMP
	help
	  When selected only the BSP CPU will output to early console.

	  Console drivers have unpredictable behaviour if multiple threads
	  attempt to share the same resources without a spinlock.

	  If unsure, say Y.

config CONSOLE_SERIAL
	bool "Serial port console output"
	default y
	depends on DRIVERS_UART_8250IO || DRIVERS_UART_8250MEM || HAVE_UART_SPECIAL
	help
	  Send coreboot debug output to a serial port.

	  The type of serial port driver selected based on your configuration is
	  shown on the following menu line. Supporting multiple different types
	  of UARTs in one build is not supported.

if CONSOLE_SERIAL

	comment "I/O mapped, 8250-compatible"
	depends on DRIVERS_UART_8250IO

	comment "memory mapped, 8250-compatible"
	depends on DRIVERS_UART_8250MEM

	comment "device-specific UART"
	depends on HAVE_UART_SPECIAL

config UART_FOR_CONSOLE
	int "Index for UART port to use for console"
	default 0
	help
	  Select an I/O port to use for serial console:
	    0 = 0x3f8, 1 = 0x2f8, 2 = 0x3e8, 3 = 0x2e8

# FIXME: Early programming in romstage is incorrect as we should
# program different LDN to actually change the physical port.
config TTYS0_BASE
	hex
	depends on DRIVERS_UART
	default 0x3f8 if UART_FOR_CONSOLE = 0
	default 0x2f8 if UART_FOR_CONSOLE = 1
	default 0x3e8 if UART_FOR_CONSOLE = 2
	default 0x2e8 if UART_FOR_CONSOLE = 3
	help
	  Map the COM port number to the respective I/O port.

comment "Serial port base address = 0x3f8"
depends on UART_FOR_CONSOLE = 0
comment "Serial port base address = 0x2f8"
depends on UART_FOR_CONSOLE = 1
comment "Serial port base address = 0x3e8"
depends on UART_FOR_CONSOLE = 2
comment "Serial port base address = 0x2e8"
depends on UART_FOR_CONSOLE = 3

choice
	prompt "Baud rate"
	default CONSOLE_SERIAL_115200

config CONSOLE_SERIAL_921600
	bool "921600"
	help
	  Set serial port Baud rate to 921600.
config CONSOLE_SERIAL_460800
	bool "460800"
	help
	  Set serial port Baud rate to 460800.
config CONSOLE_SERIAL_230400
	bool "230400"
	help
	  Set serial port Baud rate to 230400.
config CONSOLE_SERIAL_115200
	bool "115200"
	help
	  Set serial port Baud rate to 115200.
config CONSOLE_SERIAL_57600
	bool "57600"
	help
	  Set serial port Baud rate to 57600.
config CONSOLE_SERIAL_38400
	bool "38400"
	help
	  Set serial port Baud rate to 38400.
config CONSOLE_SERIAL_19200
	bool "19200"
	help
	  Set serial port Baud rate to 19200.
config CONSOLE_SERIAL_9600
	bool "9600"
	help
	  Set serial port Baud rate to 9600.

endchoice

#FIXME(dhendrix): Change name to SERIAL_BAUD? (Stefan sayz: yes!!)
config TTYS0_BAUD
	int
	default 921600 if CONSOLE_SERIAL_921600
	default 460800 if CONSOLE_SERIAL_460800
	default 230400 if CONSOLE_SERIAL_230400
	default 115200 if CONSOLE_SERIAL_115200
	default 57600 if CONSOLE_SERIAL_57600
	default 38400 if CONSOLE_SERIAL_38400
	default 19200 if CONSOLE_SERIAL_19200
	default 9600 if CONSOLE_SERIAL_9600
	help
	  Map the Baud rates to an integer.

# TODO: Allow user-friendly selection of settings other than 8n1.
config TTYS0_LCS
	int
	default 3
	depends on DRIVERS_UART_8250IO || DRIVERS_UART_8250MEM

endif # CONSOLE_SERIAL

config SPKMODEM
	bool "spkmodem (console on speaker) console output"
	default n
	depends on ARCH_X86
	help
	  Send coreboot debug output through speaker

config CONSOLE_USB
	bool "USB dongle console output"
	depends on USBDEBUG
	default n
	help
	  Send coreboot debug output to USB.

	  Configuration for USB hardware is under menu Generic Drivers.

# TODO: Deps?
# TODO: Improve description.
config ONBOARD_VGA_IS_PRIMARY
	bool "Use onboard VGA as primary video device"
	default n
	depends on PCI
	help
	  If not selected, the last adapter found will be used.

config CONSOLE_NE2K
	bool "Network console over NE2000 compatible Ethernet adapter"
	default n
	depends on PCI
	help
	  Send coreboot debug output to a Ethernet console, it works
	  same way as Linux netconsole, packets are received to UDP
	  port 6666 on IP/MAC specified with options bellow.
	  Use following netcat command: nc -u -l -p 6666

config CONSOLE_NE2K_DST_MAC
	depends on CONSOLE_NE2K
	string "Destination MAC address of remote system"
	default "00:13:d4:76:a2:ac"
	help
	  Type in either MAC address of logging system or MAC address
	  of the router.

config CONSOLE_NE2K_DST_IP
	depends on CONSOLE_NE2K
	string "Destination IP of logging system"
	default "10.0.1.27"
	help
	  This is IP address of the system running for example
	  netcat command to dump the packets.

config CONSOLE_NE2K_SRC_IP
	depends on CONSOLE_NE2K
	string "IP address of coreboot system"
	default "10.0.1.253"
	help
	  This is the IP of the coreboot system

config CONSOLE_NE2K_IO_PORT
	depends on CONSOLE_NE2K
	hex "NE2000 adapter fixed IO port address"
	default 0xe00
	help
	  This is the IO port address for the IO port
	  on the card, please select some non-conflicting region,
	  32 bytes of IO spaces will be used (and align on 32 bytes
	  boundary, qemu needs broader align)

config CONSOLE_CBMEM
	bool "Send console output to a CBMEM buffer"
	default y
	help
	  Enable this to save the console output in a CBMEM buffer. This would
	  allow to see coreboot console output from Linux space.

if CONSOLE_CBMEM

config CONSOLE_CBMEM_BUFFER_SIZE
	hex "Room allocated for console output in CBMEM"
	default 0x20000
	help
	  Space allocated for console output storage in CBMEM. The default
	  value (128K or 0x20000 bytes) is large enough to accommodate
	  even the BIOS_SPEW level.

config CONSOLE_CBMEM_DUMP_TO_UART
	depends on !CONSOLE_SERIAL
	bool "Dump CBMEM console on resets"
	default n
	help
	  Enable this to have CBMEM console buffer contents dumped on the
	  serial output in case serial console is disabled and the device
	  resets itself while trying to boot the payload.

endif

config CONSOLE_QEMU_DEBUGCON
	bool "QEMU debug console output"
	depends on BOARD_EMULATION_QEMU_X86
	default y
	help
	  Send coreboot debug output to QEMU's isa-debugcon device:

	  qemu-system-x86_64 \
	    -chardev file,id=debugcon,path=/dir/file.log \
	    -device isa-debugcon,iobase=0x402,chardev=debugcon

config CONSOLE_QEMU_DEBUGCON_PORT
	hex "QEMU debug console port"
	depends on CONSOLE_QEMU_DEBUGCON
	default 0x402

config SPI_CONSOLE
	bool "SPI debug console output"
	depends on HAVE_SPI_CONSOLE_SUPPORT && !DEBUG_SPI_FLASH
	help
	  Enable support for the debug console on the Dediprog EM100Pro.
	  This is currently working only in ramstage due to how the spi
	  drivers are written.

choice
	prompt "Default console log level"
	default DEFAULT_CONSOLE_LOGLEVEL_8

config DEFAULT_CONSOLE_LOGLEVEL_8
	bool "8: SPEW"
	help
	  Way too many details.
config DEFAULT_CONSOLE_LOGLEVEL_7
	bool "7: DEBUG"
	help
	  Debug-level messages.
config DEFAULT_CONSOLE_LOGLEVEL_6
	bool "6: INFO"
	help
	  Informational messages.
config DEFAULT_CONSOLE_LOGLEVEL_5
	bool "5: NOTICE"
	help
	  Normal but significant conditions.
config DEFAULT_CONSOLE_LOGLEVEL_4
	bool "4: WARNING"
	help
	  Warning conditions.
config DEFAULT_CONSOLE_LOGLEVEL_3
	bool "3: ERR"
	help
	  Error conditions.
config DEFAULT_CONSOLE_LOGLEVEL_2
	bool "2: CRIT"
	help
	  Critical conditions.
config DEFAULT_CONSOLE_LOGLEVEL_1
	bool "1: ALERT"
	help
	  Action must be taken immediately.
config DEFAULT_CONSOLE_LOGLEVEL_0
	bool "0: EMERG"
	help
	  System is unusable.

endchoice

config DEFAULT_CONSOLE_LOGLEVEL
	int
	default 0 if DEFAULT_CONSOLE_LOGLEVEL_0
	default 1 if DEFAULT_CONSOLE_LOGLEVEL_1
	default 2 if DEFAULT_CONSOLE_LOGLEVEL_2
	default 3 if DEFAULT_CONSOLE_LOGLEVEL_3
	default 4 if DEFAULT_CONSOLE_LOGLEVEL_4
	default 5 if DEFAULT_CONSOLE_LOGLEVEL_5
	default 6 if DEFAULT_CONSOLE_LOGLEVEL_6
	default 7 if DEFAULT_CONSOLE_LOGLEVEL_7
	default 8 if DEFAULT_CONSOLE_LOGLEVEL_8
	help
	  Map the log level config names to an integer.

config NO_POST
	bool "Don't show any POST codes"
	default n

config CMOS_POST
	bool "Store post codes in CMOS for debugging"
	depends on !NO_POST && PC80_SYSTEM
	default n
	help
	  If enabled, coreboot will store post codes in CMOS and switch between
	  two offsets on each boot so the last post code in the previous boot
	  can be retrieved.  This uses 3 bytes of CMOS.

config CMOS_POST_OFFSET
	hex "Offset into CMOS to store POST codes"
	depends on CMOS_POST
	default 0
	help
	  If CMOS_POST is enabled then an offset into CMOS must be provided.
	  If CONFIG_HAVE_OPTION_TABLE is enabled then it will use the value
	  defined in the mainboard option table.

config CMOS_POST_EXTRA
	bool "Store extra logging info into CMOS"
	depends on CMOS_POST
	default n
	help
	  This will enable extra logging of work that happens between post
	  codes into CMOS for debug.  This uses an additional 8 bytes of CMOS.

config CONSOLE_POST
	bool "Show POST codes on the debug console"
	depends on !NO_POST
	default n
	help
	  If enabled, coreboot will additionally print POST codes (which are
	  usually displayed using a so-called "POST card" ISA/PCI/PCI-E
	  device) on the debug console.

config POST_DEVICE
	bool "Send POST codes to an external device"
	depends on !NO_POST
	default y

choice
	prompt "Device to send POST codes to"
	depends on POST_DEVICE
	default POST_DEVICE_NONE

config POST_DEVICE_NONE
	bool "None"
config POST_DEVICE_LPC
	bool "LPC"
	depends on PCI
config POST_DEVICE_PCI_PCIE
	bool "PCI/PCIe"
	depends on PCI
endchoice

config POST_IO
	bool "Send POST codes to an IO port"
	depends on PC80_SYSTEM && !NO_POST
	default y
	help
	  If enabled, POST codes will be written to an IO port.

config POST_IO_PORT
	depends on POST_IO
	hex "IO port for POST codes"
	default 0x80
	help
	  POST codes on x86 are typically written to the LPC bus on port
	  0x80. However, it may be desirable to change the port number
	  depending on the presence of coprocessors/microcontrollers or if the
	  platform does not support IO in the conventional x86 manner.

config NO_EARLY_BOOTBLOCK_POSTCODES
	def_bool n
	help
	  Some chipsets require that the routing for the port 80h POST
	  code be configured before any POST codes are sent out.
	  This can be done in the boot block, but there are a couple of
	  POST codes that go out before the chipset's bootblock initialization
	  can happen.  This option suppresses those POST codes.

endmenu

config HAVE_ACPI_RESUME
	bool
	default n

config RESUME_PATH_SAME_AS_BOOT
	bool
	default y if ARCH_X86
	depends on HAVE_ACPI_RESUME
	help
	  This option indicates that when a system resumes it takes the
	  same path as a regular boot. e.g. an x86 system runs from the
	  reset vector at 0xfffffff0 on both resume and warm/cold boot.

config HAVE_HARD_RESET
	bool
	default n
	help
	  This variable specifies whether a given board has a hard_reset
	  function, no matter if it's provided by board code or chipset code.

config HAVE_ROMSTAGE_CONSOLE_SPINLOCK
	bool
	default n

config HAVE_ROMSTAGE_NVRAM_CBFS_SPINLOCK
	bool
	default n
	help
	  This should be enabled on certain plaforms, such as the AMD
	  SR565x, that cannot handle concurrent CBFS accesses from
	  multiple APs during early startup.

config HAVE_ROMSTAGE_MICROCODE_CBFS_SPINLOCK
	bool
	default n

config HAVE_MONOTONIC_TIMER
	def_bool n
	help
	 The board/chipset provides a monotonic timer.

config GENERIC_UDELAY
	def_bool n
	depends on HAVE_MONOTONIC_TIMER
	help
	 The board/chipset uses a generic udelay function utilizing the
	 monotonic timer.

config TIMER_QUEUE
	def_bool n
	depends on HAVE_MONOTONIC_TIMER
	help
	  Provide a timer queue for performing time-based callbacks.

config COOP_MULTITASKING
	def_bool n
	depends on TIMER_QUEUE && ARCH_X86
	help
	  Cooperative multitasking allows callbacks to be multiplexed on the
	  main thread of ramstage. With this enabled it allows for multiple
	  execution paths to take place when they have udelay() calls within
	  their code.

config NUM_THREADS
	int
	default 4
	depends on COOP_MULTITASKING
	help
	  How many execution threads to cooperatively multitask with.

config HAVE_OPTION_TABLE
	bool
	default n
	help
	  This variable specifies whether a given board has a cmos.layout
	  file containing NVRAM/CMOS bit definitions.
	  It defaults to 'n' but can be selected in mainboard/*/Kconfig.

config PIRQ_ROUTE
	bool
	default n

config HAVE_SMI_HANDLER
	bool
	default n

config PCI_IO_CFG_EXT
	bool
	default n

config IOAPIC
	bool
	default n

config CACHE_ROM_SIZE_OVERRIDE
	hex
	default 0

# TODO: Can probably be removed once all chipsets have kconfig options for it.
config VIDEO_MB
	int
	default 0

config USE_WATCHDOG_ON_BOOT
	bool
	default n

config VGA
	bool
	default n
	help
	  Build board-specific VGA code.

config GFXUMA
	bool
	default n
	help
	  Enable Unified Memory Architecture for graphics.

config HAVE_ACPI_TABLES
	bool
	help
	  This variable specifies whether a given board has ACPI table support.
	  It is usually set in mainboard/*/Kconfig.

config HAVE_MP_TABLE
	bool
	help
	  This variable specifies whether a given board has MP table support.
	  It is usually set in mainboard/*/Kconfig.
	  Whether or not the MP table is actually generated by coreboot
	  is configurable by the user via GENERATE_MP_TABLE.

config HAVE_PIRQ_TABLE
	bool
	help
	  This variable specifies whether a given board has PIRQ table support.
	  It is usually set in mainboard/*/Kconfig.
	  Whether or not the PIRQ table is actually generated by coreboot
	  is configurable by the user via GENERATE_PIRQ_TABLE.

config MAX_PIRQ_LINKS
	int
	default 4
	help
	  This variable specifies the number of PIRQ interrupt links which are
	  routable. On most chipsets, this is 4, INTA through INTD. Some
	  chipsets offer more than four links, commonly up to INTH. They may
	  also have a separate link for ATA or IOAPIC interrupts. When the PIRQ
	  table specifies links greater than 4, pirq_route_irqs will not
	  function properly, unless this variable is correctly set.

config COMMON_FADT
	bool
	default n

config ACPI_NHLT
	bool
	default n
	help
	  Build support for NHLT (non HD Audio) ACPI table generation.


config COREBOOT_TABLE_SIZE
	hex
	default 0x8000 if ARCH_X86
	default 0x2000 if !ARCH_X86
	help
	  The amount of memory to reserve for the coreboot tables in
	  cbmem.

#These Options are here to avoid "undefined" warnings.
#The actual selection and help texts are in the following menu.

menu "System tables"

config GENERATE_MP_TABLE
	prompt "Generate an MP table" if HAVE_MP_TABLE || DRIVERS_GENERIC_IOAPIC
	bool
	default HAVE_MP_TABLE || DRIVERS_GENERIC_IOAPIC
	help
	  Generate an MP table (conforming to the Intel MultiProcessor
	  specification 1.4) for this board.

	  If unsure, say Y.

config GENERATE_PIRQ_TABLE
	prompt "Generate a PIRQ table" if HAVE_PIRQ_TABLE
	bool
	default HAVE_PIRQ_TABLE
	help
	  Generate a PIRQ table for this board.

	  If unsure, say Y.

config GENERATE_SMBIOS_TABLES
	depends on ARCH_X86
	bool "Generate SMBIOS tables"
	default y
	help
	  Generate SMBIOS tables for this board.

	  If unsure, say Y.

config SMBIOS_PROVIDED_BY_MOBO
	bool
	default n

config MAINBOARD_SERIAL_NUMBER
	string "SMBIOS Serial Number"
	depends on GENERATE_SMBIOS_TABLES
	depends on !SMBIOS_PROVIDED_BY_MOBO
	default "123456789"
	help
	  The Serial Number to store in SMBIOS structures.

config MAINBOARD_VERSION
	string "SMBIOS Version Number"
	depends on GENERATE_SMBIOS_TABLES
	depends on !SMBIOS_PROVIDED_BY_MOBO
	default "1.0"
	help
	  The Version Number to store in SMBIOS structures.

config MAINBOARD_SMBIOS_MANUFACTURER
	string "SMBIOS Manufacturer"
	depends on GENERATE_SMBIOS_TABLES
	depends on !SMBIOS_PROVIDED_BY_MOBO
	default MAINBOARD_VENDOR
	help
	  Override the default Manufacturer stored in SMBIOS structures.

config MAINBOARD_SMBIOS_PRODUCT_NAME
	string "SMBIOS Product name"
	depends on GENERATE_SMBIOS_TABLES
	depends on !SMBIOS_PROVIDED_BY_MOBO
	default MAINBOARD_PART_NUMBER
	help
	  Override the default Product name stored in SMBIOS structures.

endmenu

menu "Payload"

choice
	prompt "Add a payload"
	default PAYLOAD_NONE if !ARCH_X86
	default PAYLOAD_SEABIOS if ARCH_X86

config PAYLOAD_NONE
	bool "None"
	help
	  Select this option if you want to create an "empty" coreboot
	  ROM image for a certain mainboard, i.e. a coreboot ROM image
	  which does not yet contain a payload.

	  For such an image to be useful, you have to use 'cbfstool'
	  to add a payload to the ROM image later.

config PAYLOAD_ELF
	bool "An ELF executable payload"
	help
	  Select this option if you have a payload image (an ELF file)
	  which coreboot should run as soon as the basic hardware
	  initialization is completed.

	  You will be able to specify the location and file name of the
	  payload image later.

config PAYLOAD_SEABIOS
	bool "SeaBIOS"
	depends on ARCH_X86
	help
	  Select this option if you want to build a coreboot image
	  with a SeaBIOS payload. If you don't know what this is
	  about, just leave it enabled.

	  See http://coreboot.org/Payloads for more information.
config PAYLOAD_LINUX
	bool "A Linux payload"
	help
	  Select this option if you have a Linux bzImage which coreboot
	  should run as soon as the basic hardware initialization
	  is completed.

	  You will be able to specify the location and file name of the
	  payload image later.
config PAYLOAD_DEPTHCHARGE
	bool "Depthcharge"
	depends on CHROMEOS
	help
	  Select this option if you want to build a coreboot image
	  with a depthcharge payload.

	  See http://coreboot.org/Payloads for more information.
config PAYLOAD_UBOOT
	bool "U-Boot (Experimental)"
	depends on ARCH_X86
	help
	  Select this option if you want to build a coreboot image
	  with a U-Boot payload.

	  See http://coreboot.org/Payloads and U-Boot's documentation
	  at http://git.denx.de/?p=u-boot.git;a=blob;f=doc/README.x86
	  for more information.

config PAYLOAD_GRUB2
	bool "GRUB2"
	help
	  Select this option if you want to build a coreboot image
	  with a GRUB2 payload. If you don't know what this is
	  about, just leave it enabled.

	  See http://coreboot.org/Payloads for more information.
config PAYLOAD_FILO
	bool "FILO"
	help
	  Select this option if you want to build a coreboot image
	  with a FILO payload. If you don't know what this is
	  about, just leave it enabled.

	  See http://coreboot.org/Payloads for more information.
config PAYLOAD_TIANOCORE
	bool "Tiano Core"
	help
	  Select this option if you want to build a coreboot image
	  with a Tiano Core payload. If you don't know what this is
	  about, just leave it enabled.

	  See http://coreboot.org/Payloads for more information.

endchoice

##
## This file is part of the coreboot project.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##

choice
	prompt "Add a PXE ROM"
	default PXE_ROM
	depends on ARCH_X86
	optional

config PXE_ROM
	bool "Add an existing PXE ROM image"
	help
	  Select this option if you have a PXE ROM image that you would
	  like to add to your ROM.

config BUILD_IPXE
	bool "Build and add an iPXE ROM"
	help
	  Select this option to fetch and build a ROM from the iPXE project.

endchoice

choice
	prompt "iPXE version"
	default IPXE_STABLE
	depends on BUILD_IPXE

config IPXE_STABLE
	bool "2016.2"
	help
	  iPXE uses a rolling release with no stable version, for
	  reproducibility, use the last commit of a given month as the
	  'stable' version.
	  This is iPXE from the end of February, 2016.

config IPXE_MASTER
	bool "master"
	help
	  Newest iPXE version.

endchoice

config PXE_ROM_FILE
	string "PXE ROM filename"
	depends on PXE_ROM
	default "pxe.rom"
	help
	  The path and filename of the file to use as PXE ROM.

config PXE_ROM_ID
	string "network card PCI IDs"
	depends on PXE_ROM || BUILD_IPXE
	default "10ec,8168"
	help
	  The comma-separated PCI vendor and device ID that would associate
	  your PXE ROM to your network card.

	  Example: 10ec,8168

	  In the above example 10ec is the PCI vendor ID (in hex, but without
	  the "0x" prefix) and 8168 specifies the PCI device ID of the
	  network card (also in hex, without "0x" prefix).

	  Under GNU/Linux you can run `lspci -nn` to list the IDs of your PCI devices.
if PAYLOAD_SEABIOS

choice
	prompt "SeaBIOS version"
	default SEABIOS_STABLE

config SEABIOS_STABLE
	bool "1.9.1"
	help
	  Stable SeaBIOS version
config SEABIOS_MASTER
	bool "master"
	help
	  Newest SeaBIOS version
config SEABIOS_REVISION
	bool "git revision"
	help
	  Select this option if you have a specific commit or branch
	  that you want to use as the revision from which to
	  build SeaBIOS.

	  You will be able to specify the name of a branch or a commit id
	  later.

endchoice

config SEABIOS_REVISION_ID
	string "Insert a commit's SHA-1 or a branch name"
	depends on SEABIOS_REVISION
	default "origin/master"
	help
	   The commit's SHA-1 or branch name of the revision to use.

config SEABIOS_PS2_TIMEOUT
	prompt "PS/2 keyboard controller initialization timeout (milliseconds)"
	default 0
	int
	help
	  Some PS/2 keyboard controllers don't respond to commands immediately
	  after powering on. This specifies how long SeaBIOS will wait for the
	  keyboard controller to become ready before giving up.

config SEABIOS_THREAD_OPTIONROMS
	prompt "Hardware init during option ROM execution"
	default n
	bool
	help
	  Allow hardware init to run in parallel with optionrom execution.

	  This can reduce boot time, but can cause some timing
	  variations during option ROM code execution. It is not
	  known if all option ROMs will behave properly with this option.

config SEABIOS_VGA_COREBOOT
	prompt "Include generated option rom that implements legacy VGA BIOS compatibility"
	default n
	depends on !VGA_BIOS && (MAINBOARD_DO_NATIVE_VGA_INIT || MAINBOARD_HAS_NATIVE_VGA_INIT_TEXTMODECFG)
	bool
	help
	  Coreboot can initialize the GPU of some mainboards.

	  After initializing the GPU, the information about it can be passed to the payload.
	  Provide an option rom that implements this legacy VGA BIOS compatibility requirement.

config PAYLOAD_CONFIGFILE
	string "SeaBIOS config file"
	default ""
	help
	  This option allows a platform to set Kconfig options for a basic
	  SeaBIOS payload.  In general, if the option is used, the default
	  would be "$(top)/src/mainboard/$(MAINBOARDDIR)/config_seabios"

config PAYLOAD_FILE
	default "payloads/external/SeaBIOS/seabios/out/bios.bin.elf"

config PAYLOAD_VGABIOS_FILE
	string
	depends on SEABIOS_VGA_COREBOOT
	default "payloads/external/SeaBIOS/seabios/out/vgabios.bin"

endif
if PAYLOAD_LINUX

config PAYLOAD_FILE
	string "Linux path and filename"
	default "bzImage"
	help
	  The path and filename of the bzImage kernel to use as payload.

config LINUX_COMMAND_LINE
	string "Linux command line"
	default ""
	help
	  A command line to add to the Linux kernel.

config LINUX_INITRD
	string "Linux initrd"
	default ""
	help
	  An initrd image to add to the Linux kernel.

endif
if PAYLOAD_DEPTHCHARGE

config PAYLOAD_FILE
	string
	default "payloads/external/depthcharge/depthcharge/build/depthcharge.elf"

endif
if PAYLOAD_UBOOT

config PAYLOAD_SPECIFIC_OPTIONS # dummy
	def_bool y
	select PAYLOAD_IS_FLAT_BINARY

choice
	prompt "U-Boot version"
	default UBOOT_STABLE

config UBOOT_STABLE
	bool "v2016.1"
	help
	  Stable U-Boot version

config UBOOT_MASTER
	bool "master"
	help
	  Newest U-Boot version

endchoice

config PAYLOAD_CONFIGFILE
	string "U-Boot config file"
	default ""
	help
	  This option allows a platform to set Kconfig options for a basic
	  U-Boot payload.  In general, if the option is used, the default
	  would be "$(top)/src/mainboard/$(MAINBOARDDIR)/config_uboot"
	  for a config stored in the coreboot mainboard directory, or
	  "$(project_dir)/configs/coreboot-x86_defconfig" to use a config
	  from the U-Boot config directory

config PAYLOAD_FILE
	default "payloads/external/U-Boot/u-boot/u-boot-dtb.bin"

config PAYLOAD_OPTIONS
	default "-l 0x1110000 -e 0x1110015"

endif
if PAYLOAD_GRUB2

choice
	prompt "GRUB2 version"
	default GRUB2_MASTER

config GRUB2_MASTER
	bool "HEAD"
	help
	  Newest GRUB2 version

endchoice

config GRUB2_EXTRA_MODULES
	string "Extra modules to include in GRUB image"
	help
	  Space-separated list of additional modules to include. Few common
	  ones:
	  * bsd for *BSD
	  * png/jpg for PNG/JPG images
	  * gfxmenu for graphical menus (you'll need a theme as well)
	  * gfxterm_background for setting background

config PAYLOAD_FILE
	default "payloads/external/GRUB2/grub2/build/default_payload.elf"

endif
if PAYLOAD_FILO

choice
	prompt "FILO version"
	default FILO_STABLE

config FILO_STABLE
	bool "0.6.0"
	help
	  Stable FILO version

config FILO_MASTER
	bool "HEAD"
	help
	  Newest FILO version

endchoice

config PAYLOAD_FILE
	default "payloads/external/FILO/filo/build/filo.elf"

endif
if PAYLOAD_TIANOCORE

config PAYLOAD_FILE
	string "Tianocore firmware volume"
	default "COREBOOT.fd"
	help
	  The result of a corebootPkg build

endif

config PAYLOAD_FILE
	string "Payload path and filename"
	depends on PAYLOAD_ELF
	default "payload.elf"
	help
	  The path and filename of the ELF executable file to use as payload.

# TODO: Defined if no payload? Breaks build?
config COMPRESSED_PAYLOAD_LZMA
	bool "Use LZMA compression for payloads"
	default y
	depends on !PAYLOAD_NONE && !PAYLOAD_LINUX
	help
	  In order to reduce the size payloads take up in the ROM chip
	  coreboot can compress them using the LZMA algorithm.

config PAYLOAD_OPTIONS
	string
	default ""
	help
	  Additional cbfstool options for the payload

config PAYLOAD_IS_FLAT_BINARY
	def_bool n
	help
	  Add the payload to cbfs as a flat binary type instead of as an
	  elf payload

menu "Secondary Payloads"

config COREINFO_SECONDARY_PAYLOAD
	bool "Load coreinfo as a secondary payload"
	default n
	depends on ARCH_X86
	help
	  coreinfo can be loaded as a secondary payload under SeaBIOS, GRUB,
	  or any other payload that can load additional payloads.

config MEMTEST_SECONDARY_PAYLOAD
	bool "Load Memtest86+ as a secondary payload"
	default n
	depends on ARCH_X86
	help
	  Memtest86+ can be loaded as a secondary payload under SeaBIOS, GRUB,
	  or any other payload that can load additional payloads.

choice
	prompt "Memtest86+ version"
	default MEMTEST_STABLE
	depends on MEMTEST_SECONDARY_PAYLOAD

config MEMTEST_STABLE
	bool "Stable"
	help
	  Stable Memtest86+ version.

	  For reproducible builds, this option must be selected.
config MEMTEST_MASTER
	bool "Master"
	help
	  Newest Memtest86+ version.

	  This option will fetch the newest version of the Memtest86+ code,
	  updating as new changes are committed.  This makes the build
	  non-reproducible, as it can fetch different code each time.
endchoice

config NVRAMCUI_SECONDARY_PAYLOAD
	bool "Load nvramcui as a secondary payload"
	default n
	depends on ARCH_X86
	help
	  nvramcui can be loaded as a secondary payload under SeaBIOS, GRUB,
	  or any other payload that can load additional payloads.

endmenu # "Secondary Payloads"
endmenu

menu "Debugging"

# TODO: Better help text and detailed instructions.
config GDB_STUB
	bool "GDB debugging support"
	default n
	depends on CONSOLE_SERIAL
	help
	  If enabled, you will be able to set breakpoints for gdb debugging.
	  See src/arch/x86/lib/c_start.S for details.

config GDB_WAIT
	bool "Wait for a GDB connection"
	default n
	depends on GDB_STUB
	help
	  If enabled, coreboot will wait for a GDB connection.

config FATAL_ASSERTS
	bool "Halt when hitting a BUG() or assertion error"
	default n
	help
	  If enabled, coreboot will call hlt() on a BUG() or failed ASSERT().

config DEBUG_CBFS
	bool "Output verbose CBFS debug messages"
	default n
	help
	  This option enables additional CBFS related debug messages.

config HAVE_DEBUG_RAM_SETUP
	def_bool n

config DEBUG_RAM_SETUP
	bool "Output verbose RAM init debug messages"
	default n
	depends on HAVE_DEBUG_RAM_SETUP
	help
	  This option enables additional RAM init related debug messages.
	  It is recommended to enable this when debugging issues on your
	  board which might be RAM init related.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config HAVE_DEBUG_CAR
	def_bool n

config DEBUG_CAR
	def_bool n
	depends on HAVE_DEBUG_CAR

if DEFAULT_CONSOLE_LOGLEVEL_7 || DEFAULT_CONSOLE_LOGLEVEL_8
# Only visible if debug level is DEBUG (7) or SPEW (8) as it does additional
# printk(BIOS_DEBUG, ...) calls.
config DEBUG_CAR
	bool "Output verbose Cache-as-RAM debug messages"
	default n
	depends on HAVE_DEBUG_CAR
	help
	  This option enables additional CAR related debug messages.
endif

config DEBUG_PIRQ
	bool "Check PIRQ table consistency"
	default n
	depends on GENERATE_PIRQ_TABLE
	help
	  If unsure, say N.

config HAVE_DEBUG_SMBUS
	def_bool n

config DEBUG_SMBUS
	bool "Output verbose SMBus debug messages"
	default n
	depends on HAVE_DEBUG_SMBUS
	help
	  This option enables additional SMBus (and SPD) debug messages.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config DEBUG_SMI
	bool "Output verbose SMI debug messages"
	default n
	depends on HAVE_SMI_HANDLER
	select SPI_FLASH_SMM if SPI_CONSOLE
	help
	  This option enables additional SMI related debug messages.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config DEBUG_SMM_RELOCATION
	bool "Debug SMM relocation code"
	default n
	depends on HAVE_SMI_HANDLER
	help
	  This option enables additional SMM handler relocation related
	  debug messages.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

# Only visible if debug level is DEBUG (7) or SPEW (8) as it does additional
# printk(BIOS_DEBUG, ...) calls.
config DEBUG_MALLOC
	prompt "Output verbose malloc debug messages" if DEFAULT_CONSOLE_LOGLEVEL_7 || DEFAULT_CONSOLE_LOGLEVEL_8
	bool
	default n
	help
	  This option enables additional malloc related debug messages.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

# Only visible if debug level is DEBUG (7) or SPEW (8) as it does additional
# printk(BIOS_DEBUG, ...) calls.
config DEBUG_ACPI
	prompt "Output verbose ACPI debug messages" if DEFAULT_CONSOLE_LOGLEVEL_7 || DEFAULT_CONSOLE_LOGLEVEL_8
	bool
	default n
	help
	  This option enables additional ACPI related debug messages.

	  Note: This option will slightly increase the size of the coreboot image.

	  If unsure, say N.

# Only visible if debug level is DEBUG (7) or SPEW (8) as it does additional
# printk(BIOS_DEBUG, ...) calls.
config REALMODE_DEBUG
	prompt "Enable debug messages for option ROM execution" if DEFAULT_CONSOLE_LOGLEVEL_7 || DEFAULT_CONSOLE_LOGLEVEL_8
	bool
	default n
	depends on PCI_OPTION_ROM_RUN_REALMODE
	help
	  This option enables additional x86emu related debug messages.

	  Note: This option will increase the time to emulate a ROM.

	  If unsure, say N.

config X86EMU_DEBUG
	bool "Output verbose x86emu debug messages"
	default n
	depends on PCI_OPTION_ROM_RUN_YABEL
	help
	  This option enables additional x86emu related debug messages.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_JMP
	bool "Trace JMP/RETF"
	default n
	depends on X86EMU_DEBUG
	help
	  Print information about JMP and RETF opcodes from x86emu.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_TRACE
	bool "Trace all opcodes"
	default n
	depends on X86EMU_DEBUG
	help
	  Print _all_ opcodes that are executed by x86emu.

	  WARNING: This will produce a LOT of output and take a long time.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_PNP
	bool "Log Plug&Play accesses"
	default n
	depends on X86EMU_DEBUG
	help
	  Print Plug And Play accesses made by option ROMs.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_DISK
	bool "Log Disk I/O"
	default n
	depends on X86EMU_DEBUG
	help
	  Print Disk I/O related messages.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_PMM
	bool "Log PMM"
	default n
	depends on X86EMU_DEBUG
	help
	  Print messages related to POST Memory Manager (PMM).

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.


config X86EMU_DEBUG_VBE
	bool "Debug VESA BIOS Extensions"
	default n
	depends on X86EMU_DEBUG
	help
	  Print messages related to VESA BIOS Extension (VBE) functions.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_INT10
	bool "Redirect INT10 output to console"
	default n
	depends on X86EMU_DEBUG
	help
	  Let INT10 (i.e. character output) calls print messages to debug output.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_INTERRUPTS
	bool "Log intXX calls"
	default n
	depends on X86EMU_DEBUG
	help
	  Print messages related to interrupt handling.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_CHECK_VMEM_ACCESS
	bool "Log special memory accesses"
	default n
	depends on X86EMU_DEBUG
	help
	  Print messages related to accesses to certain areas of the virtual
	  memory (e.g. BDA (BIOS Data Area) or interrupt vectors)

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_MEM
	bool "Log all memory accesses"
	default n
	depends on X86EMU_DEBUG
	help
	  Print memory accesses made by option ROM.
	  Note: This also includes accesses to fetch instructions.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_IO
	bool "Log IO accesses"
	default n
	depends on X86EMU_DEBUG
	help
	  Print I/O accesses made by option ROM.

	  Note: This option will increase the size of the coreboot image.

	  If unsure, say N.

config X86EMU_DEBUG_TIMINGS
	bool "Output timing information"
	default n
	depends on X86EMU_DEBUG && UDELAY_LAPIC && HAVE_MONOTONIC_TIMER
	help
	  Print timing information needed by i915tool.

	  If unsure, say N.

config DEBUG_TPM
	bool "Output verbose TPM debug messages"
	default n
	depends on TPM
	help
	  This option enables additional TPM related debug messages.

config DEBUG_SPI_FLASH
	bool "Output verbose SPI flash debug messages"
	default n
	depends on SPI_FLASH
	help
	  This option enables additional SPI flash related debug messages.

config DEBUG_USBDEBUG
	bool "Output verbose USB 2.0 EHCI debug dongle messages"
	default n
	depends on USBDEBUG
	help
	  This option enables additional USB 2.0 debug dongle related messages.

	  Select this to debug the connection of usbdebug dongle. Note that
	  you need some other working console to receive the messages.

if SOUTHBRIDGE_INTEL_BD82X6X && DEFAULT_CONSOLE_LOGLEVEL_8
# Only visible with the right southbridge and loglevel.
config DEBUG_INTEL_ME
	bool "Verbose logging for Intel Management Engine"
	default n
	help
	  Enable verbose logging for Intel Management Engine driver that
	  is present on Intel 6-series chipsets.
endif

config TRACE
	bool "Trace function calls"
	default n
	help
	  If enabled, every function will print information to console once
	  the function is entered. The syntax is ~0xaaaabbbb(0xccccdddd)
	  the 0xaaaabbbb is the actual function and 0xccccdddd is EIP
	  of calling function. Please note some printk related functions
	  are omitted from trace to have good looking console dumps.

config DEBUG_COVERAGE
	bool "Debug code coverage"
	default n
	depends on COVERAGE
	help
	  If enabled, the code coverage hooks in coreboot will output some
	  information about the coverage data that is dumped.

endmenu

# These probably belong somewhere else, but they are needed somewhere.
config ENABLE_APIC_EXT_ID
	bool
	default n

config WARNINGS_ARE_ERRORS
	bool
	default y

# TODO: Remove this when all platforms are fixed.
config IASL_WARNINGS_ARE_ERRORS
	def_bool y
	help
	  Select to Fail the build if a IASL generates a warning.
	  This will be defaulted to disabled for the platforms that
	  currently fail.  This allows the REST of the platforms to
	  have this check enabled while we're working to get those
	  boards fixed.

	  DO NOT ADD TO ANY ADDITIONAL PLATFORMS INSTEAD OF FIXING
	  THE ASL.

# The four POWER_BUTTON_DEFAULT_ENABLE, POWER_BUTTON_DEFAULT_DISABLE,
# POWER_BUTTON_FORCE_ENABLE and POWER_BUTTON_FORCE_DISABLE options are
# mutually exclusive. One of these options must be selected in the
# mainboard Kconfig if the chipset supports enabling and disabling of
# the power button. Chipset code uses the ENABLE_POWER_BUTTON option set
# in mainboard/Kconfig to know if the button should be enabled or not.

config POWER_BUTTON_DEFAULT_ENABLE
	def_bool n
	help
	  Select when the board has a power button which can optionally be
	  disabled by the user.

config POWER_BUTTON_DEFAULT_DISABLE
	def_bool n
	help
	  Select when the board has a power button which can optionally be
	  enabled by the user, e.g. when the board ships with a jumper over
	  the power switch contacts.

config POWER_BUTTON_FORCE_ENABLE
	def_bool n
	help
	  Select when the board requires that the power button is always
	  enabled.

config POWER_BUTTON_FORCE_DISABLE
	def_bool n
	help
	  Select when the board requires that the power button is always
	  disabled, e.g. when it has been hardwired to ground.

config POWER_BUTTON_IS_OPTIONAL
	bool
	default y if POWER_BUTTON_DEFAULT_ENABLE || POWER_BUTTON_DEFAULT_DISABLE
	default n if !(POWER_BUTTON_DEFAULT_ENABLE || POWER_BUTTON_DEFAULT_DISABLE)
	help
	  Internal option that controls ENABLE_POWER_BUTTON visibility.

config REG_SCRIPT
	bool
	default n
	help
	  Internal option that controls whether we compile in register scripts.

config MAX_REBOOT_CNT
	int
	default 3
	help
	  Internal option that sets the maximum number of bootblock executions allowed
	  with the normal image enabled before assuming the normal image is defective
	  and switching to the fallback image.

config CBFS_SIZE
	hex
	default ROM_SIZE
	help
	  This is the part of the ROM actually managed by CBFS.  Set it to be
	  equal to the full rom size if that hasn't been overridden by the
	  chipset or mainboard.

config DEBUG_BOOT_STATE
	bool
	default n
	help
	  Control debugging of the boot state machine.  When selected displays
	  the state boundaries in ramstage.
